
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("ItemName",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxText")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxText")
   newclass #ItemName
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"ItemName")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   import org.flixel.FlxText;
   
   public class ItemName extends FlxText
   {
      
      private static const FADEOUT_START:Number = 2.8;
      
      private static const FADEOUT_END:Number = 3.5;
      
      private static var _fadeOutStart:Number;
      
      private static var _fadeOutEnd:Number;
      
      private static var _colorNum:Number;
      
      private static const _colors:Array;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 5
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#ItemName"),"FADEOUT_START")
         pushdouble 2.8
         initproperty QName(PrivateNamespace(null,"#ItemName"),"FADEOUT_START")
         findproperty QName(PrivateNamespace(null,"#ItemName"),"FADEOUT_END")
         pushdouble 3.5
         initproperty QName(PrivateNamespace(null,"#ItemName"),"FADEOUT_END")
         findproperty QName(PrivateNamespace(null,"#ItemName"),"_colors")
         pushint 16040160
         pushint 16570500
         pushint 11595992
         pushint 12370116
         newarray 4
         initproperty QName(PrivateNamespace(null,"#ItemName"),"_colors")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function ItemName()
      {
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         pushbyte 0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"height")
         pushbyte 2
         divide
         pushbyte 40
         add
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"width")
         constructsuper 3
         findproperty QName(PackageNamespace(""),"font")
         getlex QName(PackageNamespace(""),"Fonts")
         getproperty QName(PackageNamespace(""),"normal")
         initproperty QName(PackageNamespace(""),"font")
         findproperty QName(PackageNamespace(""),"size")
         pushbyte 20
         initproperty QName(PackageNamespace(""),"size")
         findproperty QName(PackageNamespace(""),"color")
         pushint 16040160
         initproperty QName(PackageNamespace(""),"color")
         findproperty QName(PrivateNamespace(null,"#ItemName"),"_colorNum")
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"#ItemName"),"_colorNum")
         findproperty QName(PackageNamespace(""),"shadow")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"shadow")
         findproperty QName(PackageNamespace(""),"alignment")
         pushstring "center"
         initproperty QName(PackageNamespace(""),"alignment")
         getlex QName(PackageNamespace(""),"scrollFactor")
         getlex QName(PackageNamespace(""),"scrollFactor")
         pushbyte 0
         dup
         setlocal1
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         kill 1
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"outline")
         pushtrue
         initproperty QName(PackageNamespace(""),"outline")
         findproperty QName(PackageNamespace(""),"outlineColor")
         pushdouble 4.27819008E9
         initproperty QName(PackageNamespace(""),"outlineColor")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setItem(param1:String, param2:Number = 0) : void
      {
         trait method QName(PackageNamespace(""),"setItem")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Number")
         optional Integer(0)
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#ItemName"),"_fadeOutStart")
         getlex QName(PrivateNamespace(null,"#ItemName"),"FADEOUT_START")
         getlocal2
         add
         setproperty QName(PrivateNamespace(null,"#ItemName"),"_fadeOutStart")
         findproperty QName(PrivateNamespace(null,"#ItemName"),"_fadeOutEnd")
         getlex QName(PrivateNamespace(null,"#ItemName"),"FADEOUT_END")
         getlocal2
         add
         setproperty QName(PrivateNamespace(null,"#ItemName"),"_fadeOutEnd")
         findproperty QName(PackageNamespace(""),"text")
         getlocal1
         initproperty QName(PackageNamespace(""),"text")
         findproperty QName(PackageNamespace(""),"alpha")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"alpha")
         findproperty QName(PackageNamespace(""),"active")
         pushtrue
         initproperty QName(PackageNamespace(""),"active")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"itemRate")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         callproperty QName(PackageNamespace(""),"getPercentComplete"), 0
         getlocal2
         callpropvoid QName(PackageNamespace(""),"setRate"), 2
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"itemRateHud")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         callproperty QName(PackageNamespace(""),"getPercentComplete"), 0
         callpropvoid QName(PackageNamespace(""),"setRate"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         findproperty QName(PrivateNamespace(null,"#ItemName"),"_colorNum")
         getlex QName(PrivateNamespace(null,"#ItemName"),"_colorNum")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         pushbyte 30
         multiply
         add
         setproperty QName(PrivateNamespace(null,"#ItemName"),"_colorNum")
         findproperty QName(PackageNamespace(""),"color")
         getlex QName(PrivateNamespace(null,"#ItemName"),"_colors")
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PrivateNamespace(null,"#ItemName"),"_colorNum")
         callproperty QName(PackageNamespace(""),"int"), 1
         getlex QName(PrivateNamespace(null,"#ItemName"),"_colors")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         getproperty MultinameL([PrivateNamespace(null,"#ItemName"),PackageNamespace("org.flixel"),PackageNamespace(""),PrivateNamespace(null,"#ItemName/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ItemName"),StaticProtectedNs("ItemName"),StaticProtectedNs("org.flixel:FlxText"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         initproperty QName(PackageNamespace(""),"color")
         findproperty QName(PrivateNamespace(null,"#ItemName"),"_fadeOutStart")
         getlex QName(PrivateNamespace(null,"#ItemName"),"_fadeOutStart")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         setproperty QName(PrivateNamespace(null,"#ItemName"),"_fadeOutStart")
         findproperty QName(PrivateNamespace(null,"#ItemName"),"_fadeOutEnd")
         getlex QName(PrivateNamespace(null,"#ItemName"),"_fadeOutEnd")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         setproperty QName(PrivateNamespace(null,"#ItemName"),"_fadeOutEnd")
         getlex QName(PrivateNamespace(null,"#ItemName"),"_fadeOutEnd")
         pushbyte 0
         ifnlt ofs1
         findproperty QName(PackageNamespace(""),"text")
         pushstring ""
         initproperty QName(PackageNamespace(""),"text")
         findproperty QName(PackageNamespace(""),"active")
         pushfalse
         initproperty QName(PackageNamespace(""),"active")
         jump ofs2
         ofs1:
         getlex QName(PrivateNamespace(null,"#ItemName"),"_fadeOutStart")
         pushbyte 0
         ifnlt ofs2
         findproperty QName(PackageNamespace(""),"alpha")
         getlex QName(PrivateNamespace(null,"#ItemName"),"_fadeOutEnd")
         getlex QName(PrivateNamespace(null,"#ItemName"),"FADEOUT_END")
         getlex QName(PrivateNamespace(null,"#ItemName"),"FADEOUT_START")
         subtract
         divide
         initproperty QName(PackageNamespace(""),"alpha")
         ofs2:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
