
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("BossRushTimer",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxText")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxText")
   newclass #BossRushTimer
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"BossRushTimer")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   import org.flixel.FlxText;
   
   public class BossRushTimer extends FlxText
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var now:ShadowNumber;
      
      public var started:Boolean = false;
      
      public var going:Boolean = false;
      
      public function BossRushTimer()
      {
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         pushbyte 0
         pushbyte 4
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"width")
         pushbyte 4
         subtract
         constructsuper 3
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 0
         initproperty QName(PackageNamespace(""),"now")
         findproperty QName(PackageNamespace(""),"font")
         getlex QName(PackageNamespace(""),"Fonts")
         getproperty QName(PackageNamespace(""),"normal")
         initproperty QName(PackageNamespace(""),"font")
         findproperty QName(PackageNamespace(""),"size")
         pushbyte 20
         initproperty QName(PackageNamespace(""),"size")
         findproperty QName(PackageNamespace(""),"color")
         pushint 16777215
         initproperty QName(PackageNamespace(""),"color")
         findproperty QName(PackageNamespace(""),"shadow")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"shadow")
         findproperty QName(PackageNamespace(""),"alignment")
         pushstring "right"
         initproperty QName(PackageNamespace(""),"alignment")
         getlex QName(PackageNamespace(""),"scrollFactor")
         getlex QName(PackageNamespace(""),"scrollFactor")
         pushbyte 0
         dup
         setlocal1
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         kill 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"setShadowDistance")
         pushbyte 1
         callpropvoid QName(PackageNamespace(""),"setShadowDistance"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"now")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         pushfalse
         initproperty QName(PackageNamespace(""),"going")
         getlocal0
         pushfalse
         initproperty QName(PackageNamespace(""),"started")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method QName(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"now")
         getlocal0
         callsupervoid QName(PackageNamespace(""),"destroy"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function padZero(param1:int) : String
      {
         trait method QName(PackageNamespace(""),"padZero")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal1
         pushbyte 10
         ifnlt ofs0
         pushstring "0"
         getlocal1
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         returnvalue
         ofs0:
         getlocal1
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getTime() : String
      {
         trait method QName(PackageNamespace(""),"getTime")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 5
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal0
         getproperty QName(PackageNamespace(""),"now")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 60
         divide
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         pushstring ":"
         add
         getlocal0
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal0
         getproperty QName(PackageNamespace(""),"now")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 60
         modulo
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"padZero"), 1
         add
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getTimeExact() : String
      {
         trait method QName(PackageNamespace(""),"getTimeExact")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 5
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal0
         getproperty QName(PackageNamespace(""),"now")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 60
         divide
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         pushstring ":"
         add
         getlocal0
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal0
         getproperty QName(PackageNamespace(""),"now")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 60
         modulo
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"padZero"), 1
         add
         pushstring "."
         add
         getlocal0
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal0
         getproperty QName(PackageNamespace(""),"now")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 100
         multiply
         pushbyte 100
         modulo
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"padZero"), 1
         add
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"going")
         iffalse ofs1
         getlocal0
         getproperty QName(PackageNamespace(""),"now")
         getlocal0
         getproperty QName(PackageNamespace(""),"now")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         add
         setproperty QName(PackageNamespace(""),"value")
         findproperty QName(PackageNamespace(""),"text")
         getlocal0
         callproperty QName(PackageNamespace(""),"getTime"), 0
         initproperty QName(PackageNamespace(""),"text")
         ofs1:
         findproperty QName(PackageNamespace(""),"visible")
         getlocal0
         getproperty QName(PackageNamespace(""),"started")
         initproperty QName(PackageNamespace(""),"visible")
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
