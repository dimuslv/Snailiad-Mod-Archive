
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 7
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("Star",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   newclass #Star
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"Star")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   import org.flixel.FlxSprite;
   import org.flixel.FlxU;
   
   public class Star extends FlxSprite
   {
      
      private static const IMG_WIDTH:int = 16;
      
      private static const IMG_HEIGHT:int = 16;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#Star"),"IMG_WIDTH")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#Star"),"IMG_WIDTH")
         findproperty QName(PrivateNamespace(null,"#Star"),"IMG_HEIGHT")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#Star"),"IMG_HEIGHT")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function Star()
      {
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"Star")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"#Star"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"#Star"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"#Star"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"#Star"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         getlex QName(PackageNamespace(""),"int")
         getglobalscope
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         callproperty QName(PackageNamespace(""),"random"), 0
         pushbyte 32
         multiply
         call 1
         newarray 1
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 2
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         callproperty QName(PackageNamespace(""),"random"), 0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"width")
         multiply
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         callproperty QName(PackageNamespace(""),"random"), 0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"height")
         multiply
         initproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"scrollFactor")
         getlex QName(PackageNamespace(""),"scrollFactor")
         pushbyte 0
         dup
         setlocal1
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         kill 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         callproperty QName(PackageNamespace(""),"random"), 0
         negate
         pushbyte 100
         multiply
         pushbyte 10
         subtract
         setproperty QName(PackageNamespace(""),"x")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         negate
         ifnlt ofs0
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"width")
         pushbyte 2
         multiply
         add
         add
         initproperty QName(PackageNamespace(""),"x")
         ofs0:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
