
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 7
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("SplashLayer",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxGroup")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxGroup")
   newclass #SplashLayer
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"SplashLayer")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   import org.flixel.FlxGroup;
   import org.flixel.FlxSprite;
   
   public class SplashLayer extends FlxGroup
   {
      
      private static const FADE_IN_TIME:Number = 0.78;
      
      private static const STATIC_TIME:Number = 1.12;
      
      private static const FADE_OUT_TIME:Number = 0.78;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#SplashLayer"),"FADE_IN_TIME")
         pushdouble 0.78
         initproperty QName(PrivateNamespace(null,"#SplashLayer"),"FADE_IN_TIME")
         findproperty QName(PrivateNamespace(null,"#SplashLayer"),"STATIC_TIME")
         pushdouble 1.12
         initproperty QName(PrivateNamespace(null,"#SplashLayer"),"STATIC_TIME")
         findproperty QName(PrivateNamespace(null,"#SplashLayer"),"FADE_OUT_TIME")
         pushdouble 0.78
         initproperty QName(PrivateNamespace(null,"#SplashLayer"),"FADE_OUT_TIME")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var splash:SponsorSplash;
      
      private var bg:FlxSprite;
      
      private var elapsed:Number = 0;
      
      public function SplashLayer()
      {
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"mouse")
         callpropvoid QName(PackageNamespace(""),"show"), 0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         pushtrue
         setproperty QName(PackageNamespace(""),"noPause")
         getlocal0
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxSprite")
         constructprop QName(PackageNamespace("org.flixel"),"FlxSprite"), 0
         initproperty QName(PrivateNamespace(null,"#SplashLayer"),"bg")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"bg")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"bg")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"bg")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"height")
         pushdouble 4.27819008E9
         callpropvoid QName(PackageNamespace(""),"createGraphic"), 3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"bg")
         getproperty QName(PackageNamespace(""),"scrollFactor")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"bg")
         getproperty QName(PackageNamespace(""),"scrollFactor")
         pushbyte 0
         dup
         setlocal1
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         kill 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"add")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"bg")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"SponsorSplash")
         constructprop QName(PackageNamespace(""),"SponsorSplash"), 0
         initproperty QName(PrivateNamespace(null,"#SplashLayer"),"splash")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"splash")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"alpha")
         findpropstrict QName(PackageNamespace(""),"add")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"splash")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method QName(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         pushnull
         initproperty QName(PrivateNamespace(null,"#SplashLayer"),"splash")
         getlocal0
         pushnull
         initproperty QName(PrivateNamespace(null,"#SplashLayer"),"bg")
         getlocal0
         callsupervoid QName(PackageNamespace(""),"destroy"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"elapsed")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         add
         initproperty QName(PrivateNamespace(null,"#SplashLayer"),"elapsed")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"elapsed")
         getlex QName(PrivateNamespace(null,"#SplashLayer"),"FADE_IN_TIME")
         ifnlt ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"splash")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"elapsed")
         getlex QName(PrivateNamespace(null,"#SplashLayer"),"FADE_IN_TIME")
         divide
         setproperty QName(PackageNamespace(""),"alpha")
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"elapsed")
         getlex QName(PrivateNamespace(null,"#SplashLayer"),"FADE_IN_TIME")
         getlex QName(PrivateNamespace(null,"#SplashLayer"),"STATIC_TIME")
         add
         ifnlt ofs2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"splash")
         pushbyte 1
         setproperty QName(PackageNamespace(""),"alpha")
         jump ofs1
         ofs2:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"elapsed")
         getlex QName(PrivateNamespace(null,"#SplashLayer"),"FADE_IN_TIME")
         getlex QName(PrivateNamespace(null,"#SplashLayer"),"STATIC_TIME")
         add
         getlex QName(PrivateNamespace(null,"#SplashLayer"),"FADE_OUT_TIME")
         add
         ifnlt ofs3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"splash")
         pushbyte 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"elapsed")
         getlex QName(PrivateNamespace(null,"#SplashLayer"),"FADE_IN_TIME")
         getlex QName(PrivateNamespace(null,"#SplashLayer"),"STATIC_TIME")
         add
         subtract
         getlex QName(PrivateNamespace(null,"#SplashLayer"),"FADE_OUT_TIME")
         divide
         subtract
         setproperty QName(PackageNamespace(""),"alpha")
         jump ofs1
         ofs3:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"bg")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SplashLayer"),"splash")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         pushfalse
         setproperty QName(PackageNamespace(""),"noPause")
         findpropstrict QName(PackageNamespace(""),"kill")
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         returnvoid
         ofs1:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
