
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("EnemyGravTurtle2",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   newclass #EnemyGravTurtle2
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"EnemyGravTurtle2")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   import org.flixel.FlxObject;
   
   public class EnemyGravTurtle2 extends Enemy
   {
      
      private static const IMG_WIDTH:int = 16;
      
      private static const IMG_HEIGHT:int = 32;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 0;
      
      private static const MAX_HP:int = 200;
      
      private static const DEFENSE:int = 20;
      
      private static const OFFENSE:int = 2;
      
      private static const JUMP_TIMEOUT:Array;
      
      private static const FLIP_TIMEOUT:Number = 0.3;
      
      private static const JUMP_POWER:Number = 500;
      
      private static const GRAVITY:Number = 1200;
      
      private static const UPDOWN_TIMEOUT:Number = 1.8;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 25
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"IMG_WIDTH")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"IMG_WIDTH")
         findproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"IMG_HEIGHT")
         pushbyte 32
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"IMG_HEIGHT")
         findproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"IMG_OFS_X")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"IMG_OFS_X")
         findproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"IMG_OFS_Y")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"IMG_OFS_Y")
         findproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"MAX_HP")
         pushshort 200
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"MAX_HP")
         findproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"DEFENSE")
         pushbyte 20
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"DEFENSE")
         findproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"OFFENSE")
         pushbyte 2
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"OFFENSE")
         findproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"JUMP_TIMEOUT")
         pushdouble 2.5
         pushdouble 2.3
         pushbyte 3
         pushdouble 2.1
         pushdouble 2.7
         pushdouble 2.6
         pushdouble 2.9
         pushdouble 2.1
         pushdouble 2.3
         pushdouble 3.1
         pushdouble 3.3
         pushdouble 2.9
         pushdouble 2.6
         pushdouble 2.4
         pushdouble 1.9
         pushdouble 3.1
         pushdouble 2.7
         pushdouble 3.9
         pushdouble 4.2
         pushdouble 1.8
         pushdouble 2.8
         pushdouble 3.1
         pushdouble 3.8
         pushdouble 2.8
         newarray 24
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"JUMP_TIMEOUT")
         findproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"FLIP_TIMEOUT")
         pushdouble 0.3
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"FLIP_TIMEOUT")
         findproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"JUMP_POWER")
         pushshort 500
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"JUMP_POWER")
         findproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"GRAVITY")
         pushshort 1200
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"GRAVITY")
         findproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"UPDOWN_TIMEOUT")
         pushdouble 1.8
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"UPDOWN_TIMEOUT")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var jumpTimeoutIndex:int = 0;
      
      private var jumpTimeout:Number = 0;
      
      private var flipTimeout:Number = 0;
      
      private var elapsed:Number = 0;
      
      private var WALKSPEED:Number = 24;
      
      private var facingUp:Boolean = true;
      
      private var upDownTimeout:Number = 0;
      
      public function EnemyGravTurtle2(param1:int, param2:int, param3:Boolean)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         convert_b
         dup
         iffalse ofs0
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_hardMode")
         convert_b
         ofs0:
         iffalse ofs1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"WALKSPEED")
         pushdouble 1.9
         multiply
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"WALKSPEED")
         ofs1:
         getlocal0
         getlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"MAX_HP")
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"DEFENSE")
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"OFFENSE")
         pushtrue
         constructsuper 6
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"EnemyGravTurtle2")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         getlocal1
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"IMG_OFS_X")
         subtract
         convert_i
         setlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"IMG_OFS_Y")
         subtract
         convert_i
         setlocal2
         getlocal0
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"elapsed")
         getlocal0
         getlex QName(PackageNamespace(""),"y")
         pushbyte 16
         divide
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"jumpTimeoutIndex")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"jumpTimeoutIndex")
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"JUMP_TIMEOUT")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"jumpTimeoutIndex")
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"JUMP_TIMEOUT")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"jumpTimeoutIndex")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyGravTurtle2"),PackageNamespace(""),PrivateNamespace(null,"#EnemyGravTurtle2/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyGravTurtle2"),StaticProtectedNs("EnemyGravTurtle2"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"jumpTimeout")
         getlocal0
         pushint 99999999
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"flipTimeout")
         getlocal3
         iffalse ofs2
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"acceleration")
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"GRAVITY")
         negate
         setproperty QName(PackageNamespace(""),"x")
         jump ofs3
         ofs2:
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"acceleration")
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"GRAVITY")
         setproperty QName(PackageNamespace(""),"x")
         ofs3:
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "up"
         pushbyte 0
         pushbyte 1
         pushbyte 2
         pushbyte 3
         newarray 4
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "down"
         pushbyte 4
         pushbyte 5
         pushbyte 6
         pushbyte 7
         newarray 4
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findproperty QName(PackageNamespace(""),"active")
         pushtrue
         initproperty QName(PackageNamespace(""),"active")
         findproperty QName(PackageNamespace(""),"visible")
         pushtrue
         initproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         ifnlt ofs4
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "up"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"WALKSPEED")
         negate
         setproperty QName(PackageNamespace(""),"y")
         jump ofs5
         ofs4:
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "down"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"WALKSPEED")
         setproperty QName(PackageNamespace(""),"y")
         ofs5:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"touch"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function updatePosition() : void
      {
         trait method QName(PackageNamespace(""),"updatePosition")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         findpropstrict QName(PackageNamespace(""),"onScreen")
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         iffalse ofs1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"jumpTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"jumpTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"jumpTimeout")
         pushbyte 0
         ifnlt ofs2
         getlocal0
         dup
         setlocal1
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"jumpTimeoutIndex")
         increment_i
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"jumpTimeoutIndex")
         kill 2
         kill 1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"jumpTimeoutIndex")
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"JUMP_TIMEOUT")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"jumpTimeoutIndex")
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"JUMP_TIMEOUT")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"jumpTimeoutIndex")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyGravTurtle2"),PackageNamespace(""),PrivateNamespace(null,"#EnemyGravTurtle2/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyGravTurtle2"),StaticProtectedNs("EnemyGravTurtle2"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"jumpTimeout")
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"FLIP_TIMEOUT")
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"flipTimeout")
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs3
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"JUMP_POWER")
         negate
         setproperty QName(PackageNamespace(""),"x")
         jump ofs4
         ofs3:
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"JUMP_POWER")
         setproperty QName(PackageNamespace(""),"x")
         ofs4:
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playJump1"), 0
         ofs2:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"flipTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"flipTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"flipTimeout")
         pushbyte 0
         ifnlt ofs5
         getlocal0
         pushint 9999999
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"flipTimeout")
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs6
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"acceleration")
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"GRAVITY")
         negate
         setproperty QName(PackageNamespace(""),"x")
         jump ofs5
         ofs6:
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"acceleration")
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"GRAVITY")
         setproperty QName(PackageNamespace(""),"x")
         ofs5:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"upDownTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"upDownTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"upDownTimeout")
         pushbyte 0
         ifnle ofs1
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"UPDOWN_TIMEOUT")
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"upDownTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"facingUp")
         convert_b
         dup
         iffalse ofs7
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         greaterthan
         ofs7:
         iffalse ofs8
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"WALKSPEED")
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"facingUp")
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "down"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         jump ofs1
         ofs8:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"facingUp")
         not
         dup
         iffalse ofs9
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         lessthan
         ofs9:
         iffalse ofs1
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"facingUp")
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"WALKSPEED")
         negate
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "up"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         ofs1:
         findpropstrict QName(PackageNamespace(""),"onScreen")
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         iffalse ofs10
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         ofs10:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitBottom(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitBottom")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"facingUp")
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"WALKSPEED")
         negate
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "up"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitTop(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitTop")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"facingUp")
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyGravTurtle2"),"WALKSPEED")
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "down"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
