
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 4
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("SaveGroupQuery",[PackageNamespace("com.newgrounds")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"EventDispatcher")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"EventDispatcher")
   newclass #SaveGroupQuery
   popscope
   popscope
   initproperty QName(PackageNamespace("com.newgrounds"),"SaveGroupQuery")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package com.newgrounds
{
   import flash.events.EventDispatcher;
   
   public class SaveGroupQuery extends EventDispatcher
   {
      
      public static const TABLE_FILES:uint = 1;
      
      public static const TABLE_KEYS:uint = 2;
      
      public static const TABLE_RATINGS:uint = 3;
      
      public static const FILE_ID:uint = 0;
      
      public static const AUTHOR_ID:uint = 1;
      
      public static const AUTHOR_NAME:uint = 2;
      
      public static const FILE_NAME:uint = 3;
      
      public static const CREATED_ON:uint = 4;
      
      public static const UPDATED_ON:uint = 5;
      
      public static const TOTAL_VIEWS:uint = 6;
      
      public static const FILE_STATUS:uint = 7;
      
      public static const SCORE:String = "score";
      
      public static const TOTAL_VOTES:String = "votes";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         findproperty QName(PackageNamespace(""),"TABLE_FILES")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"TABLE_FILES")
         findproperty QName(PackageNamespace(""),"TABLE_KEYS")
         pushbyte 2
         initproperty QName(PackageNamespace(""),"TABLE_KEYS")
         findproperty QName(PackageNamespace(""),"TABLE_RATINGS")
         pushbyte 3
         initproperty QName(PackageNamespace(""),"TABLE_RATINGS")
         findproperty QName(PackageNamespace(""),"FILE_ID")
         pushbyte 0
         initproperty QName(PackageNamespace(""),"FILE_ID")
         findproperty QName(PackageNamespace(""),"AUTHOR_ID")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"AUTHOR_ID")
         findproperty QName(PackageNamespace(""),"AUTHOR_NAME")
         pushbyte 2
         initproperty QName(PackageNamespace(""),"AUTHOR_NAME")
         findproperty QName(PackageNamespace(""),"FILE_NAME")
         pushbyte 3
         initproperty QName(PackageNamespace(""),"FILE_NAME")
         findproperty QName(PackageNamespace(""),"CREATED_ON")
         pushbyte 4
         initproperty QName(PackageNamespace(""),"CREATED_ON")
         findproperty QName(PackageNamespace(""),"UPDATED_ON")
         pushbyte 5
         initproperty QName(PackageNamespace(""),"UPDATED_ON")
         findproperty QName(PackageNamespace(""),"TOTAL_VIEWS")
         pushbyte 6
         initproperty QName(PackageNamespace(""),"TOTAL_VIEWS")
         findproperty QName(PackageNamespace(""),"FILE_STATUS")
         pushbyte 7
         initproperty QName(PackageNamespace(""),"FILE_STATUS")
         findproperty QName(PackageNamespace(""),"SCORE")
         pushstring "score"
         initproperty QName(PackageNamespace(""),"SCORE")
         findproperty QName(PackageNamespace(""),"TOTAL_VOTES")
         pushstring "votes"
         initproperty QName(PackageNamespace(""),"TOTAL_VOTES")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _group:SaveGroup;
      
      private var _groupBy:Array;
      
      private var _lookupKeys:Array;
      
      private var _lookupRatings:Array;
      
      private var _fileConditions:Array;
      
      private var _keyConditions:Array;
      
      private var _ratingConditions:Array;
      
      private var _sortConditions:Array;
      
      private var _page:uint;
      
      private var _resultsPerPage:uint;
      
      private var _randomizeResults:Boolean;
      
      private var _results:Array;
      
      public function SaveGroupQuery(param1:SaveGroup)
      {
         method
         name null
         param QName(PackageNamespace("com.newgrounds"),"SaveGroup")
         returns null
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_results")
         getlocal0
         constructsuper 0
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"reset"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function clearCache() : void
      {
         trait method QName(PackageNamespace(""),"clearCache")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_results")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get group() : SaveGroup
      {
         trait getter QName(PackageNamespace(""),"group")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("com.newgrounds"),"SaveGroup")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get groupId() : uint
      {
         trait getter QName(PackageNamespace(""),"groupId")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         getproperty QName(PackageNamespace(""),"id")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get resultsPerPage() : uint
      {
         trait getter QName(PackageNamespace(""),"resultsPerPage")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_resultsPerPage")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set resultsPerPage(param1:uint) : void
      {
         trait setter QName(PackageNamespace(""),"resultsPerPage")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_resultsPerPage")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get page() : uint
      {
         trait getter QName(PackageNamespace(""),"page")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_page")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set page(param1:uint) : void
      {
         trait setter QName(PackageNamespace(""),"page")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_page")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get randomized() : Boolean
      {
         trait getter QName(PackageNamespace(""),"randomized")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_randomizeResults")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set randomized(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"randomized")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_randomizeResults")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get results() : Array
      {
         trait getter QName(PackageNamespace(""),"results")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_results")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function reset() : void
      {
         trait method QName(PackageNamespace(""),"reset")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_fileConditions")
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_keyConditions")
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_ratingConditions")
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_sortConditions")
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_groupBy")
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupKeys")
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupRatings")
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_randomizeResults")
         getlocal0
         pushbyte 20
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_resultsPerPage")
         getlocal0
         pushbyte 1
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_page")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"clearCache"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      function getGroup() : SaveGroup
      {
         trait method QName(PackageInternalNs("com.newgrounds"),"getGroup")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("com.newgrounds"),"SaveGroup")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      function getGroupID() : uint
      {
         trait method QName(PackageInternalNs("com.newgrounds"),"getGroupID")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         callproperty QName(PackageNamespace(""),"getID"), 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function includeKey(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"includeKey")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         getlocal1
         callproperty QName(PackageNamespace(""),"getKeyName"), 1
         coerce QName(PackageNamespace("com.newgrounds"),"SaveKey")
         setlocal2
         getlocal2
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupKeys")
         getlocal2
         getproperty QName(PackageNamespace(""),"id")
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function isRandomized() : Boolean
      {
         trait method QName(PackageNamespace(""),"isRandomized")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_randomizeResults")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function includeRating(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"includeRating")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         getlocal1
         callproperty QName(PackageNamespace(""),"getRatingName"), 1
         coerce QName(PackageNamespace("com.newgrounds"),"SaveRating")
         setlocal2
         getlocal2
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupRatings")
         getlocal2
         getproperty QName(PackageNamespace(""),"id")
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function excludeKey(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"excludeKey")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         getlocal1
         callproperty QName(PackageNamespace(""),"getKeyName"), 1
         coerce QName(PackageNamespace("com.newgrounds"),"SaveKey")
         setlocal2
         pushbyte 0
         convert_u
         setlocal3
         jump ofs0
         ofs1:
         label
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupKeys")
         getlocal3
         getproperty MultinameL([PrivateNamespace(null,"#SaveGroupQuery"),PackageNamespace(""),PackageNamespace("com.newgrounds"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#SaveGroupQuery/1"),PackageInternalNs("com.newgrounds"),ProtectedNamespace("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal2
         getproperty QName(PackageNamespace(""),"id")
         ifne ofs2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupKeys")
         getlocal3
         pushbyte 1
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"splice"), 2
         returnvoid
         ofs2:
         getlocal3
         increment
         convert_u
         setlocal3
         ofs0:
         getlocal3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupKeys")
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function excludeRating(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"excludeRating")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         getlocal1
         callproperty QName(PackageNamespace(""),"getRatingName"), 1
         coerce QName(PackageNamespace("com.newgrounds"),"SaveRating")
         setlocal2
         pushbyte 0
         convert_u
         setlocal3
         jump ofs0
         ofs1:
         label
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupRatings")
         getlocal3
         getproperty MultinameL([PrivateNamespace(null,"#SaveGroupQuery"),PackageNamespace(""),PackageNamespace("com.newgrounds"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#SaveGroupQuery/1"),PackageInternalNs("com.newgrounds"),ProtectedNamespace("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal2
         getproperty QName(PackageNamespace(""),"id")
         ifne ofs2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupRatings")
         getlocal3
         pushbyte 1
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"splice"), 2
         returnvoid
         ofs2:
         getlocal3
         increment
         convert_u
         setlocal3
         ofs0:
         getlocal3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupRatings")
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function groupBy(param1:uint) : void
      {
         trait method QName(PackageNamespace(""),"groupBy")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_groupBy")
         pushstring "table"
         getlex QName(PackageNamespace(""),"TABLE_FILES")
         pushstring "field"
         getlocal1
         newobject 2
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function groupByRating(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"groupByRating")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         getlocal1
         callproperty QName(PackageNamespace(""),"getRatingName"), 1
         coerce QName(PackageNamespace("com.newgrounds"),"SaveRating")
         setlocal2
         getlocal2
         iftrue ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_groupBy")
         pushstring "table"
         getlex QName(PackageNamespace(""),"TABLE_RATINGS")
         pushstring "field"
         getlocal2
         getproperty QName(PackageNamespace(""),"id")
         newobject 2
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function groupByKey(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"groupByKey")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         getlocal1
         callproperty QName(PackageNamespace(""),"getKeyName"), 1
         coerce QName(PackageNamespace("com.newgrounds"),"SaveKey")
         setlocal2
         getlocal2
         iftrue ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_groupBy")
         pushstring "table"
         getlex QName(PackageNamespace(""),"TABLE_KEYS")
         pushstring "field"
         getlocal2
         getproperty QName(PackageNamespace(""),"id")
         newobject 2
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addFileCondition(param1:uint, param2:String, param3:*) : void
      {
         trait method QName(PackageNamespace(""),"addFileCondition")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"String")
         param null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 4
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_fileConditions")
         pushstring "field"
         getlocal1
         pushstring "operator"
         getlocal2
         pushstring "value"
         getlocal3
         newobject 3
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addKeyCondition(param1:String, param2:String, param3:*) : void
      {
         trait method QName(PackageNamespace(""),"addKeyCondition")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"String")
         param null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 5
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         getlocal1
         callproperty QName(PackageNamespace(""),"getKeyName"), 1
         coerce QName(PackageNamespace("com.newgrounds"),"SaveKey")
         dup
         setlocal 4
         iftrue ofs0
         returnvoid
         ofs0:
         getlocal0
         getlocal3
         getlocal 4
         getproperty QName(PackageNamespace(""),"type")
         callproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"checkValue"), 2
         iftrue ofs1
         returnvoid
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_keyConditions")
         pushstring "key_id"
         getlocal 4
         getproperty QName(PackageNamespace(""),"id")
         pushstring "operator"
         getlocal2
         pushstring "value"
         getlocal3
         newobject 3
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addRatingCondition(param1:String, param2:String, param3:*, param4:String = "score") : void
      {
         trait method QName(PackageNamespace(""),"addRatingCondition")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"String")
         param null
         param QName(PackageNamespace(""),"String")
         optional Utf8("score")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 9
         localcount 6
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         getlocal1
         callproperty QName(PackageNamespace(""),"getRatingName"), 1
         coerce QName(PackageNamespace("com.newgrounds"),"SaveRating")
         dup
         setlocal 5
         iftrue ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_ratingConditions")
         pushstring "rating_id"
         getlocal 5
         getproperty QName(PackageNamespace(""),"id")
         pushstring "operator"
         getlocal2
         pushstring "value"
         getlocal3
         pushstring "column"
         getlocal 4
         newobject 4
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function addSortCondition(param1:uint, param2:uint, param3:Boolean = false, param4:* = null) : void
      {
         trait method QName(PrivateNamespace(null,"#SaveGroupQuery"),"addSortCondition")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"Boolean")
         param null
         optional False()
         optional Null()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 6
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         pushstring "table"
         getlocal1
         pushstring "field"
         getlocal2
         pushstring "desc"
         getlocal3
         newobject 3
         coerce QName(PackageNamespace(""),"Object")
         setlocal 5
         getlocal 4
         iffalse ofs0
         getlocal 5
         getlocal 4
         setproperty Multiname("extra",[PrivateNamespace(null,"#SaveGroupQuery"),PackageNamespace(""),PackageNamespace("com.newgrounds"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#SaveGroupQuery/1"),PackageInternalNs("com.newgrounds"),ProtectedNamespace("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_sortConditions")
         getlocal 5
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function sortOn(param1:uint, param2:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"sortOn")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlex QName(PackageNamespace(""),"TABLE_FILES")
         getlocal1
         getlocal2
         callpropvoid QName(PrivateNamespace(null,"#SaveGroupQuery"),"addSortCondition"), 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function sortOnKey(param1:String, param2:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"sortOnKey")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlex QName(PackageNamespace(""),"TABLE_KEYS")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         getlocal1
         callproperty QName(PackageNamespace(""),"getKeyName"), 1
         getproperty QName(PackageNamespace(""),"id")
         getlocal2
         callpropvoid QName(PrivateNamespace(null,"#SaveGroupQuery"),"addSortCondition"), 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function sortOnRating(param1:String, param2:Boolean = false, param3:String = "score") : void
      {
         trait method QName(PackageNamespace(""),"sortOnRating")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"String")
         optional False()
         optional Utf8("score")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlex QName(PackageNamespace(""),"TABLE_RATINGS")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_group")
         getlocal1
         callproperty QName(PackageNamespace(""),"getRatingName"), 1
         getproperty QName(PackageNamespace(""),"id")
         getlocal2
         getlocal3
         callpropvoid QName(PrivateNamespace(null,"#SaveGroupQuery"),"addSortCondition"), 4
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function sortOnRatingScore(param1:String, param2:Boolean) : *
      {
         trait method QName(PackageNamespace(""),"sortOnRatingScore")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         returns null
         
         body
         maxstack 4
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         getlex QName(PackageNamespace(""),"SCORE")
         callpropvoid QName(PackageNamespace(""),"sortOnRating"), 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function sortOnRatingVotes(param1:String, param2:Boolean) : *
      {
         trait method QName(PackageNamespace(""),"sortOnRatingVotes")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         returns null
         
         body
         maxstack 4
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         getlex QName(PackageNamespace(""),"TOTAL_VOTES")
         callpropvoid QName(PackageNamespace(""),"sortOnRating"), 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setResultsPerPage(param1:uint) : *
      {
         trait method QName(PackageNamespace(""),"setResultsPerPage")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         returns null
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_resultsPerPage")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"clearCache"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setPage(param1:Number) : *
      {
         trait method QName(PackageNamespace(""),"setPage")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns null
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_page")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"clearCache"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setRandomize(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setRandomize")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_randomizeResults")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function execute() : void
      {
         trait method QName(PackageNamespace(""),"execute")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("com.newgrounds"),"API")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"executeSaveQuery"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function checkValue(param1:*, param2:uint) : Boolean
      {
         trait method QName(PrivateNamespace(null,"#SaveGroupQuery"),"checkValue")
         dispid 0
         method
         name null
         param null
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      function setResults(param1:Array) : void
      {
         trait method QName(PackageInternalNs("com.newgrounds"),"setResults")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Array")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_results")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function toString() : String
      {
         trait method QName(PackageNamespace(""),"toString")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         pushstring ""
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function toObject() : Object
      {
         trait method QName(PackageNamespace(""),"toObject")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         pushstring "page"
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_page")
         pushstring "num_results"
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_resultsPerPage")
         newobject 2
         coerce QName(PackageNamespace(""),"Object")
         setlocal1
         getlocal0
         callproperty QName(PackageNamespace(""),"isRandomized"), 0
         iffalse ofs0
         getlocal1
         pushbyte 1
         setproperty Multiname("randomize",[PrivateNamespace(null,"#SaveGroupQuery"),PackageNamespace(""),PackageNamespace("com.newgrounds"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#SaveGroupQuery/1"),PackageInternalNs("com.newgrounds"),ProtectedNamespace("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_fileConditions")
         convert_b
         dup
         iffalse ofs1
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_fileConditions")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         ofs1:
         iffalse ofs2
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_fileConditions")
         setproperty Multiname("file_conditions",[PrivateNamespace(null,"#SaveGroupQuery"),PackageNamespace(""),PackageNamespace("com.newgrounds"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#SaveGroupQuery/1"),PackageInternalNs("com.newgrounds"),ProtectedNamespace("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         ofs2:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_keyConditions")
         convert_b
         dup
         iffalse ofs3
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_keyConditions")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         ofs3:
         iffalse ofs4
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_keyConditions")
         setproperty Multiname("key_conditions",[PrivateNamespace(null,"#SaveGroupQuery"),PackageNamespace(""),PackageNamespace("com.newgrounds"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#SaveGroupQuery/1"),PackageInternalNs("com.newgrounds"),ProtectedNamespace("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         ofs4:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_ratingConditions")
         convert_b
         dup
         iffalse ofs5
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_ratingConditions")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         ofs5:
         iffalse ofs6
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_ratingConditions")
         setproperty Multiname("rating_conditions",[PrivateNamespace(null,"#SaveGroupQuery"),PackageNamespace(""),PackageNamespace("com.newgrounds"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#SaveGroupQuery/1"),PackageInternalNs("com.newgrounds"),ProtectedNamespace("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         ofs6:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_sortConditions")
         convert_b
         dup
         iffalse ofs7
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_sortConditions")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         ofs7:
         iffalse ofs8
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_sortConditions")
         setproperty Multiname("sort_conditions",[PrivateNamespace(null,"#SaveGroupQuery"),PackageNamespace(""),PackageNamespace("com.newgrounds"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#SaveGroupQuery/1"),PackageInternalNs("com.newgrounds"),ProtectedNamespace("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         ofs8:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupKeys")
         convert_b
         dup
         iffalse ofs9
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupKeys")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         ofs9:
         iffalse ofs10
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupKeys")
         setproperty Multiname("lookup_keys",[PrivateNamespace(null,"#SaveGroupQuery"),PackageNamespace(""),PackageNamespace("com.newgrounds"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#SaveGroupQuery/1"),PackageInternalNs("com.newgrounds"),ProtectedNamespace("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         ofs10:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupRatings")
         convert_b
         dup
         iffalse ofs11
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupRatings")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         ofs11:
         iffalse ofs12
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_lookupRatings")
         setproperty Multiname("lookup_ratings",[PrivateNamespace(null,"#SaveGroupQuery"),PackageNamespace(""),PackageNamespace("com.newgrounds"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#SaveGroupQuery/1"),PackageInternalNs("com.newgrounds"),ProtectedNamespace("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         ofs12:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_groupBy")
         convert_b
         dup
         iffalse ofs13
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_groupBy")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         ofs13:
         iffalse ofs14
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#SaveGroupQuery"),"_groupBy")
         setproperty Multiname("group_by",[PrivateNamespace(null,"#SaveGroupQuery"),PackageNamespace(""),PackageNamespace("com.newgrounds"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#SaveGroupQuery/1"),PackageInternalNs("com.newgrounds"),ProtectedNamespace("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("com.newgrounds:SaveGroupQuery"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         ofs14:
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
