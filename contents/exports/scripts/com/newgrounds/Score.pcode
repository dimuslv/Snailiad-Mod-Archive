
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("Score",[PackageNamespace("com.newgrounds")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #Score
   popscope
   initproperty QName(PackageNamespace("com.newgrounds"),"Score")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package com.newgrounds
{
   public class Score
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _board:ScoreBoard;
      
      private var _position:uint;
      
      private var _username:String;
      
      private var _value:String;
      
      private var _numeric_value:uint;
      
      private var _tag:String;
      
      public function Score(param1:ScoreBoard, param2:Number, param3:String, param4:String, param5:uint, param6:String)
      {
         method
         name null
         param QName(PackageNamespace("com.newgrounds"),"ScoreBoard")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"String")
         returns null
         
         body
         maxstack 2
         localcount 7
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#Score"),"_board")
         getlocal0
         getlocal2
         initproperty QName(PrivateNamespace(null,"#Score"),"_position")
         getlocal0
         getlocal3
         initproperty QName(PrivateNamespace(null,"#Score"),"_username")
         getlocal0
         getlocal 4
         initproperty QName(PrivateNamespace(null,"#Score"),"_value")
         getlocal0
         getlocal 5
         initproperty QName(PrivateNamespace(null,"#Score"),"_numeric_value")
         getlocal0
         getlocal 6
         initproperty QName(PrivateNamespace(null,"#Score"),"_tag")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get board() : ScoreBoard
      {
         trait getter QName(PackageNamespace(""),"board")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("com.newgrounds"),"ScoreBoard")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Score"),"_board")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get position() : uint
      {
         trait getter QName(PackageNamespace(""),"position")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Score"),"_position")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get username() : String
      {
         trait getter QName(PackageNamespace(""),"username")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Score"),"_username")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get value() : String
      {
         trait getter QName(PackageNamespace(""),"value")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Score"),"_value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get numeric_value() : uint
      {
         trait getter QName(PackageNamespace(""),"numeric_value")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Score"),"_numeric_value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get tag() : String
      {
         trait getter QName(PackageNamespace(""),"tag")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Score"),"_tag")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
