
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("JSONDecoder",[PackageNamespace("com.adobe.serialization.json")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #JSONDecoder
   popscope
   initproperty QName(PackageNamespace("com.adobe.serialization.json"),"JSONDecoder")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package com.adobe.serialization.json
{
   public class JSONDecoder
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var value;
      
      private var tokenizer:JSONTokenizer;
      
      private var token:JSONToken;
      
      public function JSONDecoder(param1:String)
      {
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns null
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         getlocal0
         findpropstrict QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenizer")
         getlocal1
         constructprop QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenizer"), 1
         initproperty QName(PrivateNamespace(null,"#JSONDecoder"),"tokenizer")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#JSONDecoder"),"nextToken"), 0
         getlocal0
         getlocal0
         callproperty QName(PrivateNamespace(null,"#JSONDecoder"),"parseValue"), 0
         initproperty QName(PrivateNamespace(null,"#JSONDecoder"),"value")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getValue() : *
      {
         trait method QName(PackageNamespace(""),"getValue")
         dispid 0
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function nextToken() : JSONToken
      {
         trait method QName(PrivateNamespace(null,"#JSONDecoder"),"nextToken")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("com.adobe.serialization.json"),"JSONToken")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"tokenizer")
         callproperty QName(PackageNamespace(""),"getNextToken"), 0
         dup
         setlocal1
         initproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getlocal1
         kill 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function parseArray() : Array
      {
         trait method QName(PrivateNamespace(null,"#JSONDecoder"),"parseArray")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         coerce QName(PackageNamespace(""),"Array")
         setlocal1
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#JSONDecoder"),"nextToken"), 0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"type")
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"RIGHT_BRACKET")
         ifne ofs0
         getlocal1
         returnvalue
         ofs0:
         jump ofs1
         ofs2:
         label
         getlocal1
         getlocal0
         callproperty QName(PrivateNamespace(null,"#JSONDecoder"),"parseValue"), 0
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#JSONDecoder"),"nextToken"), 0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"type")
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"RIGHT_BRACKET")
         ifne ofs3
         getlocal1
         returnvalue
         ofs3:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"type")
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"COMMA")
         ifne ofs4
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#JSONDecoder"),"nextToken"), 0
         jump ofs1
         ofs4:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"tokenizer")
         pushstring "Expecting ] or , but found "
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"value")
         add
         callpropvoid QName(PackageNamespace(""),"parseError"), 1
         ofs1:
         jump ofs2
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function parseObject() : Object
      {
         trait method QName(PrivateNamespace(null,"#JSONDecoder"),"parseObject")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         pushnull
         coerce_s
         setlocal2
         findpropstrict QName(PackageNamespace(""),"Object")
         constructprop QName(PackageNamespace(""),"Object"), 0
         coerce QName(PackageNamespace(""),"Object")
         setlocal1
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#JSONDecoder"),"nextToken"), 0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"type")
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"RIGHT_BRACE")
         ifne ofs0
         getlocal1
         returnvalue
         ofs0:
         jump ofs1
         ofs2:
         label
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"type")
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"STRING")
         ifne ofs3
         findpropstrict QName(PackageNamespace(""),"String")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"String"), 1
         coerce_s
         setlocal2
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#JSONDecoder"),"nextToken"), 0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"type")
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"COLON")
         ifne ofs4
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#JSONDecoder"),"nextToken"), 0
         getlocal1
         getlocal2
         getlocal0
         callproperty QName(PrivateNamespace(null,"#JSONDecoder"),"parseValue"), 0
         setproperty MultinameL([PrivateNamespace(null,"#JSONDecoder"),PackageNamespace("com.adobe.serialization.json"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#JSONDecoder/1"),PackageInternalNs("com.adobe.serialization.json"),ProtectedNamespace("com.adobe.serialization.json:JSONDecoder"),StaticProtectedNs("com.adobe.serialization.json:JSONDecoder"),StaticProtectedNs("Object")])
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#JSONDecoder"),"nextToken"), 0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"type")
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"RIGHT_BRACE")
         ifne ofs5
         getlocal1
         returnvalue
         ofs5:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"type")
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"COMMA")
         ifne ofs6
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#JSONDecoder"),"nextToken"), 0
         jump ofs7
         ofs6:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"tokenizer")
         pushstring "Expecting } or , but found "
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"value")
         add
         callpropvoid QName(PackageNamespace(""),"parseError"), 1
         ofs7:
         jump ofs8
         ofs4:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"tokenizer")
         pushstring "Expecting : but found "
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"value")
         add
         callpropvoid QName(PackageNamespace(""),"parseError"), 1
         ofs8:
         jump ofs1
         ofs3:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"tokenizer")
         pushstring "Expecting string but found "
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"value")
         add
         callpropvoid QName(PackageNamespace(""),"parseError"), 1
         ofs1:
         jump ofs2
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function parseValue() : Object
      {
         trait method QName(PrivateNamespace(null,"#JSONDecoder"),"parseValue")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         pushnull
         ifne ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"tokenizer")
         pushstring "Unexpected end of input"
         callpropvoid QName(PackageNamespace(""),"parseError"), 1
         ofs0:
         jump ofs1
         ofs2:
         label
         getlocal0
         callproperty QName(PrivateNamespace(null,"#JSONDecoder"),"parseObject"), 0
         returnvalue
         ofs3:
         label
         getlocal0
         callproperty QName(PrivateNamespace(null,"#JSONDecoder"),"parseArray"), 0
         returnvalue
         ofs4:
         label
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         ofs5:
         label
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"tokenizer")
         pushstring "Unexpected "
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"value")
         add
         callpropvoid QName(PackageNamespace(""),"parseError"), 1
         jump ofs6
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#JSONDecoder"),"token")
         getproperty QName(PackageNamespace(""),"type")
         setlocal1
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"LEFT_BRACE")
         getlocal1
         ifstrictne ofs7
         pushbyte 0
         jump ofs8
         ofs7:
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"LEFT_BRACKET")
         getlocal1
         ifstrictne ofs9
         pushbyte 1
         jump ofs8
         ofs9:
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"STRING")
         getlocal1
         ifstrictne ofs10
         pushbyte 2
         jump ofs8
         ofs10:
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"NUMBER")
         getlocal1
         ifstrictne ofs11
         pushbyte 3
         jump ofs8
         ofs11:
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"TRUE")
         getlocal1
         ifstrictne ofs12
         pushbyte 4
         jump ofs8
         ofs12:
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"FALSE")
         getlocal1
         ifstrictne ofs13
         pushbyte 5
         jump ofs8
         ofs13:
         getlex QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
         getproperty QName(PackageNamespace(""),"NULL")
         getlocal1
         ifstrictne ofs14
         pushbyte 6
         jump ofs8
         ofs14:
         jump ofs15
         pushbyte 7
         jump ofs15
         ofs15:
         pushbyte 7
         ofs8:
         kill 1
         lookupswitch ofs5, [ofs2, ofs3, ofs4, ofs4, ofs4, ofs4, ofs4, ofs5]
         ofs6:
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
