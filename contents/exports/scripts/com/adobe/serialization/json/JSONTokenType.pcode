
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("JSONTokenType",[PackageNamespace("com.adobe.serialization.json")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #JSONTokenType
   popscope
   initproperty QName(PackageNamespace("com.adobe.serialization.json"),"JSONTokenType")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package com.adobe.serialization.json
{
   public class JSONTokenType
   {
      
      public static const UNKNOWN:int = -1;
      
      public static const COMMA:int = 0;
      
      public static const LEFT_BRACE:int = 1;
      
      public static const RIGHT_BRACE:int = 2;
      
      public static const LEFT_BRACKET:int = 3;
      
      public static const RIGHT_BRACKET:int = 4;
      
      public static const COLON:int = 6;
      
      public static const TRUE:int = 7;
      
      public static const FALSE:int = 8;
      
      public static const NULL:int = 9;
      
      public static const STRING:int = 10;
      
      public static const NUMBER:int = 11;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findproperty QName(PackageNamespace(""),"UNKNOWN")
         pushbyte -1
         initproperty QName(PackageNamespace(""),"UNKNOWN")
         findproperty QName(PackageNamespace(""),"COMMA")
         pushbyte 0
         initproperty QName(PackageNamespace(""),"COMMA")
         findproperty QName(PackageNamespace(""),"LEFT_BRACE")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"LEFT_BRACE")
         findproperty QName(PackageNamespace(""),"RIGHT_BRACE")
         pushbyte 2
         initproperty QName(PackageNamespace(""),"RIGHT_BRACE")
         findproperty QName(PackageNamespace(""),"LEFT_BRACKET")
         pushbyte 3
         initproperty QName(PackageNamespace(""),"LEFT_BRACKET")
         findproperty QName(PackageNamespace(""),"RIGHT_BRACKET")
         pushbyte 4
         initproperty QName(PackageNamespace(""),"RIGHT_BRACKET")
         findproperty QName(PackageNamespace(""),"COLON")
         pushbyte 6
         initproperty QName(PackageNamespace(""),"COLON")
         findproperty QName(PackageNamespace(""),"TRUE")
         pushbyte 7
         initproperty QName(PackageNamespace(""),"TRUE")
         findproperty QName(PackageNamespace(""),"FALSE")
         pushbyte 8
         initproperty QName(PackageNamespace(""),"FALSE")
         findproperty QName(PackageNamespace(""),"NULL")
         pushbyte 9
         initproperty QName(PackageNamespace(""),"NULL")
         findproperty QName(PackageNamespace(""),"STRING")
         pushbyte 10
         initproperty QName(PackageNamespace(""),"STRING")
         findproperty QName(PackageNamespace(""),"NUMBER")
         pushbyte 11
         initproperty QName(PackageNamespace(""),"NUMBER")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function JSONTokenType()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
