
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 7
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("AiTrigger",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   newclass #AiTrigger
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"AiTrigger")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxSprite;
   
   public class AiTrigger extends FlxSprite
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _number:int = 0;
      
      public function AiTrigger()
      {
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         findproperty QName(PackageNamespace(""),"exists")
         pushfalse
         initproperty QName(PackageNamespace(""),"exists")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 16
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 16
         initproperty QName(PackageNamespace(""),"height")
         findproperty QName(PackageNamespace(""),"visible")
         pushfalse
         initproperty QName(PackageNamespace(""),"visible")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method QName(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         callsupervoid QName(PackageNamespace(""),"destroy"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function create(param1:int, param2:int, param3:int) : void
      {
         trait method QName(PackageNamespace(""),"create")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(PackageNamespace(""),"reset"), 2
         getlocal0
         getlocal3
         initproperty QName(PrivateNamespace(null,"#AiTrigger"),"_number")
         findproperty QName(PackageNamespace(""),"exists")
         pushtrue
         initproperty QName(PackageNamespace(""),"exists")
         findproperty QName(PackageNamespace(""),"dead")
         pushfalse
         initproperty QName(PackageNamespace(""),"dead")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getNumber() : int
      {
         trait method QName(PackageNamespace(""),"getNumber")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#AiTrigger"),"_number")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         getlex QName(PackageNamespace(""),"dead")
         iffalse ofs1
         findproperty QName(PackageNamespace(""),"exists")
         pushfalse
         initproperty QName(PackageNamespace(""),"exists")
         returnvoid
         ofs1:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function kill() : void
      {
         trait method QName(PackageNamespace(""),"kill")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"dead")
         iffalse ofs0
         returnvoid
         ofs0:
         findproperty QName(PackageNamespace(""),"dead")
         pushtrue
         initproperty QName(PackageNamespace(""),"dead")
         findproperty QName(PackageNamespace(""),"exists")
         pushfalse
         initproperty QName(PackageNamespace(""),"exists")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
