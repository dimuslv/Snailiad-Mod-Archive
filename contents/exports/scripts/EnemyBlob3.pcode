
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("EnemyBlob3",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   newclass #EnemyBlob3
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"EnemyBlob3")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   import org.flixel.FlxObject;
   
   public class EnemyBlob3 extends Enemy
   {
      
      private static const IMG_WIDTH:int = 16;
      
      private static const IMG_HEIGHT:int = 16;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 0;
      
      private static const MAX_HP:int = 10000;
      
      private static const DEFENSE:int = 30;
      
      private static const OFFENSE:int = 12;
      
      private static const HOP_TIMEOUTS:Array;
      
      private static const HOP_HEIGHT:Array;
      
      private static const SHOT_TIMEOUT:Number = 0.7;
      
      private static const SHOT_NUM:int = 4;
      
      private static const CLUSTER_NUM:int = 1;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 10
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"IMG_WIDTH")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"IMG_WIDTH")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"IMG_HEIGHT")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"IMG_HEIGHT")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"IMG_OFS_X")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"IMG_OFS_X")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"IMG_OFS_Y")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"IMG_OFS_Y")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"MAX_HP")
         pushshort 10000
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"MAX_HP")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"DEFENSE")
         pushbyte 30
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"DEFENSE")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"OFFENSE")
         pushbyte 12
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"OFFENSE")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"HOP_TIMEOUTS")
         pushdouble 0.4
         pushdouble 0.5
         pushdouble 1.6
         pushdouble 0.4
         pushdouble 0.9
         pushdouble 1.1
         pushdouble 0.9
         pushdouble 0.5
         pushdouble 0.9
         newarray 9
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"HOP_TIMEOUTS")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"HOP_HEIGHT")
         pushdouble 0.2
         pushdouble 0.3
         pushbyte 3
         pushdouble 0.2
         pushdouble 1.6
         pushdouble 0.4
         pushdouble 2.5
         pushdouble 2.7
         pushdouble 0.5
         newarray 9
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"HOP_HEIGHT")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"SHOT_TIMEOUT")
         pushdouble 0.7
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"SHOT_TIMEOUT")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"SHOT_NUM")
         pushbyte 4
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"SHOT_NUM")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"CLUSTER_NUM")
         pushbyte 1
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"CLUSTER_NUM")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var hopNum:int = 0;
      
      private var hopTimeout:Number = 0;
      
      private var shotTimeout:Number = 0;
      
      public function EnemyBlob3(param1:int, param2:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 28
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"MAX_HP")
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"DEFENSE")
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"OFFENSE")
         constructsuper 5
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"EnemyBlob")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         getlocal1
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"IMG_OFS_X")
         subtract
         convert_i
         setlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"IMG_OFS_Y")
         subtract
         convert_i
         setlocal2
         getlocal0
         getlocal1
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"HOP_TIMEOUTS")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"hopNum")
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"HOP_TIMEOUTS")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"hopNum")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBlob3"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBlob3/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBlob3"),StaticProtectedNs("EnemyBlob3"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"hopTimeout")
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         pushbyte 8
         newarray 1
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 2
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "quiver"
         pushbyte 8
         pushbyte 9
         pushbyte 10
         pushbyte 11
         pushbyte 8
         pushbyte 9
         pushbyte 10
         pushbyte 11
         pushbyte 8
         dup
         pushbyte 9
         dup
         pushbyte 10
         dup
         pushbyte 11
         dup
         pushbyte 8
         dup
         dup
         pushbyte 9
         dup
         dup
         pushbyte 10
         dup
         dup
         pushbyte 11
         newarray 26
         pushbyte 12
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         getlex QName(PackageNamespace(""),"acceleration")
         pushshort 1200
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"touch"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 5
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushbyte 0
         setlocal1
         pushnull
         coerce QName(PackageNamespace(""),"EnemyBulletRotaryPea")
         setlocal2
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         findpropstrict QName(PackageNamespace(""),"onScreen")
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         iffalse ofs1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"hopTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"hopTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"hopTimeout")
         pushbyte 0
         ifnlt ofs2
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         ifngt ofs3
         getlex QName(PackageNamespace(""),"velocity")
         pushshort -280
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         pushshort -320
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"HOP_HEIGHT")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"hopNum")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBlob3"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBlob3/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBlob3"),StaticProtectedNs("EnemyBlob3"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         multiply
         setproperty QName(PackageNamespace(""),"y")
         jump ofs4
         ofs3:
         getlex QName(PackageNamespace(""),"velocity")
         pushshort 280
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         pushshort -320
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"HOP_HEIGHT")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"hopNum")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBlob3"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBlob3/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBlob3"),StaticProtectedNs("EnemyBlob3"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         multiply
         setproperty QName(PackageNamespace(""),"y")
         ofs4:
         getlocal0
         dup
         setlocal3
         getproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"hopNum")
         increment_i
         setlocal 4
         getlocal3
         getlocal 4
         setproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"hopNum")
         kill 4
         kill 3
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"hopNum")
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"HOP_TIMEOUTS")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"hopNum")
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"HOP_TIMEOUTS")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"hopNum")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBlob3"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBlob3/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBlob3"),StaticProtectedNs("EnemyBlob3"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"hopTimeout")
         ofs2:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         convert_b
         dup
         iffalse ofs5
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_hardMode")
         convert_b
         ofs5:
         iffalse ofs1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"shotTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"shotTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"shotTimeout")
         pushbyte 0
         ifnle ofs1
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"SHOT_TIMEOUT")
         initproperty QName(PrivateNamespace(null,"#EnemyBlob3"),"shotTimeout")
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playShot7"), 0
         pushbyte 0
         setlocal1
         jump ofs6
         ofs7:
         label
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"enemyBulletPool")
         pushbyte 7
         callproperty QName(PackageNamespace(""),"getBullet"), 1
         getlex QName(PackageNamespace(""),"EnemyBulletRotaryPea")
         astypelate
         coerce QName(PackageNamespace(""),"EnemyBulletRotaryPea")
         setlocal2
         getlocal2
         iffalse ofs8
         getlocal2
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         pushbyte 2
         divide
         add
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         pushbyte 2
         divide
         add
         pushbyte 60
         pushbyte 4
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         pushbyte 2
         multiply
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"SHOT_NUM")
         divide
         getlocal1
         multiply
         callpropvoid QName(PackageNamespace(""),"shootRotary"), 5
         ofs8:
         inclocal_i 1
         ofs6:
         getlocal1
         getlex QName(PrivateNamespace(null,"#EnemyBlob3"),"SHOT_NUM")
         iflt ofs7
         ofs1:
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifnlt ofs9
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs9:
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifngt ofs10
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs10:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitBottom(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitBottom")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushdouble -0.1
         multiply
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte -5
         ifnle ofs0
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "quiver"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitSide(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitSide")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte -1
         multiply
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "quiver"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hurt(param1:Number) : void
      {
         trait method QName(PackageNamespace(""),"hurt")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"hurt"), 1
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "quiver"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
