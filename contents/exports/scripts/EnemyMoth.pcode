
{
   method
   name ""
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("EnemyMoth",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   newclass #EnemyMoth
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"EnemyMoth")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   public class EnemyMoth extends Enemy
   {
      
      private static const IMG_WIDTH:int = 16;
      
      private static const IMG_HEIGHT:int = 16;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 0;
      
      private static const MAX_HP:int = 50;
      
      private static const DEFENSE:int = 3;
      
      private static const OFFENSE:int = 6;
      
      private static const DIR_LEFT:int = 1;
      
      private static const DIR_UP:int = 2;
      
      private static const DIR_RIGHT:int = 3;
      
      private static const DIR_DOWN:int = 4;
      
      private static const MAX_SPEED:int = 8;
      
      private static const CHECK_DISTANCE:int = 10;
      
      private static const CHECK_WIDTH:int = 24;
      
      {
         method
         name ""
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(":EnemyMoth"),"IMG_WIDTH")
         pushbyte 16
         initproperty QName(PrivateNamespace(":EnemyMoth"),"IMG_WIDTH")
         findproperty QName(PrivateNamespace(":EnemyMoth"),"IMG_HEIGHT")
         pushbyte 16
         initproperty QName(PrivateNamespace(":EnemyMoth"),"IMG_HEIGHT")
         findproperty QName(PrivateNamespace(":EnemyMoth"),"IMG_OFS_X")
         pushbyte 0
         initproperty QName(PrivateNamespace(":EnemyMoth"),"IMG_OFS_X")
         findproperty QName(PrivateNamespace(":EnemyMoth"),"IMG_OFS_Y")
         pushbyte 0
         initproperty QName(PrivateNamespace(":EnemyMoth"),"IMG_OFS_Y")
         findproperty QName(PrivateNamespace(":EnemyMoth"),"MAX_HP")
         pushbyte 50
         initproperty QName(PrivateNamespace(":EnemyMoth"),"MAX_HP")
         findproperty QName(PrivateNamespace(":EnemyMoth"),"DEFENSE")
         pushbyte 3
         initproperty QName(PrivateNamespace(":EnemyMoth"),"DEFENSE")
         findproperty QName(PrivateNamespace(":EnemyMoth"),"OFFENSE")
         pushbyte 6
         initproperty QName(PrivateNamespace(":EnemyMoth"),"OFFENSE")
         findproperty QName(PrivateNamespace(":EnemyMoth"),"DIR_LEFT")
         pushbyte 1
         initproperty QName(PrivateNamespace(":EnemyMoth"),"DIR_LEFT")
         findproperty QName(PrivateNamespace(":EnemyMoth"),"DIR_UP")
         pushbyte 2
         initproperty QName(PrivateNamespace(":EnemyMoth"),"DIR_UP")
         findproperty QName(PrivateNamespace(":EnemyMoth"),"DIR_RIGHT")
         pushbyte 3
         initproperty QName(PrivateNamespace(":EnemyMoth"),"DIR_RIGHT")
         findproperty QName(PrivateNamespace(":EnemyMoth"),"DIR_DOWN")
         pushbyte 4
         initproperty QName(PrivateNamespace(":EnemyMoth"),"DIR_DOWN")
         findproperty QName(PrivateNamespace(":EnemyMoth"),"MAX_SPEED")
         pushbyte 8
         initproperty QName(PrivateNamespace(":EnemyMoth"),"MAX_SPEED")
         findproperty QName(PrivateNamespace(":EnemyMoth"),"CHECK_DISTANCE")
         pushbyte 10
         initproperty QName(PrivateNamespace(":EnemyMoth"),"CHECK_DISTANCE")
         findproperty QName(PrivateNamespace(":EnemyMoth"),"CHECK_WIDTH")
         pushbyte 24
         initproperty QName(PrivateNamespace(":EnemyMoth"),"CHECK_WIDTH")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _detectRange_UL:Array;
      
      private var _detectRange_DR:Array;
      
      private var _moveDir:Array;
      
      private var _facingDir:int;
      
      private var _isAttacking:Boolean = false;
      
      private var _speed:int = 0;
      
      private var _seesPlayer:Boolean = false;
      
      public function EnemyMoth(param1:int, param2:int)
      {
         method
         name ":EnemyMoth/EnemyMoth"
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns null
         
         body
         maxstack 6
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         getlocal0
         getlocal1
         getlocal2
         getlex QName(PrivateNamespace(":EnemyMoth"),"MAX_HP")
         getlex QName(PrivateNamespace(":EnemyMoth"),"DEFENSE")
         getlex QName(PrivateNamespace(":EnemyMoth"),"OFFENSE")
         constructsuper 5
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"EnemyMoth")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(":EnemyMoth"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(":EnemyMoth"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findpropstrict QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(":EnemyMoth"),"IMG_WIDTH")
         setproperty QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(":EnemyMoth"),"IMG_HEIGHT")
         setproperty QName(PackageNamespace(""),"height")
         getlocal1
         getlex QName(PrivateNamespace(":EnemyMoth"),"IMG_OFS_X")
         subtract
         convert_i
         setlocal1
         getlocal2
         getlex QName(PrivateNamespace(":EnemyMoth"),"IMG_OFS_Y")
         subtract
         convert_i
         setlocal2
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         pushbyte 0
         newarray 1
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 2
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "idle1"
         pushbyte 0
         pushbyte 1
         newarray 2
         pushbyte 5
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "idle2"
         pushbyte 4
         pushbyte 5
         newarray 2
         pushbyte 5
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "idle3"
         pushbyte 8
         pushbyte 9
         newarray 2
         pushbyte 5
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "idle4"
         pushbyte 12
         pushbyte 13
         newarray 2
         pushbyte 5
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "attack1"
         pushbyte 2
         pushbyte 3
         newarray 2
         pushbyte 30
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "attack2"
         pushbyte 6
         pushbyte 7
         newarray 2
         pushbyte 30
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "attack3"
         pushbyte 10
         pushbyte 11
         newarray 2
         pushbyte 30
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "attack4"
         pushbyte 14
         pushbyte 15
         newarray 2
         pushbyte 30
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlocal1
         pushbyte 16
         add
         getlocal2
         callproperty QName(PackageNamespace(""),"enemySolidAt"), 2
         iffalse ofs0
         getlocal0
         getlex QName(PrivateNamespace(":EnemyMoth"),"DIR_LEFT")
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_facingDir")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_DISTANCE")
         subtract
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_WIDTH")
         add
         newarray 2
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_detectRange_UL")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_WIDTH")
         subtract
         newarray 2
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_detectRange_DR")
         getlocal0
         pushbyte -1
         pushbyte 0
         newarray 2
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_moveDir")
         jump ofs1
         ofs0:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlocal1
         pushbyte 16
         subtract
         getlocal2
         callproperty QName(PackageNamespace(""),"enemySolidAt"), 2
         iffalse ofs2
         getlocal0
         getlex QName(PrivateNamespace(":EnemyMoth"),"DIR_RIGHT")
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_facingDir")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_WIDTH")
         add
         newarray 2
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_detectRange_UL")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_DISTANCE")
         add
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_WIDTH")
         subtract
         newarray 2
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_detectRange_DR")
         getlocal0
         pushbyte 1
         pushbyte 0
         newarray 2
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_moveDir")
         jump ofs1
         ofs2:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlocal1
         getlocal2
         pushbyte 16
         subtract
         callproperty QName(PackageNamespace(""),"enemySolidAt"), 2
         iffalse ofs3
         getlocal0
         getlex QName(PrivateNamespace(":EnemyMoth"),"DIR_DOWN")
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_facingDir")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_WIDTH")
         subtract
         getlex QName(PackageNamespace(""),"y")
         newarray 2
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_detectRange_UL")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_WIDTH")
         add
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_DISTANCE")
         subtract
         newarray 2
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_detectRange_DR")
         getlocal0
         pushbyte 0
         pushbyte 1
         newarray 2
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_moveDir")
         jump ofs1
         ofs3:
         getlocal0
         getlex QName(PrivateNamespace(":EnemyMoth"),"DIR_UP")
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_facingDir")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_WIDTH")
         subtract
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_DISTANCE")
         add
         newarray 2
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_detectRange_UL")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_WIDTH")
         add
         getlex QName(PackageNamespace(""),"y")
         newarray 2
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_detectRange_DR")
         getlocal0
         pushbyte 0
         pushbyte -1
         newarray 2
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_moveDir")
         ofs1:
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "idle"
         getlocal0
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_facingDir")
         add
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name "EnemyMoth:touch"
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"touch"), 1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"explosionPool")
         getlex QName(PackageNamespace(""),"x")
         pushbyte 8
         subtract
         getlex QName(PackageNamespace(""),"y")
         pushbyte 8
         subtract
         pushbyte 1
         callpropvoid QName(PackageNamespace(""),"boom"), 3
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playEnemyKilled"), 0
         findpropstrict QName(PackageNamespace(""),"kill")
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function updatePosition() : void
      {
         trait method QName(PackageNamespace(""),"updatePosition")
         dispid 0
         method
         name "EnemyMoth:updatePosition"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_speed")
         getlex QName(PrivateNamespace(":EnemyMoth"),"MAX_SPEED")
         ifnlt ofs0
         getlocal0
         dup
         setlocal1
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_speed")
         increment_i
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_speed")
         kill 2
         kill 1
         ofs0:
         findpropstrict QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_moveDir")
         pushbyte 0
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":EnemyMoth"),ProtectedNamespace(":EnemyMoth"),StaticProtectedNs(":EnemyMoth"),PrivateNamespace("EnemyMoth.as$335")])
         getlocal0
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_speed")
         multiply
         add
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_moveDir")
         pushbyte 1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":EnemyMoth"),ProtectedNamespace(":EnemyMoth"),StaticProtectedNs(":EnemyMoth"),PrivateNamespace("EnemyMoth.as$335")])
         getlocal0
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_speed")
         multiply
         add
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function findWalls() : void
      {
         trait method QName(PackageNamespace(""),"findWalls")
         dispid 0
         method
         name "EnemyMoth:findWalls"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "testingCoord", 0, 118
         debug 1, "foundWall", 1, 119
         pushbyte 0
         coerce_a
         setlocal1
         pushfalse
         coerce_a
         setlocal2
         getlocal0
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_facingDir")
         pushbyte 1
         equals
         dup
         iftrue ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_facingDir")
         pushbyte 3
         equals
         ofs0:
         iffalse ofs1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         coerce_a
         setlocal1
         jump ofs2
         ofs1:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         coerce_a
         setlocal1
         ofs2:
         jump ofs3
         ofs4:
         label
         jump ofs5
         ofs6:
         label
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlocal1
         getlex QName(PackageNamespace(""),"y")
         callproperty QName(PackageNamespace(""),"enemySolidAt"), 2
         iffalse ofs7
         pushtrue
         coerce_a
         setlocal2
         ofs7:
         getlocal1
         pushbyte 16
         add
         coerce_a
         setlocal1
         ofs5:
         getlocal1
         getlex QName(PackageNamespace(""),"x")
         iflt ofs6
         jump ofs8
         ofs9:
         label
         jump ofs10
         ofs11:
         label
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlocal1
         callproperty QName(PackageNamespace(""),"enemySolidAt"), 2
         iffalse ofs12
         pushtrue
         coerce_a
         setlocal2
         ofs12:
         getlocal1
         pushbyte 16
         add
         coerce_a
         setlocal1
         ofs10:
         getlocal1
         getlex QName(PackageNamespace(""),"y")
         iflt ofs11
         jump ofs8
         ofs13:
         label
         jump ofs14
         ofs15:
         label
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlocal1
         getlex QName(PackageNamespace(""),"y")
         callproperty QName(PackageNamespace(""),"enemySolidAt"), 2
         iffalse ofs16
         pushtrue
         coerce_a
         setlocal2
         ofs16:
         getlocal1
         pushbyte 16
         subtract
         coerce_a
         setlocal1
         ofs14:
         getlocal1
         getlex QName(PackageNamespace(""),"x")
         ifgt ofs15
         jump ofs8
         ofs17:
         label
         jump ofs18
         ofs19:
         label
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlocal1
         callproperty QName(PackageNamespace(""),"enemySolidAt"), 2
         iffalse ofs20
         pushtrue
         coerce_a
         setlocal2
         ofs20:
         getlocal1
         pushbyte 16
         subtract
         coerce_a
         setlocal1
         ofs18:
         getlocal1
         getlex QName(PackageNamespace(""),"y")
         ifgt ofs19
         ofs21:
         label
         jump ofs8
         ofs3:
         getlocal0
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_facingDir")
         setlocal3
         pushbyte 1
         getlocal3
         ifstrictne ofs22
         pushbyte 0
         jump ofs23
         ofs22:
         pushbyte 2
         getlocal3
         ifstrictne ofs24
         pushbyte 1
         jump ofs23
         ofs24:
         pushbyte 3
         getlocal3
         ifstrictne ofs25
         pushbyte 2
         jump ofs23
         ofs25:
         pushbyte 4
         getlocal3
         ifstrictne ofs26
         pushbyte 3
         jump ofs23
         ofs26:
         jump ofs27
         pushbyte -1
         jump ofs27
         ofs27:
         pushbyte -1
         ofs23:
         kill 3
         lookupswitch ofs21, [ofs4, ofs9, ofs13, ofs17]
         ofs8:
         getlocal2
         not
         iffalse ofs28
         getlocal0
         pushtrue
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_seesPlayer")
         ofs28:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name "EnemyMoth:update"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         findpropstrict QName(PackageNamespace(""),"onScreen")
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         dup
         convert_b
         iffalse ofs1
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"dead")
         not
         ofs1:
         iffalse ofs2
         jump ofs3
         ofs4:
         label
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         subtract
         callproperty Multiname("abs",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":EnemyMoth"),ProtectedNamespace(":EnemyMoth"),StaticProtectedNs(":EnemyMoth"),PrivateNamespace("EnemyMoth.as$335")]), 1
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_WIDTH")
         lessthan
         dup
         iffalse ofs5
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         subtract
         pushbyte 0
         lessthan
         ofs5:
         iffalse ofs6
         getlocal0
         callpropvoid QName(PackageNamespace(""),"findWalls"), 0
         ofs6:
         jump ofs7
         ofs8:
         label
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         subtract
         callproperty Multiname("abs",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":EnemyMoth"),ProtectedNamespace(":EnemyMoth"),StaticProtectedNs(":EnemyMoth"),PrivateNamespace("EnemyMoth.as$335")]), 1
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_WIDTH")
         lessthan
         dup
         iffalse ofs9
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         subtract
         pushbyte 0
         lessthan
         ofs9:
         iffalse ofs10
         getlocal0
         callpropvoid QName(PackageNamespace(""),"findWalls"), 0
         ofs10:
         jump ofs7
         ofs11:
         label
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         subtract
         callproperty Multiname("abs",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":EnemyMoth"),ProtectedNamespace(":EnemyMoth"),StaticProtectedNs(":EnemyMoth"),PrivateNamespace("EnemyMoth.as$335")]), 1
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_WIDTH")
         lessthan
         dup
         iffalse ofs12
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         subtract
         pushbyte 0
         greaterthan
         ofs12:
         iffalse ofs13
         getlocal0
         callpropvoid QName(PackageNamespace(""),"findWalls"), 0
         ofs13:
         jump ofs7
         ofs14:
         label
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         subtract
         callproperty Multiname("abs",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":EnemyMoth"),ProtectedNamespace(":EnemyMoth"),StaticProtectedNs(":EnemyMoth"),PrivateNamespace("EnemyMoth.as$335")]), 1
         getlex QName(PrivateNamespace(":EnemyMoth"),"CHECK_WIDTH")
         lessthan
         dup
         iffalse ofs15
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         subtract
         pushbyte 0
         greaterthan
         ofs15:
         iffalse ofs16
         getlocal0
         callpropvoid QName(PackageNamespace(""),"findWalls"), 0
         ofs16:
         label
         jump ofs7
         ofs3:
         getlocal0
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_facingDir")
         setlocal1
         pushbyte 1
         getlocal1
         ifstrictne ofs17
         pushbyte 0
         jump ofs18
         ofs17:
         pushbyte 2
         getlocal1
         ifstrictne ofs19
         pushbyte 1
         jump ofs18
         ofs19:
         pushbyte 3
         getlocal1
         ifstrictne ofs20
         pushbyte 2
         jump ofs18
         ofs20:
         pushbyte 4
         getlocal1
         ifstrictne ofs21
         pushbyte 3
         jump ofs18
         ofs21:
         jump ofs22
         pushbyte -1
         jump ofs22
         ofs22:
         pushbyte -1
         ofs18:
         kill 1
         lookupswitch ofs16, [ofs4, ofs8, ofs11, ofs14]
         ofs7:
         getlocal0
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_seesPlayer")
         dup
         iffalse ofs23
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_isAttacking")
         not
         ofs23:
         iffalse ofs2
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "attack"
         getlocal0
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_facingDir")
         add
         callpropvoid QName(PackageNamespace(""),"play"), 1
         getlocal0
         pushtrue
         setproperty QName(PrivateNamespace(":EnemyMoth"),"_isAttacking")
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playGigaWave"), 0
         ofs2:
         getlocal0
         getproperty QName(PrivateNamespace(":EnemyMoth"),"_isAttacking")
         iffalse ofs24
         getlocal0
         callpropvoid QName(PackageNamespace(""),"updatePosition"), 0
         ofs24:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         pushbyte 8
         add
         getlex QName(PackageNamespace(""),"y")
         pushbyte 8
         add
         callproperty QName(PackageNamespace(""),"enemySolidAt"), 2
         iffalse ofs25
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"explosionPool")
         getlex QName(PackageNamespace(""),"x")
         pushbyte 8
         subtract
         getlex QName(PackageNamespace(""),"y")
         pushbyte 8
         subtract
         pushbyte 1
         callpropvoid QName(PackageNamespace(""),"boom"), 3
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playEnemyKilled"), 0
         findpropstrict QName(PackageNamespace(""),"kill")
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         ofs25:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hurt(param1:Number) : void
      {
         trait method QName(PackageNamespace(""),"hurt")
         flag OVERRIDE
         dispid 0
         method
         name "EnemyMoth:hurt"
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"hurt"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
