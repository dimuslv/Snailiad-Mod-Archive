
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("FixBlocks",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #FixBlocks
   popscope
   initproperty QName(PackageNamespace(""),"FixBlocks")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   public class FixBlocks
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var blocks:Array;
      
      public function FixBlocks()
      {
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         initproperty QName(PackageNamespace(""),"blocks")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function destroy() : void
      {
         trait method QName(PackageNamespace(""),"destroy")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         pushnull
         coerce_s
         setlocal1
         pushbyte 0
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"blocks")
         coerce_a
         setlocal3
         jump ofs0
         ofs1:
         label
         getlocal3
         getlocal2
         nextname
         coerce_s
         setlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"blocks")
         getlocal1
         pushnull
         setproperty MultinameL([PrivateNamespace(null,"#FixBlocks/1"),PackageNamespace(""),PrivateNamespace(null,"#FixBlocks/2"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("FixBlocks"),StaticProtectedNs("FixBlocks"),StaticProtectedNs("Object")])
         ofs0:
         hasnext2 3, 2
         iftrue ofs1
         kill 3
         kill 2
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"blocks")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function rememberBlock(param1:int, param2:int, param3:int, param4:int) : void
      {
         trait method QName(PackageNamespace(""),"rememberBlock")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"blocks")
         findpropstrict QName(PackageNamespace(""),"BrokenBlock")
         getlocal1
         getlocal2
         getlocal3
         getlocal 4
         constructprop QName(PackageNamespace(""),"BrokenBlock"), 4
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function repairAll() : void
      {
         trait method QName(PackageNamespace(""),"repairAll")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         pushbyte 0
         setlocal1
         jump ofs0
         ofs1:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"blocks")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"#FixBlocks/1"),PackageNamespace(""),PrivateNamespace(null,"#FixBlocks/2"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("FixBlocks"),StaticProtectedNs("FixBlocks"),StaticProtectedNs("Object")])
         callpropvoid Multiname("repair",[PrivateNamespace(null,"#FixBlocks/1"),PackageNamespace(""),PrivateNamespace(null,"#FixBlocks/2"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("FixBlocks"),StaticProtectedNs("FixBlocks"),StaticProtectedNs("Object")]), 0
         inclocal_i 1
         ofs0:
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"blocks")
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         initproperty QName(PackageNamespace(""),"blocks")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
