
{
   method
   name ""
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 7
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("Player",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   newclass #Player
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"Player")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import flash.utils.clearInterval;
   import flash.utils.setInterval;
   import org.flixel.FlxG;
   import org.flixel.FlxObject;
   import org.flixel.FlxSprite;
   
   public class Player extends FlxSprite
   {
      
      public static const BOSSRUSH_STARTX:int = 237;
      
      public static const BOSSRUSH_STARTY:int = 313;
      
      public static const MAX_HELIX_FRAGMENTS:int = 30;
      
      public static const MAX_HEART_CONTAINERS:int = 14;
      
      public static const GRAV_DOWN:int = 0;
      
      public static const GRAV_RIGHT:int = 1;
      
      public static const GRAV_UP:int = 2;
      
      public static const GRAV_LEFT:int = 3;
      
      public static const DIR_DOWN:int = 0;
      
      public static const DIR_RIGHT:int = 1;
      
      public static const DIR_UP:int = 2;
      
      public static const DIR_LEFT:int = 3;
      
      public static const FACE_FLOOR_RIGHT:int = 0;
      
      public static const FACE_FLOOR_LEFT:int = 1;
      
      public static const FACE_CEIL_LEFT:int = 2;
      
      public static const FACE_CEIL_RIGHT:int = 3;
      
      public static const FACE_RWALL_UP:int = 4;
      
      public static const FACE_RWALL_DOWN:int = 5;
      
      public static const FACE_LWALL_UP:int = 6;
      
      public static const FACE_LWALL_DOWN:int = 7;
      
      public static const DIR_NAME:Array;
      
      private static const DEATHFADE_DELAY:int = 1000;
      
      private static const TELEPORT_DELAY:int = 40;
      
      private static const REVIVE_DELAY:int = 2000;
      
      private static const SPRITE_WIDTH:int = 32;
      
      private static const SPRITE_HEIGHT:int = 32;
      
      private static const REGULAR_JUMP:int = 428;
      
      private static const HIGH_JUMP:int = 920;
      
      public static const WEAPON_NONE:int = -1;
      
      public static const WEAPON_PEA_SHOOTER:int = 0;
      
      public static const WEAPON_PEA_BOOMERANG:int = 1;
      
      public static const WEAPON_PEA_RAINBOW_WAVE:int = 2;
      
      public static const SNAILTYPE_NORMAL:int = 1;
      
      public static const SNAILTYPE_ICE:int = 2;
      
      public static const SNAILTYPE_GRAVITY:int = 3;
      
      public static const SNAILTYPE_METAL:int = 4;
      
      public static const SNAILTYPE_ICEGRAV:int = 5;
      
      public static const SNAILTYPE_GRAVMETAL:int = 6;
      
      public static const SNAILTYPE_ICEMETAL:int = 7;
      
      public static const SNAILTYPE_ALL:int = 8;
      
      public static const STARTING_MAX_HEARTS:int = 3;
      
      public static var ALT_WEAPON_1_KEY:String = "";
      
      public static var ALT_WEAPON_2_KEY:String = "";
      
      public static var ALT_WEAPON_3_KEY:String = "";
      
      public static var ALT_WEAPON_NEXT_KEY:String = "";
      
      public static var ALT_WEAPON_PREV_KEY:String = "";
      
      public static const DEFAULT_WEAPON_1_KEY:String = "ONE";
      
      public static const DEFAULT_WEAPON_2_KEY:String = "TWO";
      
      public static const DEFAULT_WEAPON_3_KEY:String = "THREE";
      
      public static const DEFAULT_WEAPON_NEXT_KEY:String = "PLUS";
      
      public static const DEFAULT_WEAPON_PREV_KEY:String = "MINUS";
      
      public static const DEFAULT_MAP_KEY:String = "M";
      
      public static const DEFAULT_JUMP_KEY:String = "Z";
      
      public static const DEFAULT_SHOOT_KEY:String = "X";
      
      public static const DEFAULT_STRAFE_KEY:String = "C";
      
      public static const DEFAULT_ALT_JUMP_KEY:String = "K";
      
      public static const DEFAULT_ALT_SHOOT_KEY:String = "J";
      
      public static const DEFAULT_ALT_STRAFE_KEY:String = "H";
      
      public static const DEFAULT_UP_KEY:String = "UP";
      
      public static const DEFAULT_LEFT_KEY:String = "LEFT";
      
      public static const DEFAULT_DOWN_KEY:String = "DOWN";
      
      public static const DEFAULT_RIGHT_KEY:String = "RIGHT";
      
      public static const DEFAULT_ALT_UP_KEY:String = "W";
      
      public static const DEFAULT_ALT_LEFT_KEY:String = "A";
      
      public static const DEFAULT_ALT_DOWN_KEY:String = "S";
      
      public static const DEFAULT_ALT_RIGHT_KEY:String = "D";
      
      public static var WEAPON_1_KEY:String;
      
      public static var WEAPON_2_KEY:String;
      
      public static var WEAPON_3_KEY:String;
      
      public static var WEAPON_NEXT_KEY:String;
      
      public static var WEAPON_PREV_KEY:String;
      
      public static var MAP_KEY:String;
      
      public static var JUMP_KEY:String;
      
      public static var SHOOT_KEY:String;
      
      public static var STRAFE_KEY:String;
      
      public static var ALT_JUMP_KEY:String;
      
      public static var ALT_SHOOT_KEY:String;
      
      public static var ALT_STRAFE_KEY:String;
      
      public static var UP_KEY:String;
      
      public static var LEFT_KEY:String;
      
      public static var DOWN_KEY:String;
      
      public static var RIGHT_KEY:String;
      
      public static var ALT_UP_KEY:String;
      
      public static var ALT_LEFT_KEY:String;
      
      public static var ALT_DOWN_KEY:String;
      
      public static var ALT_RIGHT_KEY:String;
      
      private static const SLEEP_TIMEOUT:Number = 30;
      
      public static var fireToggle:Boolean = false;
      
      public static const FIRING_MODE_NORMAL:int = 0;
      
      public static const FIRING_MODE_TOGGLE:int = 1;
      
      public static var firingMode:int;
      
      {
         method
         name ""
         returns null
         
         body
         maxstack 9
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findproperty QName(PackageNamespace(""),"BOSSRUSH_STARTX")
         pushshort 237
         initproperty QName(PackageNamespace(""),"BOSSRUSH_STARTX")
         findproperty QName(PackageNamespace(""),"BOSSRUSH_STARTY")
         pushshort 313
         initproperty QName(PackageNamespace(""),"BOSSRUSH_STARTY")
         findproperty QName(PackageNamespace(""),"MAX_HELIX_FRAGMENTS")
         pushbyte 30
         initproperty QName(PackageNamespace(""),"MAX_HELIX_FRAGMENTS")
         findproperty QName(PackageNamespace(""),"MAX_HEART_CONTAINERS")
         pushbyte 14
         initproperty QName(PackageNamespace(""),"MAX_HEART_CONTAINERS")
         findproperty QName(PackageNamespace(""),"GRAV_DOWN")
         pushbyte 0
         initproperty QName(PackageNamespace(""),"GRAV_DOWN")
         findproperty QName(PackageNamespace(""),"GRAV_RIGHT")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"GRAV_RIGHT")
         findproperty QName(PackageNamespace(""),"GRAV_UP")
         pushbyte 2
         initproperty QName(PackageNamespace(""),"GRAV_UP")
         findproperty QName(PackageNamespace(""),"GRAV_LEFT")
         pushbyte 3
         initproperty QName(PackageNamespace(""),"GRAV_LEFT")
         findproperty QName(PackageNamespace(""),"DIR_DOWN")
         pushbyte 0
         initproperty QName(PackageNamespace(""),"DIR_DOWN")
         findproperty QName(PackageNamespace(""),"DIR_RIGHT")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"DIR_RIGHT")
         findproperty QName(PackageNamespace(""),"DIR_UP")
         pushbyte 2
         initproperty QName(PackageNamespace(""),"DIR_UP")
         findproperty QName(PackageNamespace(""),"DIR_LEFT")
         pushbyte 3
         initproperty QName(PackageNamespace(""),"DIR_LEFT")
         findproperty QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         pushbyte 0
         initproperty QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         findproperty QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         findproperty QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         pushbyte 2
         initproperty QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         findproperty QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         pushbyte 3
         initproperty QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         findproperty QName(PackageNamespace(""),"FACE_RWALL_UP")
         pushbyte 4
         initproperty QName(PackageNamespace(""),"FACE_RWALL_UP")
         findproperty QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         pushbyte 5
         initproperty QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         findproperty QName(PackageNamespace(""),"FACE_LWALL_UP")
         pushbyte 6
         initproperty QName(PackageNamespace(""),"FACE_LWALL_UP")
         findproperty QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         pushbyte 7
         initproperty QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         findproperty QName(PackageNamespace(""),"DIR_NAME")
         pushstring "floor right"
         pushstring "floor left"
         pushstring "ceil left"
         pushstring "ceil right"
         pushstring "rwall up"
         pushstring "rwall down"
         pushstring "lwall up"
         pushstring "lwall down"
         newarray 8
         initproperty QName(PackageNamespace(""),"DIR_NAME")
         findproperty QName(PrivateNamespace(":Player"),"DEATHFADE_DELAY")
         pushshort 1000
         initproperty QName(PrivateNamespace(":Player"),"DEATHFADE_DELAY")
         findproperty QName(PrivateNamespace(":Player"),"TELEPORT_DELAY")
         pushbyte 40
         initproperty QName(PrivateNamespace(":Player"),"TELEPORT_DELAY")
         findproperty QName(PrivateNamespace(":Player"),"REVIVE_DELAY")
         pushshort 2000
         initproperty QName(PrivateNamespace(":Player"),"REVIVE_DELAY")
         findproperty QName(PrivateNamespace(":Player"),"SPRITE_WIDTH")
         pushbyte 32
         initproperty QName(PrivateNamespace(":Player"),"SPRITE_WIDTH")
         findproperty QName(PrivateNamespace(":Player"),"SPRITE_HEIGHT")
         pushbyte 32
         initproperty QName(PrivateNamespace(":Player"),"SPRITE_HEIGHT")
         findproperty QName(PrivateNamespace(":Player"),"REGULAR_JUMP")
         pushshort 428
         initproperty QName(PrivateNamespace(":Player"),"REGULAR_JUMP")
         findproperty QName(PrivateNamespace(":Player"),"HIGH_JUMP")
         pushshort 920
         initproperty QName(PrivateNamespace(":Player"),"HIGH_JUMP")
         findproperty QName(PackageNamespace(""),"WEAPON_NONE")
         pushbyte -1
         initproperty QName(PackageNamespace(""),"WEAPON_NONE")
         findproperty QName(PackageNamespace(""),"WEAPON_PEA_SHOOTER")
         pushbyte 0
         initproperty QName(PackageNamespace(""),"WEAPON_PEA_SHOOTER")
         findproperty QName(PackageNamespace(""),"WEAPON_PEA_BOOMERANG")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"WEAPON_PEA_BOOMERANG")
         findproperty QName(PackageNamespace(""),"WEAPON_PEA_RAINBOW_WAVE")
         pushbyte 2
         initproperty QName(PackageNamespace(""),"WEAPON_PEA_RAINBOW_WAVE")
         findproperty QName(PackageNamespace(""),"SNAILTYPE_NORMAL")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"SNAILTYPE_NORMAL")
         findproperty QName(PackageNamespace(""),"SNAILTYPE_ICE")
         pushbyte 2
         initproperty QName(PackageNamespace(""),"SNAILTYPE_ICE")
         findproperty QName(PackageNamespace(""),"SNAILTYPE_GRAVITY")
         pushbyte 3
         initproperty QName(PackageNamespace(""),"SNAILTYPE_GRAVITY")
         findproperty QName(PackageNamespace(""),"SNAILTYPE_METAL")
         pushbyte 4
         initproperty QName(PackageNamespace(""),"SNAILTYPE_METAL")
         findproperty QName(PackageNamespace(""),"SNAILTYPE_ICEGRAV")
         pushbyte 5
         initproperty QName(PackageNamespace(""),"SNAILTYPE_ICEGRAV")
         findproperty QName(PackageNamespace(""),"SNAILTYPE_GRAVMETAL")
         pushbyte 6
         initproperty QName(PackageNamespace(""),"SNAILTYPE_GRAVMETAL")
         findproperty QName(PackageNamespace(""),"SNAILTYPE_ICEMETAL")
         pushbyte 7
         initproperty QName(PackageNamespace(""),"SNAILTYPE_ICEMETAL")
         findproperty QName(PackageNamespace(""),"SNAILTYPE_ALL")
         pushbyte 8
         initproperty QName(PackageNamespace(""),"SNAILTYPE_ALL")
         findproperty QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
         pushbyte 3
         initproperty QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
         findproperty QName(PackageNamespace(""),"ALT_WEAPON_1_KEY")
         pushstring ""
         setproperty QName(PackageNamespace(""),"ALT_WEAPON_1_KEY")
         findproperty QName(PackageNamespace(""),"ALT_WEAPON_2_KEY")
         pushstring ""
         setproperty QName(PackageNamespace(""),"ALT_WEAPON_2_KEY")
         findproperty QName(PackageNamespace(""),"ALT_WEAPON_3_KEY")
         pushstring ""
         setproperty QName(PackageNamespace(""),"ALT_WEAPON_3_KEY")
         findproperty QName(PackageNamespace(""),"ALT_WEAPON_NEXT_KEY")
         pushstring ""
         setproperty QName(PackageNamespace(""),"ALT_WEAPON_NEXT_KEY")
         findproperty QName(PackageNamespace(""),"ALT_WEAPON_PREV_KEY")
         pushstring ""
         setproperty QName(PackageNamespace(""),"ALT_WEAPON_PREV_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_1_KEY")
         pushstring "ONE"
         initproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_1_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_2_KEY")
         pushstring "TWO"
         initproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_2_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_3_KEY")
         pushstring "THREE"
         initproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_3_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_NEXT_KEY")
         pushstring "PLUS"
         initproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_NEXT_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_PREV_KEY")
         pushstring "MINUS"
         initproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_PREV_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_MAP_KEY")
         pushstring "M"
         initproperty QName(PackageNamespace(""),"DEFAULT_MAP_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_JUMP_KEY")
         pushstring "Z"
         initproperty QName(PackageNamespace(""),"DEFAULT_JUMP_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_SHOOT_KEY")
         pushstring "X"
         initproperty QName(PackageNamespace(""),"DEFAULT_SHOOT_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_STRAFE_KEY")
         pushstring "C"
         initproperty QName(PackageNamespace(""),"DEFAULT_STRAFE_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_ALT_JUMP_KEY")
         pushstring "K"
         initproperty QName(PackageNamespace(""),"DEFAULT_ALT_JUMP_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_ALT_SHOOT_KEY")
         pushstring "J"
         initproperty QName(PackageNamespace(""),"DEFAULT_ALT_SHOOT_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_ALT_STRAFE_KEY")
         pushstring "H"
         initproperty QName(PackageNamespace(""),"DEFAULT_ALT_STRAFE_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_UP_KEY")
         pushstring "UP"
         initproperty QName(PackageNamespace(""),"DEFAULT_UP_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_LEFT_KEY")
         pushstring "LEFT"
         initproperty QName(PackageNamespace(""),"DEFAULT_LEFT_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_DOWN_KEY")
         pushstring "DOWN"
         initproperty QName(PackageNamespace(""),"DEFAULT_DOWN_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_RIGHT_KEY")
         pushstring "RIGHT"
         initproperty QName(PackageNamespace(""),"DEFAULT_RIGHT_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_ALT_UP_KEY")
         pushstring "W"
         initproperty QName(PackageNamespace(""),"DEFAULT_ALT_UP_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_ALT_LEFT_KEY")
         pushstring "A"
         initproperty QName(PackageNamespace(""),"DEFAULT_ALT_LEFT_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_ALT_DOWN_KEY")
         pushstring "S"
         initproperty QName(PackageNamespace(""),"DEFAULT_ALT_DOWN_KEY")
         findproperty QName(PackageNamespace(""),"DEFAULT_ALT_RIGHT_KEY")
         pushstring "D"
         initproperty QName(PackageNamespace(""),"DEFAULT_ALT_RIGHT_KEY")
         findproperty QName(PackageNamespace(""),"WEAPON_1_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_1_KEY")
         setproperty QName(PackageNamespace(""),"WEAPON_1_KEY")
         findproperty QName(PackageNamespace(""),"WEAPON_2_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_2_KEY")
         setproperty QName(PackageNamespace(""),"WEAPON_2_KEY")
         findproperty QName(PackageNamespace(""),"WEAPON_3_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_3_KEY")
         setproperty QName(PackageNamespace(""),"WEAPON_3_KEY")
         findproperty QName(PackageNamespace(""),"WEAPON_NEXT_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_NEXT_KEY")
         setproperty QName(PackageNamespace(""),"WEAPON_NEXT_KEY")
         findproperty QName(PackageNamespace(""),"WEAPON_PREV_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_PREV_KEY")
         setproperty QName(PackageNamespace(""),"WEAPON_PREV_KEY")
         findproperty QName(PackageNamespace(""),"MAP_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_MAP_KEY")
         setproperty QName(PackageNamespace(""),"MAP_KEY")
         findproperty QName(PackageNamespace(""),"JUMP_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_JUMP_KEY")
         setproperty QName(PackageNamespace(""),"JUMP_KEY")
         findproperty QName(PackageNamespace(""),"SHOOT_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_SHOOT_KEY")
         setproperty QName(PackageNamespace(""),"SHOOT_KEY")
         findproperty QName(PackageNamespace(""),"STRAFE_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_STRAFE_KEY")
         setproperty QName(PackageNamespace(""),"STRAFE_KEY")
         findproperty QName(PackageNamespace(""),"ALT_JUMP_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_JUMP_KEY")
         setproperty QName(PackageNamespace(""),"ALT_JUMP_KEY")
         findproperty QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_SHOOT_KEY")
         setproperty QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         findproperty QName(PackageNamespace(""),"ALT_STRAFE_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_STRAFE_KEY")
         setproperty QName(PackageNamespace(""),"ALT_STRAFE_KEY")
         findproperty QName(PackageNamespace(""),"UP_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_UP_KEY")
         setproperty QName(PackageNamespace(""),"UP_KEY")
         findproperty QName(PackageNamespace(""),"LEFT_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_LEFT_KEY")
         setproperty QName(PackageNamespace(""),"LEFT_KEY")
         findproperty QName(PackageNamespace(""),"DOWN_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_DOWN_KEY")
         setproperty QName(PackageNamespace(""),"DOWN_KEY")
         findproperty QName(PackageNamespace(""),"RIGHT_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_RIGHT_KEY")
         setproperty QName(PackageNamespace(""),"RIGHT_KEY")
         findproperty QName(PackageNamespace(""),"ALT_UP_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_UP_KEY")
         setproperty QName(PackageNamespace(""),"ALT_UP_KEY")
         findproperty QName(PackageNamespace(""),"ALT_LEFT_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_LEFT_KEY")
         setproperty QName(PackageNamespace(""),"ALT_LEFT_KEY")
         findproperty QName(PackageNamespace(""),"ALT_DOWN_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_DOWN_KEY")
         setproperty QName(PackageNamespace(""),"ALT_DOWN_KEY")
         findproperty QName(PackageNamespace(""),"ALT_RIGHT_KEY")
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_RIGHT_KEY")
         setproperty QName(PackageNamespace(""),"ALT_RIGHT_KEY")
         findproperty QName(PrivateNamespace(":Player"),"SLEEP_TIMEOUT")
         pushbyte 30
         initproperty QName(PrivateNamespace(":Player"),"SLEEP_TIMEOUT")
         findproperty QName(PackageNamespace(""),"fireToggle")
         pushfalse
         setproperty QName(PackageNamespace(""),"fireToggle")
         findproperty QName(PackageNamespace(""),"FIRING_MODE_NORMAL")
         pushbyte 0
         initproperty QName(PackageNamespace(""),"FIRING_MODE_NORMAL")
         findproperty QName(PackageNamespace(""),"FIRING_MODE_TOGGLE")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"FIRING_MODE_TOGGLE")
         findproperty QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_NORMAL")
         setproperty QName(PackageNamespace(""),"firingMode")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _cuteLittleSnails:Boolean;
      
      public var _invincible:Boolean;
      
      public var _superattack:Boolean;
      
      public var noCollide:Boolean;
      
      public var hasSetHpBar:Boolean;
      
      public var saveOnNextFrame:Boolean;
      
      public var _slugMode:Boolean;
      
      public var _justHitSteps:Boolean;
      
      private var WEAPON_TIMEOUTS:Array;
      
      private var WEAPON_SPEED:Array;
      
      public var pressedRightSinceJump:Boolean;
      
      public var pressedLeftSinceJump:Boolean;
      
      public var cheatsEnabled:Boolean;
      
      public var _easyMode:Boolean;
      
      public var _hardMode:Boolean;
      
      public var _insaneMode:Boolean;
      
      public var gameTime:ShadowNumber;
      
      public var clearTime:ShadowNumber;
      
      private var _jumpPower:CipherInt;
      
      public var _gravityDir:uint = 0;
      
      private var _desiredGravity:uint = 0;
      
      private var _faceDir:int = 0;
      
      public var _runSpeed:CipherInt;
      
      private var _maxSpeed:CipherInt;
      
      private var _gravity:CipherInt;
      
      private var _hidingInShell:Boolean;
      
      public var _jumping:Boolean;
      
      private var _fallFrames:int = 0;
      
      private var _hideOfsX:int = 0;
      
      private var _hideOfsY:int = 0;
      
      private var _hasWeapon:Array;
      
      private var _hasColdFoot:CheckBool;
      
      private var _hasGravityJump:CheckBool;
      
      private var _hasDevastator:CheckBool;
      
      private var _hasHighJump:CheckBool;
      
      private var _hasGravityShock:CheckBool;
      
      private var _hasShellShield:CheckBool;
      
      private var _hasArmor:CheckBool;
      
      private var _hasTurbo:CheckBool;
      
      private var _justHitHeadOrWall:Boolean;
      
      private var _paralyzed:Boolean;
      
      private var _snailType:CipherInt;
      
      private var _snailTypePrefix:String = "snail1_";
      
      private var _bulletGroups:PlayerBulletGroups;
      
      private var _currentWeapon:CipherInt;
      
      private var _turboMultiplier:ShadowNumber;
      
      public var _weaponTimeout:ShadowNumber;
      
      private var _curHp:CipherInt;
      
      public var _maxHp:CipherInt;
      
      public var deathFadeInterval:uint;
      
      public var teleportInterval:uint;
      
      public var reviveInterval:uint;
      
      private var _helixFragments:CipherInt;
      
      private var _mostRecentDir:int = 0;
      
      private var _mostRecentUpDown:int = 0;
      
      private var _mostRecentLeftRight:int = 1;
      
      public var hasSeenIsis:Boolean;
      
      public var hasSeenHelp:Boolean;
      
      public var hasWonGame:Boolean;
      
      public var hasWonHardMode:Boolean;
      
      public var hasWonInsaneMode:Boolean;
      
      public var hasWonBossRush:Boolean;
      
      public var hasFullClear:Boolean;
      
      public var bestMainTime:ShadowNumber;
      
      public var bestHardTime:ShadowNumber;
      
      public var bestInsaneTime:ShadowNumber;
      
      public var bestBossRushTime:ShadowNumber;
      
      private var _sleepTimeout:Number;
      
      public function Player(param1:PlayerBulletGroups)
      {
         method
         name ":Player/Player"
         param QName(PackageNamespace(""),"PlayerBulletGroups")
         returns null
         
         body
         maxstack 8
         localcount 6
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "_loc2_", 1, 374
         debug 1, "_loc3_", 2, 375
         debug 1, "_loc4_", 3, 690
         debug 1, "_loc5_", 4, 333
         pushbyte 0
         setlocal 5
         getlocal0
         pushdouble 0.085
         pushdouble 0.3
         pushdouble 0.17
         newarray 3
         setproperty QName(PrivateNamespace(":Player"),"WEAPON_TIMEOUTS")
         getlocal0
         pushshort 370
         pushshort 330
         pushbyte 60
         newarray 3
         setproperty QName(PrivateNamespace(":Player"),"WEAPON_SPEED")
         getlocal0
         pushfalse
         pushfalse
         pushfalse
         newarray 3
         setproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         getlocal0
         constructsuper 0
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"_easyMode")
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"_hardMode")
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"_insaneMode")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         getlex QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         multiply
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         setproperty QName(PrivateNamespace(":Player"),"_curHp")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         getlex QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         multiply
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         setproperty QName(PackageNamespace(""),"_maxHp")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         getlex QName(PackageNamespace(""),"WEAPON_NONE")
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         setproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         pushshort 1200
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         setproperty QName(PrivateNamespace(":Player"),"_gravity")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         setproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         setproperty QName(PrivateNamespace(":Player"),"_hasColdFoot")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         setproperty QName(PrivateNamespace(":Player"),"_hasDevastator")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         setproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         setproperty QName(PrivateNamespace(":Player"),"_hasGravityShock")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         setproperty QName(PrivateNamespace(":Player"),"_hasHighJump")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         setproperty QName(PrivateNamespace(":Player"),"_hasShellShield")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         setproperty QName(PrivateNamespace(":Player"),"_hasTurbo")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         setproperty QName(PrivateNamespace(":Player"),"_helixFragments")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         getlex QName(PrivateNamespace(":Player"),"REGULAR_JUMP")
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         setproperty QName(PrivateNamespace(":Player"),"_jumpPower")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         pushshort 500
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         setproperty QName(PrivateNamespace(":Player"),"_maxSpeed")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         pushshort 260
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         setproperty QName(PackageNamespace(""),"_runSpeed")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         getlex QName(PackageNamespace(""),"SNAILTYPE_NORMAL")
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         setproperty QName(PrivateNamespace(":Player"),"_snailType")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 1
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         setproperty QName(PrivateNamespace(":Player"),"_turboMultiplier")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         setproperty QName(PackageNamespace(""),"_weaponTimeout")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         setproperty QName(PackageNamespace(""),"bestBossRushTime")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         setproperty QName(PackageNamespace(""),"bestMainTime")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         setproperty QName(PackageNamespace(""),"bestHardTime")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         setproperty QName(PackageNamespace(""),"bestInsaneTime")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         setproperty QName(PackageNamespace(""),"gameTime")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         setproperty QName(PackageNamespace(""),"clearTime")
         getlocal0
         getlex QName(PrivateNamespace(":Player"),"SLEEP_TIMEOUT")
         setproperty QName(PrivateNamespace(":Player"),"_sleepTimeout")
         getlocal0
         getlocal1
         setproperty QName(PrivateNamespace(":Player"),"_bulletGroups")
         getlocal0
         pushfalse
         setproperty QName(PrivateNamespace(":Player"),"_paralyzed")
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"hasSetHpBar")
         getlex QName(PackageNamespace(""),"maxVelocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_maxSpeed")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"maxVelocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_maxSpeed")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         getlex QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         multiply
         callpropvoid QName(PackageNamespace(""),"setMaxHp"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         multiply
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         coerce QName(PackageNamespace(""),"SaveData")
         setlocal2
         getlocal2
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         coerce QName(PackageNamespace(""),"XMLList")
         setlocal3
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         iffalse ofs0
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setEasyMode"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setHardMode"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setInsaneMode"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PrivateNamespace(":Player"),"setHasTurbo"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setHighJump"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setHasDevastator"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setHasGravityShock"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setHasShellShield"), 1
         getlocal0
         pushbyte -1
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         getlocal0
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"setHelixFragments"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_NORMAL")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"gameTime")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"value")
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"BOSSRUSH_STARTX")
         pushbyte 16
         multiply
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"BOSSRUSH_STARTY")
         pushbyte 16
         multiply
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         jump ofs1
         ofs0:
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setEasyMode"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setHardMode"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setInsaneMode"), 1
         getlocal2
         pushstring "savex"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs2
         getlocal3
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"config")
         callproperty QName(PackageNamespace(""),"getPlayerStartX"), 0
         pushbyte 16
         multiply
         setproperty Multiname("savex",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs2:
         getlocal2
         pushstring "savey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs3
         getlocal3
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"config")
         callproperty QName(PackageNamespace(""),"getPlayerStartY"), 0
         pushbyte 16
         multiply
         setproperty Multiname("savey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs3:
         getlocal2
         pushstring "gameTime"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs4
         getlocal3
         pushbyte 0
         setproperty Multiname("gameTime",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs4:
         getlocal2
         pushstring "easyMode"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs5
         getlocal3
         pushfalse
         setproperty Multiname("easyMode",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs5:
         getlocal2
         pushstring "hardMode"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs6
         getlocal3
         pushfalse
         setproperty Multiname("hardMode",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs6:
         getlocal2
         pushstring "insaneMode"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs7
         getlocal3
         pushfalse
         setproperty Multiname("insaneMode",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs7:
         getlocal2
         pushstring "hasDevastator"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs8
         getlocal3
         pushfalse
         setproperty Multiname("hasDevastator",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs8:
         getlocal2
         pushstring "hasGravityShock"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs9
         getlocal3
         pushfalse
         setproperty Multiname("hasGravityShock",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs9:
         getlocal2
         pushstring "hasShellShield"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs10
         getlocal3
         pushfalse
         setproperty Multiname("hasShellShield",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs10:
         getlocal2
         pushstring "hasTurbo"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs11
         getlocal3
         pushfalse
         setproperty Multiname("hasTurbo",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs11:
         getlocal2
         pushstring "toggleFire"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs12
         getlocal3
         pushfalse
         setproperty Multiname("toggleFire",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs12:
         getlocal2
         pushstring "hasHighJump"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs13
         getlocal3
         pushfalse
         setproperty Multiname("hasHighJump",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs13:
         getlocal2
         pushstring "hasWeaponZero"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs14
         getlocal3
         pushfalse
         setproperty Multiname("hasWeaponZero",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs14:
         getlocal2
         pushstring "hasWeaponOne"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs15
         getlocal3
         pushfalse
         setproperty Multiname("hasWeaponOne",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs15:
         getlocal2
         pushstring "hasWeaponTwo"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs16
         getlocal3
         pushfalse
         setproperty Multiname("hasWeaponTwo",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs16:
         getlocal2
         pushstring "helixFragments"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs17
         getlocal3
         pushbyte 0
         setproperty Multiname("helixFragments",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs17:
         getlocal2
         pushstring "lastWeapon"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs18
         getlocal3
         pushbyte -1
         setproperty Multiname("lastWeapon",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs18:
         getlocal2
         pushstring "snailType"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs19
         getlocal3
         getlex QName(PackageNamespace(""),"SNAILTYPE_NORMAL")
         setproperty Multiname("snailType",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs19:
         getlocal2
         pushstring "hideTab"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs20
         getlocal3
         pushfalse
         setproperty Multiname("hideTab",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs20:
         getlocal2
         pushstring "hideMiniMap"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs21
         getlocal3
         pushfalse
         setproperty Multiname("hideMiniMap",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs21:
         getlocal2
         pushstring "hasGoodEnding"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs22
         getlocal3
         pushfalse
         setproperty Multiname("hasGoodEnding",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs22:
         getlocal2
         pushstring "mapKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs23
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_MAP_KEY")
         setproperty Multiname("mapKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs23:
         getlocal2
         pushstring "jumpKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs24
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_JUMP_KEY")
         setproperty Multiname("jumpKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs24:
         getlocal2
         pushstring "shootKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs25
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_SHOOT_KEY")
         setproperty Multiname("shootKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs25:
         getlocal2
         pushstring "strafeKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs26
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_STRAFE_KEY")
         setproperty Multiname("strafeKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs26:
         getlocal2
         pushstring "upKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs27
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_UP_KEY")
         setproperty Multiname("upKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs27:
         getlocal2
         pushstring "leftKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs28
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_LEFT_KEY")
         setproperty Multiname("leftKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs28:
         getlocal2
         pushstring "downKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs29
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_DOWN_KEY")
         setproperty Multiname("downKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs29:
         getlocal2
         pushstring "rightKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs30
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_RIGHT_KEY")
         setproperty Multiname("rightKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs30:
         getlocal2
         pushstring "jumpAltKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs31
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_JUMP_KEY")
         setproperty Multiname("jumpAltKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs31:
         getlocal2
         pushstring "shootAltKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs32
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_SHOOT_KEY")
         setproperty Multiname("shootAltKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs32:
         getlocal2
         pushstring "strafeAltKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs33
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_STRAFE_KEY")
         setproperty Multiname("strafeAltKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs33:
         getlocal2
         pushstring "upAltKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs34
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_UP_KEY")
         setproperty Multiname("upAltKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs34:
         getlocal2
         pushstring "leftAltKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs35
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_LEFT_KEY")
         setproperty Multiname("leftAltKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs35:
         getlocal2
         pushstring "downAltKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs36
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_DOWN_KEY")
         setproperty Multiname("downAltKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs36:
         getlocal2
         pushstring "rightAltKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs37
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_RIGHT_KEY")
         setproperty Multiname("rightAltKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs37:
         getlocal2
         pushstring "weap1Key"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs38
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_1_KEY")
         setproperty Multiname("weap1Key",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs38:
         getlocal2
         pushstring "weap2Key"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs39
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_2_KEY")
         setproperty Multiname("weap2Key",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs39:
         getlocal2
         pushstring "weap3Key"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs40
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_3_KEY")
         setproperty Multiname("weap3Key",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs40:
         getlocal2
         pushstring "weapNextKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs41
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_NEXT_KEY")
         setproperty Multiname("weapNextKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs41:
         getlocal2
         pushstring "weapPrevKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs42
         getlocal3
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_PREV_KEY")
         setproperty Multiname("weapPrevKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs42:
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushstring "hasWonGame"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         setproperty QName(PackageNamespace(""),"hasWonGame")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushstring "hasWonHardMode"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         setproperty QName(PackageNamespace(""),"hasWonHardMode")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushstring "hasWonInsaneMode"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         setproperty QName(PackageNamespace(""),"hasWonInsaneMode")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushstring "hasFullClear"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         setproperty QName(PackageNamespace(""),"hasFullClear")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushstring "hasWonBossRush"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         setproperty QName(PackageNamespace(""),"hasWonBossRush")
         getlex QName(PackageNamespace(""),"PlayState")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushstring "hideTab"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         setproperty QName(PackageNamespace(""),"hideTab")
         getlex QName(PackageNamespace(""),"PlayState")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushstring "hideMiniMap"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         setproperty QName(PackageNamespace(""),"hideMiniMap")
         getlex QName(PackageNamespace(""),"PlayState")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushstring "hasGoodEnding"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         setproperty QName(PackageNamespace(""),"hasGoodEnding")
         getlocal0
         getlocal2
         pushstring "easyMode"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setEasyMode"), 1
         getlocal0
         getlocal2
         pushstring "hardMode"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHardMode"), 1
         getlocal0
         getlocal2
         pushstring "insaneMode"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setInsaneMode"), 1
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_hardMode")
         dup
         iffalse ofs43
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_insaneMode")
         not
         ofs43:
         setproperty QName(PackageNamespace(""),"_slugMode")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs44
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"WEAPON_TIMEOUTS")
         pushbyte 0
         pushdouble 0.046
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"WEAPON_TIMEOUTS")
         pushbyte 1
         pushdouble 0.23
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"WEAPON_TIMEOUTS")
         pushbyte 2
         pushdouble 0.13
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs44:
         getlocal2
         pushstring "maxHp"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         not
         iffalse ofs45
         getlocal3
         getlex QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         multiply
         setproperty Multiname("maxHp",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs45:
         getlocal0
         getlocal3
         getproperty Multiname("maxHp",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         callpropvoid QName(PackageNamespace(""),"setMaxHp"), 1
         getlocal0
         pushint 999999999
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"bestMainTime")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal3
         getproperty Multiname("bestMainTime",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PackageNamespace(""),"bestHardTime")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal3
         getproperty Multiname("bestHardTime",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PackageNamespace(""),"bestBossRushTime")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal3
         getproperty Multiname("bestBossRushTime",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal3
         getproperty Multiname("bestInsaneTime",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PackageNamespace(""),"gameTime")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal3
         getproperty Multiname("gameTime",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         pushbyte 0
         getlocal2
         pushstring "hasWeaponZero"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHasWeapon"), 2
         getlocal0
         pushbyte 1
         getlocal2
         pushstring "hasWeaponOne"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHasWeapon"), 2
         getlocal0
         pushbyte 2
         getlocal2
         pushstring "hasWeaponTwo"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHasWeapon"), 2
         getlocal0
         getlocal2
         pushstring "hasTurbo"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PrivateNamespace(":Player"),"setHasTurbo"), 1
         getlocal2
         pushstring "toggleFire"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         iffalse ofs46
         findpropstrict QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_TOGGLE")
         setproperty QName(PackageNamespace(""),"firingMode")
         jump ofs47
         ofs46:
         findpropstrict QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_NORMAL")
         setproperty QName(PackageNamespace(""),"firingMode")
         ofs47:
         getlocal0
         getlocal2
         pushstring "hasHighJump"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHighJump"), 1
         getlocal0
         getlocal2
         pushstring "hasDevastator"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHasDevastator"), 1
         getlocal0
         getlocal2
         pushstring "hasGravityShock"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHasGravityShock"), 1
         getlocal0
         getlocal2
         pushstring "hasShellShield"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHasShellShield"), 1
         getlocal0
         getlocal3
         getproperty Multiname("lastWeapon",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         getlocal0
         getlocal3
         getproperty Multiname("helixFragments",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         callpropvoid QName(PackageNamespace(""),"setHelixFragments"), 1
         getlocal0
         getlocal3
         getproperty Multiname("snailType",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushstring "hasSeenIsis"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         setproperty QName(PackageNamespace(""),"hasSeenIsis")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushstring "hasSeenHelp"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         setproperty QName(PackageNamespace(""),"hasSeenHelp")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 1
         getlocal2
         pushstring "bossesKilledOne"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 2
         getlocal2
         pushstring "bossesKilledTwo"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 3
         getlocal2
         pushstring "bossesKilledThree"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 4
         getlocal2
         pushstring "bossesKilledFour"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlocal0
         getproperty QName(PackageNamespace(""),"bestMainTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         greaterthan
         dup
         iftrue ofs48
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"bestHardTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         greaterthan
         ofs48:
         iffalse ofs49
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockFirstOfFour"), 0
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockStinkyToe"), 0
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockGravityBattle"), 0
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockVictory"), 0
         ofs49:
         getlocal0
         getproperty QName(PackageNamespace(""),"bestHardTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         ifngt ofs50
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockHomeless"), 0
         ofs50:
         getlocal0
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         ifngt ofs51
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockHappyEnding"), 0
         ofs51:
         getlocal0
         getproperty QName(PackageNamespace(""),"bestBossRushTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         ifngt ofs52
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockTheGauntlet"), 0
         ofs52:
         getlocal0
         getproperty QName(PackageNamespace(""),"hasSeenIsis")
         iffalse ofs53
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockPilgrim"), 0
         ofs53:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         dup
         convert_b
         iffalse ofs54
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_easyMode")
         not
         ofs54:
         iffalse ofs55
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockFirstOfFour"), 0
         ofs55:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 2
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         dup
         convert_b
         iffalse ofs56
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_easyMode")
         not
         ofs56:
         iffalse ofs57
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockStinkyToe"), 0
         ofs57:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 3
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         dup
         convert_b
         iffalse ofs58
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_easyMode")
         not
         ofs58:
         iffalse ofs59
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockGravityBattle"), 0
         ofs59:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 4
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         dup
         convert_b
         iffalse ofs60
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_easyMode")
         not
         ofs60:
         iffalse ofs61
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockVictory"), 0
         ofs61:
         findpropstrict QName(PackageNamespace(""),"MAP_KEY")
         getlocal3
         getproperty Multiname("mapKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"MAP_KEY")
         findpropstrict QName(PackageNamespace(""),"JUMP_KEY")
         getlocal3
         getproperty Multiname("jumpKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"JUMP_KEY")
         findpropstrict QName(PackageNamespace(""),"SHOOT_KEY")
         getlocal3
         getproperty Multiname("shootKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"SHOOT_KEY")
         findpropstrict QName(PackageNamespace(""),"STRAFE_KEY")
         getlocal3
         getproperty Multiname("strafeKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"STRAFE_KEY")
         findpropstrict QName(PackageNamespace(""),"UP_KEY")
         getlocal3
         getproperty Multiname("upKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"UP_KEY")
         findpropstrict QName(PackageNamespace(""),"LEFT_KEY")
         getlocal3
         getproperty Multiname("leftKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"LEFT_KEY")
         findpropstrict QName(PackageNamespace(""),"DOWN_KEY")
         getlocal3
         getproperty Multiname("downKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"DOWN_KEY")
         findpropstrict QName(PackageNamespace(""),"RIGHT_KEY")
         getlocal3
         getproperty Multiname("rightKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"RIGHT_KEY")
         findpropstrict QName(PackageNamespace(""),"ALT_JUMP_KEY")
         getlocal3
         getproperty Multiname("jumpAltKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"ALT_JUMP_KEY")
         findpropstrict QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         getlocal3
         getproperty Multiname("shootAltKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         findpropstrict QName(PackageNamespace(""),"ALT_STRAFE_KEY")
         getlocal3
         getproperty Multiname("strafeAltKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"ALT_STRAFE_KEY")
         findpropstrict QName(PackageNamespace(""),"ALT_UP_KEY")
         getlocal3
         getproperty Multiname("upAltKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"ALT_UP_KEY")
         findpropstrict QName(PackageNamespace(""),"ALT_LEFT_KEY")
         getlocal3
         getproperty Multiname("leftAltKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"ALT_LEFT_KEY")
         findpropstrict QName(PackageNamespace(""),"ALT_DOWN_KEY")
         getlocal3
         getproperty Multiname("downAltKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"ALT_DOWN_KEY")
         findpropstrict QName(PackageNamespace(""),"ALT_RIGHT_KEY")
         getlocal3
         getproperty Multiname("rightAltKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"ALT_RIGHT_KEY")
         findpropstrict QName(PackageNamespace(""),"WEAPON_1_KEY")
         getlocal3
         getproperty Multiname("weap1Key",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"WEAPON_1_KEY")
         findpropstrict QName(PackageNamespace(""),"WEAPON_2_KEY")
         getlocal3
         getproperty Multiname("weap2Key",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"WEAPON_2_KEY")
         findpropstrict QName(PackageNamespace(""),"WEAPON_3_KEY")
         getlocal3
         getproperty Multiname("weap3Key",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"WEAPON_3_KEY")
         findpropstrict QName(PackageNamespace(""),"WEAPON_NEXT_KEY")
         getlocal3
         getproperty Multiname("weapNextKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"WEAPON_NEXT_KEY")
         findpropstrict QName(PackageNamespace(""),"WEAPON_PREV_KEY")
         getlocal3
         getproperty Multiname("weapPrevKey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         setproperty QName(PackageNamespace(""),"WEAPON_PREV_KEY")
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal3
         getproperty Multiname("savex",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal3
         getproperty Multiname("savey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"startFromTown")
         iffalse ofs62
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"config")
         callproperty QName(PackageNamespace(""),"getPlayerStartX"), 0
         pushbyte 16
         multiply
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"config")
         callproperty QName(PackageNamespace(""),"getPlayerStartY"), 0
         pushbyte 16
         multiply
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         ofs62:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"startFromTown")
         not
         iffalse ofs1
         getlocal0
         pushtrue
         setproperty QName(PackageNamespace(""),"saveOnNextFrame")
         ofs1:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_hardMode")
         setproperty QName(PackageNamespace(""),"_slugMode")
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"SnailySnail")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(":Player"),"SPRITE_WIDTH")
         getlex QName(PrivateNamespace(":Player"),"SPRITE_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         pushbyte 0
         setlocal 4
         jump ofs63
         ofs64:
         label
         getlocal 4
         pushbyte 20
         multiply
         convert_i
         setlocal 5
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs65
         getlocal 5
         pushbyte 4
         pushbyte 20
         multiply
         add
         convert_i
         setlocal 5
         ofs65:
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 4
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_floor_right_move"
         add
         pushbyte 0
         getlocal 5
         add
         pushbyte 1
         getlocal 5
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 4
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_floor_right_hide"
         add
         pushbyte 3
         getlocal 5
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 4
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_rwall_up_move"
         add
         pushbyte 4
         getlocal 5
         add
         pushbyte 5
         getlocal 5
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 4
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_rwall_up_hide"
         add
         pushbyte 7
         getlocal 5
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 4
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_rwall_down_move"
         add
         pushbyte 8
         getlocal 5
         add
         pushbyte 9
         getlocal 5
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 4
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_rwall_down_hide"
         add
         pushbyte 11
         getlocal 5
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 4
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_ceil_right_move"
         add
         pushbyte 12
         getlocal 5
         add
         pushbyte 13
         getlocal 5
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 4
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_ceil_right_hide"
         add
         pushbyte 15
         getlocal 5
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 4
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_death"
         add
         pushbyte 16
         getlocal 5
         add
         pushbyte 17
         getlocal 5
         add
         pushbyte 18
         getlocal 5
         add
         pushbyte 19
         getlocal 5
         add
         newarray 4
         pushbyte 30
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         inclocal_i 4
         ofs63:
         getlocal 4
         pushbyte 4
         iflt ofs64
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         getlocal0
         pushstring "floor_right_move"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hpPerHeart() : int
      {
         trait method QName(PackageNamespace(""),"hpPerHeart")
         dispid 0
         method
         name "Player:hpPerHeart"
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_easyMode")
         iffalse ofs0
         pushbyte 8
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"_hardMode")
         iffalse ofs1
         pushbyte 2
         returnvalue
         ofs1:
         pushbyte 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method QName(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name "Player:destroy"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("flash.utils"),"clearInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"deathFadeInterval")
         callpropvoid QName(PackageNamespace("flash.utils"),"clearInterval"), 1
         findpropstrict QName(PackageNamespace("flash.utils"),"clearInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"reviveInterval")
         callpropvoid QName(PackageNamespace("flash.utils"),"clearInterval"), 1
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_bulletGroups")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_curHp")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_gravity")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_hasColdFoot")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_hasDevastator")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_hasGravityShock")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_hasHighJump")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_hasShellShield")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_hasTurbo")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_helixFragments")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_jumpPower")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"_maxHp")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_maxSpeed")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"_runSpeed")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_snailType")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(":Player"),"_turboMultiplier")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"_weaponTimeout")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"bestBossRushTime")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"bestMainTime")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"bestHardTime")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"bestInsaneTime")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"gameTime")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"clearTime")
         getlocal0
         callsupervoid QName(PackageNamespace(""),"destroy"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_handleMenu() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_handleMenu")
         dispid 0
         method
         name "Player:checkInput_handleMenu"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "P"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         dup
         convert_b
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "ESCAPE"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         ofs0:
         dup
         iffalse ofs1
         pop
         getlex QName(PackageNamespace(""),"dead")
         not
         ofs1:
         dup
         iffalse ofs2
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"isBossRushComplete")
         not
         ofs2:
         dup
         iffalse ofs3
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"isGameComplete")
         not
         ofs3:
         dup
         iffalse ofs4
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_paralyzed")
         not
         ofs4:
         iffalse ofs5
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_SUBSCREEN")
         ifne ofs6
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         callpropvoid QName(PackageNamespace(""),"toggleMapSize"), 0
         ofs6:
         getlex QName(PackageNamespace(""),"PlayState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_MENU")
         setproperty QName(PackageNamespace(""),"realState")
         ofs5:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_handleHelp() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_handleHelp")
         dispid 0
         method
         name "Player:checkInput_handleHelp"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "F1"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         dup
         convert_b
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"cheatsEnabled")
         not
         ofs0:
         iffalse ofs1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"controlHelp")
         callpropvoid QName(PackageNamespace(""),"toggle"), 0
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_handleSkyFishCheat() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_handleSkyFishCheat")
         dispid 0
         method
         name "Player:checkInput_handleSkyFishCheat"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         dup
         iftrue ofs0
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"area")
         pushbyte 0
         equals
         not
         ofs0:
         iffalse ofs1
         returnvoid
         ofs1:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushbyte 6
         callproperty QName(PackageNamespace(""),"getLastKeys"), 1
         pushstring "SKYFIS"
         equals
         dup
         iffalse ofs2
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         dup
         convert_b
         iftrue ofs3
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 2
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs3:
         dup
         iftrue ofs4
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 3
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs4:
         dup
         iftrue ofs2
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 4
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs2:
         iffalse ofs5
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playSlugMode"), 0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 1
         pushfalse
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 2
         pushfalse
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 3
         pushfalse
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 4
         pushfalse
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlocal0
         callpropvoid QName(PackageNamespace(""),"saveNoCoords"), 0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"areaName")
         pushstring "- SKYFISH FLIES AGAIN -"
         callpropvoid QName(PackageNamespace(""),"setArea"), 1
         ofs5:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_handleSlugCheat() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_handleSlugCheat")
         dispid 0
         method
         name "Player:checkInput_handleSlugCheat"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 799
         debug 1, "_loc2_", 1, 800
         pushbyte 0
         setlocal1
         pushbyte 0
         setlocal2
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         not
         dup
         iftrue ofs0
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         getproperty QName(PackageNamespace(""),"started")
         ofs0:
         dup
         iftrue ofs1
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         ofs1:
         iffalse ofs2
         returnvoid
         ofs2:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushbyte 4
         callproperty QName(PackageNamespace(""),"getLastKeys"), 1
         pushstring "SLUG"
         ifne ofs3
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playSlugMode"), 0
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         divide
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         pushtrue
         setproperty QName(PackageNamespace(""),"_slugMode")
         getlocal0
         pushtrue
         setproperty QName(PackageNamespace(""),"_hardMode")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         multiply
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getlocal0
         callproperty QName(PackageNamespace(""),"getMaxHp"), 0
         callpropvoid QName(PackageNamespace(""),"setMaxHp"), 1
         getlocal0
         pushint 999999999
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"WEAPON_TIMEOUTS")
         pushbyte 0
         pushdouble 0.046
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"WEAPON_TIMEOUTS")
         pushbyte 1
         pushdouble 0.23
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"WEAPON_TIMEOUTS")
         pushbyte 2
         pushdouble 0.13
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         findpropstrict QName(ProtectedNamespace("org.flixel:FlxSprite"),"_animations")
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         setproperty QName(ProtectedNamespace("org.flixel:FlxSprite"),"_animations")
         pushbyte 0
         setlocal1
         jump ofs4
         ofs5:
         label
         getlocal1
         pushbyte 20
         multiply
         convert_i
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs6
         getlocal2
         pushbyte 4
         pushbyte 20
         multiply
         add
         convert_i
         setlocal2
         ofs6:
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_floor_right_move"
         add
         pushbyte 0
         getlocal2
         add
         pushbyte 1
         getlocal2
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_floor_right_hide"
         add
         pushbyte 3
         getlocal2
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_rwall_up_move"
         add
         pushbyte 4
         getlocal2
         add
         pushbyte 5
         getlocal2
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_rwall_up_hide"
         add
         pushbyte 7
         getlocal2
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_rwall_down_move"
         add
         pushbyte 8
         getlocal2
         add
         pushbyte 9
         getlocal2
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_rwall_down_hide"
         add
         pushbyte 11
         getlocal2
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_ceil_right_move"
         add
         pushbyte 12
         getlocal2
         add
         pushbyte 13
         getlocal2
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_ceil_right_hide"
         add
         pushbyte 15
         getlocal2
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         increment
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_death"
         add
         pushbyte 16
         getlocal2
         add
         pushbyte 17
         getlocal2
         add
         pushbyte 18
         getlocal2
         add
         pushbyte 19
         getlocal2
         add
         newarray 4
         pushbyte 30
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         inclocal_i 1
         ofs4:
         getlocal1
         pushbyte 4
         iflt ofs5
         getlocal0
         pushstring "death"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_snailType")
         getproperty QName(PackageNamespace(""),"value")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"areaName")
         pushstring "- OMEGA SLUG ENGAGE -"
         callpropvoid QName(PackageNamespace(""),"setArea"), 1
         ofs3:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_hideInShell() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_hideInShell")
         dispid 0
         method
         name "Player:checkInput_hideInShell"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs0
         returnvoid
         ofs0:
         getlex QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_NORMAL")
         equals
         dup
         iffalse ofs1
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedShoot"), 0
         ofs1:
         iffalse ofs2
         returnvoid
         ofs2:
         getlex QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_TOGGLE")
         equals
         dup
         iffalse ofs3
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         ofs3:
         iffalse ofs4
         returnvoid
         ofs4:
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         dup
         convert_b
         iftrue ofs5
         pop
         getlex QName(PackageNamespace(""),"dead")
         ofs5:
         iffalse ofs6
         returnvoid
         ofs6:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         equals
         dup
         iffalse ofs7
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedDown"), 0
         ofs7:
         dup
         iftrue ofs8
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         getlex QName(PackageNamespace(""),"GRAV_UP")
         equals
         dup
         iffalse ofs8
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedUp"), 0
         ofs8:
         iffalse ofs9
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         not
         dup
         iffalse ofs10
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         not
         ofs10:
         dup
         iftrue ofs11
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hidingInShell")
         ofs11:
         iffalse ofs9
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hidingInShell")
         not
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs9:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         equals
         dup
         iffalse ofs12
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedLeft"), 0
         ofs12:
         dup
         iftrue ofs13
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         equals
         dup
         iffalse ofs13
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedRight"), 0
         ofs13:
         iffalse ofs14
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         dup
         iffalse ofs15
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         ofs15:
         dup
         iftrue ofs16
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hidingInShell")
         ofs16:
         iffalse ofs14
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hidingInShell")
         not
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs14:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_shoot() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_shoot")
         dispid 0
         method
         name "Player:checkInput_shoot"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_TOGGLE")
         ifne ofs0
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedShoot"), 0
         dup
         convert_b
         iffalse ofs1
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"hasAnyWeapon"), 0
         ofs1:
         iffalse ofs2
         findpropstrict QName(PackageNamespace(""),"fireToggle")
         getlex QName(PackageNamespace(""),"fireToggle")
         not
         setproperty QName(PackageNamespace(""),"fireToggle")
         ofs2:
         jump ofs3
         ofs0:
         findpropstrict QName(PackageNamespace(""),"fireToggle")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedShoot"), 0
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         setproperty QName(PackageNamespace(""),"fireToggle")
         ofs3:
         getlex QName(PackageNamespace(""),"fireToggle")
         dup
         iffalse ofs4
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hidingInShell")
         not
         ofs4:
         iffalse ofs5
         getlocal0
         callpropvoid QName(PackageNamespace(""),"shootCurrentWeapon"), 0
         ofs5:
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedShoot"), 0
         dup
         convert_b
         iffalse ofs6
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hidingInShell")
         ofs6:
         dup
         iffalse ofs7
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"hasAnyWeapon"), 0
         ofs7:
         iffalse ofs8
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         getlocal0
         callpropvoid QName(PackageNamespace(""),"shootCurrentWeapon"), 0
         ofs8:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_switchWeapons() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_switchWeapons")
         dispid 0
         method
         name "Player:checkInput_switchWeapons"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"WEAPON_1_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         iffalse ofs0
         getlocal0
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         ofs0:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"WEAPON_2_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         iffalse ofs1
         getlocal0
         pushbyte 1
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         ofs1:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"WEAPON_3_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         iffalse ofs2
         getlocal0
         pushbyte 2
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         ofs2:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"WEAPON_NEXT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         iffalse ofs3
         getlocal0
         callpropvoid QName(PrivateNamespace(":Player"),"switchToNextWeapon"), 0
         ofs3:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"WEAPON_PREV_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         iffalse ofs4
         getlocal0
         callpropvoid QName(PrivateNamespace(":Player"),"switchToPrevWeapon"), 0
         ofs4:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_performGravityJump() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_performGravityJump")
         dispid 0
         method
         name "Player:checkInput_performGravityJump"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs0
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedJump"), 0
         ofs0:
         dup
         iffalse ofs1
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         ofs1:
         iffalse ofs2
         getlocal0
         callpropvoid QName(PackageNamespace(""),"performGravityJump"), 0
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function checkInput_move() : void
      {
         trait method QName(PrivateNamespace(":Player"),"checkInput_move")
         dispid 0
         method
         name "Player/private:checkInput_move"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 961
         getlocal0
         getproperty QName(PackageNamespace(""),"noCollide")
         iffalse ofs0
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"noCollide")
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushshort 1200
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         ofs0:
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedUp"), 0
         iffalse ofs1
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_UP")
         setproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_UP")
         setproperty QName(PrivateNamespace(":Player"),"_mostRecentUpDown")
         ofs1:
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedDown"), 0
         iffalse ofs2
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_DOWN")
         setproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_DOWN")
         setproperty QName(PrivateNamespace(":Player"),"_mostRecentUpDown")
         ofs2:
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedLeft"), 0
         iffalse ofs3
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_LEFT")
         setproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_LEFT")
         setproperty QName(PrivateNamespace(":Player"),"_mostRecentLeftRight")
         ofs3:
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedRight"), 0
         iffalse ofs4
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         setproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         setproperty QName(PrivateNamespace(":Player"),"_mostRecentLeftRight")
         ofs4:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hidingInShell")
         dup
         iffalse ofs5
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         not
         ofs5:
         convert_b
         setlocal1
         jump ofs6
         ofs7:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         dup
         convert_b
         iffalse ofs8
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs8:
         iffalse ofs9
         getlocal1
         iffalse ofs10
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs10:
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         setproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         decrement
         getlex QName(PackageNamespace(""),"y")
         pushbyte 3
         add
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         dup
         convert_b
         iftrue ofs11
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         decrement
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         add
         pushbyte 4
         subtract
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         ofs11:
         dup
         iffalse ofs12
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         dup
         convert_b
         iftrue ofs13
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         ofs13:
         not
         ofs12:
         iffalse ofs14
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         jump ofs15
         ofs14:
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         ofs15:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs16
         ofs9:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         dup
         convert_b
         iffalse ofs17
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs17:
         iffalse ofs16
         getlocal1
         iffalse ofs18
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs18:
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         setproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         add
         getlex QName(PackageNamespace(""),"y")
         pushbyte 3
         add
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         dup
         convert_b
         iftrue ofs19
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         add
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         add
         pushbyte 4
         subtract
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         ofs19:
         dup
         iffalse ofs20
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         dup
         convert_b
         iftrue ofs21
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         ofs21:
         not
         ofs20:
         iffalse ofs22
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         jump ofs23
         ofs22:
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         ofs23:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs16:
         jump ofs24
         ofs25:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         dup
         convert_b
         iffalse ofs26
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs26:
         iffalse ofs27
         getlocal1
         iffalse ofs28
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs28:
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         setproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         decrement
         getlex QName(PackageNamespace(""),"y")
         pushbyte 3
         add
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         dup
         convert_b
         iftrue ofs29
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         decrement
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         add
         pushbyte 4
         subtract
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         ofs29:
         dup
         iffalse ofs30
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         dup
         convert_b
         iftrue ofs31
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         ofs31:
         not
         ofs30:
         iffalse ofs32
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         jump ofs33
         ofs32:
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         ofs33:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs34
         ofs27:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         dup
         convert_b
         iffalse ofs35
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs35:
         iffalse ofs34
         getlocal1
         iffalse ofs36
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs36:
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         setproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         add
         getlex QName(PackageNamespace(""),"y")
         pushbyte 3
         add
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         dup
         convert_b
         iftrue ofs37
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         add
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         add
         pushbyte 4
         subtract
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         ofs37:
         dup
         iffalse ofs38
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         dup
         convert_b
         iftrue ofs39
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         ofs39:
         not
         ofs38:
         iffalse ofs40
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         jump ofs41
         ofs40:
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         ofs41:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs34:
         jump ofs24
         ofs42:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         dup
         convert_b
         iffalse ofs43
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs43:
         iffalse ofs44
         getlocal1
         iffalse ofs45
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs45:
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         setproperty QName(PackageNamespace(""),"facing")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs46
         ofs44:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         dup
         convert_b
         iffalse ofs47
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs47:
         iffalse ofs46
         getlocal1
         iffalse ofs48
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs48:
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         setproperty QName(PackageNamespace(""),"facing")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs46:
         jump ofs24
         ofs49:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         dup
         convert_b
         iffalse ofs50
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs50:
         iffalse ofs51
         getlocal1
         iffalse ofs52
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs52:
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         setproperty QName(PackageNamespace(""),"facing")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs53
         ofs51:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         dup
         convert_b
         iffalse ofs54
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs54:
         iffalse ofs53
         getlocal1
         iffalse ofs55
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs55:
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         setproperty QName(PackageNamespace(""),"facing")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs53:
         label
         jump ofs24
         ofs6:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal2
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal2
         ifstrictne ofs56
         pushbyte 0
         jump ofs57
         ofs56:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal2
         ifstrictne ofs58
         pushbyte 1
         jump ofs57
         ofs58:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal2
         ifstrictne ofs59
         pushbyte 2
         jump ofs57
         ofs59:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal2
         ifstrictne ofs60
         pushbyte 3
         jump ofs57
         ofs60:
         jump ofs61
         pushbyte -1
         jump ofs61
         ofs61:
         pushbyte -1
         ofs57:
         kill 2
         lookupswitch ofs53, [ofs7, ofs25, ofs42, ofs49]
         ofs24:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_map() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_map")
         dispid 0
         method
         name "Player:checkInput_map"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "TAB"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         dup
         convert_b
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"MAP_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         ofs0:
         dup
         iffalse ofs1
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_paralyzed")
         not
         ofs1:
         dup
         iffalse ofs2
         pop
         getlex QName(PackageNamespace(""),"dead")
         not
         ofs2:
         dup
         iffalse ofs3
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"isBossRushComplete")
         not
         ofs3:
         dup
         iffalse ofs4
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"isGameComplete")
         not
         ofs4:
         iffalse ofs5
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         callpropvoid QName(PackageNamespace(""),"toggleMapSize"), 0
         ofs5:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_jump() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_jump")
         dispid 0
         method
         name "Player:checkInput_jump"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 11
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedJump"), 0
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hidingInShell")
         iffalse ofs1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs1:
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         not
         iffalse ofs0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"doJump"), 0
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         dup
         iffalse ofs2
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedJump"), 0
         not
         ofs2:
         iffalse ofs3
         jump ofs4
         ofs5:
         label
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         ifngt ofs6
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"Utility")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         pushbyte 4
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         callproperty QName(PackageNamespace(""),"integrate"), 4
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         ofs6:
         jump ofs3
         ofs7:
         label
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         ifnlt ofs8
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"Utility")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         pushbyte 4
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         callproperty QName(PackageNamespace(""),"integrate"), 4
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         ofs8:
         jump ofs3
         ofs9:
         label
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifngt ofs10
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"Utility")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         pushbyte 4
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         callproperty QName(PackageNamespace(""),"integrate"), 4
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         ofs10:
         jump ofs3
         ofs11:
         label
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifnlt ofs12
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"Utility")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         pushbyte 4
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         callproperty QName(PackageNamespace(""),"integrate"), 4
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         ofs12:
         label
         jump ofs3
         ofs4:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs13
         pushbyte 0
         jump ofs14
         ofs13:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs15
         pushbyte 1
         jump ofs14
         ofs15:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs16
         pushbyte 2
         jump ofs14
         ofs16:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs17
         pushbyte 3
         jump ofs14
         ofs17:
         jump ofs18
         pushbyte -1
         jump ofs18
         ofs18:
         pushbyte -1
         ofs14:
         kill 1
         lookupswitch ofs12, [ofs5, ofs7, ofs9, ofs11]
         ofs3:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name "Player:update"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"saveOnNextFrame")
         iffalse ofs0
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         callpropvoid QName(PackageNamespace(""),"setHelixFragments"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setSaveCoords"), 3
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"saveOnNextFrame")
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"hasSetHpBar")
         getlocal0
         pushshort 9999
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"hasSetHpBar")
         pushfalse
         ifne ofs1
         getlocal0
         pushtrue
         setproperty QName(PackageNamespace(""),"hasSetHpBar")
         getlocal0
         pushshort 9999
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         callpropvoid QName(PackageNamespace(""),"setMaxHp"), 1
         ofs1:
         getlex QName(PackageNamespace(""),"facing")
         pushbyte 10
         ifngt ofs2
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         setproperty QName(PackageNamespace(""),"facing")
         ofs2:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         equals
         dup
         iftrue ofs3
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_SUBSCREEN")
         equals
         ofs3:
         iffalse ofs4
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_map"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_handleMenu"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_switchWeapons"), 0
         ofs4:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs5
         returnvoid
         ofs5:
         getlocal0
         getproperty QName(PackageNamespace(""),"gameTime")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PackageNamespace(""),"_weaponTimeout")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PackageNamespace(""),"_weaponTimeout")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedLeft"), 0
         iffalse ofs6
         getlocal0
         pushtrue
         setproperty QName(PackageNamespace(""),"pressedLeftSinceJump")
         jump ofs7
         ofs6:
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedRight"), 0
         iffalse ofs8
         getlocal0
         pushtrue
         setproperty QName(PackageNamespace(""),"pressedRightSinceJump")
         jump ofs7
         ofs8:
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedJump"), 0
         iffalse ofs7
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"pressedLeftSinceJump")
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"pressedRightSinceJump")
         ofs7:
         getlex QName(PackageNamespace(""),"dead")
         not
         iffalse ofs9
         getlocal0
         callpropvoid QName(PrivateNamespace(":Player"),"fixGravity"), 0
         ofs9:
         getlex QName(PackageNamespace(""),"dead")
         not
         dup
         iffalse ofs10
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_paralyzed")
         not
         ofs10:
         iffalse ofs11
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_handleHelp"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_handleSkyFishCheat"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_handleSlugCheat"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_hideInShell"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_shoot"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_performGravityJump"), 0
         getlocal0
         callpropvoid QName(PrivateNamespace(":Player"),"checkInput_move"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_jump"), 0
         ofs11:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         dup
         convert_b
         iftrue ofs12
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         ofs12:
         dup
         iftrue ofs13
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         ofs13:
         dup
         iftrue ofs14
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         ofs14:
         dup
         iftrue ofs15
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedShoot"), 0
         ofs15:
         dup
         iftrue ofs16
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         ofs16:
         dup
         iftrue ofs17
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedJump"), 0
         ofs17:
         dup
         iftrue ofs18
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         ofs18:
         iffalse ofs19
         getlocal0
         getlex QName(PrivateNamespace(":Player"),"SLEEP_TIMEOUT")
         setproperty QName(PrivateNamespace(":Player"),"_sleepTimeout")
         ofs19:
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_sleepTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PrivateNamespace(":Player"),"_sleepTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_sleepTimeout")
         pushbyte 0
         lessequals
         dup
         iffalse ofs20
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"zzz")
         getproperty QName(PackageNamespace(""),"visible")
         not
         ofs20:
         dup
         iffalse ofs21
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         not
         ofs21:
         iffalse ofs22
         getlocal0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"zzz")
         pushtrue
         setproperty QName(PackageNamespace(""),"visible")
         getlocal0
         getlex QName(PrivateNamespace(":Player"),"SLEEP_TIMEOUT")
         setproperty QName(PrivateNamespace(":Player"),"_sleepTimeout")
         ofs22:
         getlex QName(PackageNamespace(""),"dead")
         not
         iffalse ofs23
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         callpropvoid QName(PackageNamespace(""),"checkFakeBounds"), 2
         ofs23:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hurt(param1:Number) : void
      {
         trait method QName(PackageNamespace(""),"hurt")
         flag OVERRIDE
         dispid 0
         method
         name "Player:hurt"
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getproperty QName(PackageNamespace(""),"_invincible")
         dup
         iftrue ofs0
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"noCollide")
         ofs0:
         dup
         iftrue ofs1
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_paralyzed")
         ofs1:
         iffalse ofs2
         returnvoid
         ofs2:
         getlocal0
         getlex QName(PrivateNamespace(":Player"),"SLEEP_TIMEOUT")
         setproperty QName(PrivateNamespace(":Player"),"_sleepTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hidingInShell")
         iffalse ofs3
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasShellShield")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs3
         findpropstrict QName(PackageNamespace(""),"flicker")
         pushbyte 1
         callpropvoid QName(PackageNamespace(""),"flicker"), 1
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playEnemyPingOffArmor"), 0
         returnvoid
         ofs3:
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         dup
         convert_b
         iftrue ofs4
         pop
         getlex QName(PackageNamespace(""),"dead")
         ofs4:
         iffalse ofs5
         returnvoid
         ofs5:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs6
         getlocal1
         pushbyte 2
         divide
         coerce QName(PackageNamespace(""),"Number")
         setlocal1
         getlocal1
         pushbyte 1
         ifnlt ofs6
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playEnemyPingOffArmor"), 0
         returnvoid
         ofs6:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_curHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal1
         subtract
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         getlex QName(PackageNamespace(""),"dead")
         iffalse ofs7
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playDeath"), 0
         getlocal0
         pushstring "death"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         ifne ofs8
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 110
         callproperty QName(PackageNamespace(""),"Number"), 1
         jump ofs9
         ofs8:
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte -110
         callproperty QName(PackageNamespace(""),"Number"), 1
         ofs9:
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushshort -300
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_gravity")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"drag")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"dead")
         pushtrue
         setproperty QName(PackageNamespace(""),"dead")
         findpropstrict QName(PackageNamespace(""),"solid")
         pushfalse
         setproperty QName(PackageNamespace(""),"solid")
         jump ofs10
         ofs7:
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playHurt"), 0
         findpropstrict QName(PackageNamespace(""),"flicker")
         pushbyte 1
         callpropvoid QName(PackageNamespace(""),"flicker"), 1
         ofs10:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function heal(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"heal")
         dispid 0
         method
         name "Player:heal"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_curHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal1
         add
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function kill() : void
      {
         trait method QName(PackageNamespace(""),"kill")
         flag OVERRIDE
         dispid 0
         method
         name "Player:kill"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 9
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"dead")
         iffalse ofs0
         returnvoid
         ofs0:
         getlocal0
         getlex QName(PrivateNamespace(":Player"),"SLEEP_TIMEOUT")
         setproperty QName(PrivateNamespace(":Player"),"_sleepTimeout")
         findpropstrict QName(PackageNamespace(""),"dead")
         pushtrue
         setproperty QName(PackageNamespace(""),"dead")
         findpropstrict QName(PackageNamespace(""),"solid")
         pushfalse
         setproperty QName(PackageNamespace(""),"solid")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         iffalse ofs1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 1
         pushfalse
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 2
         pushfalse
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 3
         pushfalse
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 4
         pushfalse
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         pushfalse
         setproperty QName(PackageNamespace(""),"going")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         pushfalse
         setproperty QName(PackageNamespace(""),"started")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         getproperty QName(PackageNamespace(""),"now")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"value")
         ofs1:
         getlocal0
         getproperty QName(PackageNamespace(""),"_invincible")
         not
         iffalse ofs2
         getlex QName(PackageNamespace(""),"Utility")
         pushstring "setting timer for kill()"
         callpropvoid QName(PackageNamespace(""),"stackTrace"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace("flash.utils"),"setInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"deathFade")
         getlex QName(PrivateNamespace(":Player"),"DEATHFADE_DELAY")
         callproperty QName(PackageNamespace("flash.utils"),"setInterval"), 2
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PackageNamespace(""),"deathFadeInterval")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace("flash.utils"),"setInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"revive")
         getlex QName(PrivateNamespace(":Player"),"REVIVE_DELAY")
         callproperty QName(PackageNamespace("flash.utils"),"setInterval"), 2
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PackageNamespace(""),"reviveInterval")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function deathFade() : void
      {
         trait method QName(PackageNamespace(""),"deathFade")
         dispid 0
         method
         name "Player:deathFade"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"fade")
         pushint -16760705
         pushdouble 0.44
         callpropvoid QName(PackageNamespace(""),"start"), 2
         findpropstrict QName(PackageNamespace("flash.utils"),"clearInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"deathFadeInterval")
         callpropvoid QName(PackageNamespace("flash.utils"),"clearInterval"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function revive() : void
      {
         trait method QName(PackageNamespace(""),"revive")
         dispid 0
         method
         name "Player:revive"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 9
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("flash.utils"),"clearInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"reviveInterval")
         callpropvoid QName(PackageNamespace("flash.utils"),"clearInterval"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         findpropstrict QName(PackageNamespace(""),"facing")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"right")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PackageNamespace(""),"facing")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         setproperty QName(PrivateNamespace(":Player"),"_faceDir")
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         setproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_DOWN")
         setproperty QName(PrivateNamespace(":Player"),"_mostRecentUpDown")
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         setproperty QName(PrivateNamespace(":Player"),"_mostRecentLeftRight")
         getlocal0
         pushbyte 32
         pushbyte 32
         callpropvoid QName(PackageNamespace(""),"teleportTo"), 2
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace("flash.utils"),"setInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"realTeleport")
         getlex QName(PrivateNamespace(":Player"),"TELEPORT_DELAY")
         callproperty QName(PackageNamespace("flash.utils"),"setInterval"), 2
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PackageNamespace(""),"teleportInterval")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         iffalse ofs0
         getlex QName(PackageNamespace(""),"Music")
         callpropvoid QName(PackageNamespace(""),"playBoss1"), 0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 1
         pushfalse
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 2
         pushfalse
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 3
         pushfalse
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 4
         pushfalse
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         pushfalse
         setproperty QName(PackageNamespace(""),"going")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         pushfalse
         setproperty QName(PackageNamespace(""),"started")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         getproperty QName(PackageNamespace(""),"now")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"value")
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitLeft(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitLeft")
         flag OVERRIDE
         dispid 0
         method
         name "Player:hitLeft"
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         getlocal0
         pushtrue
         setproperty QName(PrivateNamespace(":Player"),"_justHitHeadOrWall")
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_paralyzed")
         iffalse ofs1
         returnvoid
         ofs1:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         dup
         convert_b
         iffalse ofs2
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         not
         dup
         iftrue ofs2
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         ofs2:
         iffalse ofs3
         jump ofs4
         ofs5:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         iffalse ofs6
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         getlocal0
         pushbyte 0
         pushbyte 2
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         ofs6:
         jump ofs3
         ofs7:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         dup
         convert_b
         iftrue ofs8
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         dup
         iffalse ofs8
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         ofs8:
         iffalse ofs9
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         dup
         iffalse ofs10
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         ofs10:
         dup
         iffalse ofs11
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 8
         lessthan
         ofs11:
         iffalse ofs12
         returnvoid
         ofs12:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         ofs9:
         label
         jump ofs3
         ofs4:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal3
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal3
         ifstrictne ofs13
         pushbyte 0
         jump ofs14
         ofs13:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal3
         ifstrictne ofs15
         pushbyte 1
         jump ofs14
         ofs15:
         jump ofs16
         pushbyte -1
         jump ofs16
         ofs16:
         pushbyte -1
         ofs14:
         kill 3
         lookupswitch ofs9, [ofs5, ofs7]
         ofs3:
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(PackageNamespace(""),"hitLeft"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitRight(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitRight")
         flag OVERRIDE
         dispid 0
         method
         name "Player:hitRight"
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         getlocal0
         pushtrue
         setproperty QName(PrivateNamespace(":Player"),"_justHitHeadOrWall")
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(PackageNamespace(""),"hitRight"), 2
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_paralyzed")
         iffalse ofs0
         returnvoid
         ofs0:
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs1
         returnvoid
         ofs1:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         dup
         convert_b
         iffalse ofs2
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         not
         dup
         iftrue ofs2
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         ofs2:
         iffalse ofs3
         jump ofs4
         ofs5:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         iffalse ofs6
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         getlocal0
         pushbyte 11
         pushbyte 2
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         ofs6:
         jump ofs3
         ofs7:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         dup
         convert_b
         iftrue ofs8
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         dup
         iffalse ofs8
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         ofs8:
         iffalse ofs9
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         dup
         iffalse ofs10
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         ofs10:
         dup
         iffalse ofs11
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 8
         lessthan
         ofs11:
         iffalse ofs12
         returnvoid
         ofs12:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         pushbyte 11
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"x")
         pushbyte 11
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         pushbyte 0
         pushbyte 11
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckFullBounds"), 2
         ofs9:
         label
         jump ofs3
         ofs4:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal3
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal3
         ifstrictne ofs13
         pushbyte 0
         jump ofs14
         ofs13:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal3
         ifstrictne ofs15
         pushbyte 1
         jump ofs14
         ofs15:
         jump ofs16
         pushbyte -1
         jump ofs16
         ofs16:
         pushbyte -1
         ofs14:
         kill 3
         lookupswitch ofs9, [ofs5, ofs7]
         ofs3:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitBottom(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitBottom")
         flag OVERRIDE
         dispid 0
         method
         name "Player:hitBottom"
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         getlocal0
         pushfalse
         setproperty QName(PrivateNamespace(":Player"),"_justHitHeadOrWall")
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(PackageNamespace(""),"hitBottom"), 2
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_paralyzed")
         iffalse ofs1
         returnvoid
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         equals
         dup
         iftrue ofs2
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         equals
         ofs2:
         iffalse ofs3
         jump ofs4
         ofs5:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         dup
         convert_b
         iftrue ofs6
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         ofs6:
         dup
         iftrue ofs7
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"hasGravityJump"), 0
         not
         ofs7:
         iffalse ofs8
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         setproperty QName(PackageNamespace(""),"facing")
         getlocal0
         pushbyte 2
         pushbyte 11
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         ofs8:
         jump ofs3
         ofs9:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         dup
         convert_b
         iftrue ofs10
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         ofs10:
         dup
         iftrue ofs11
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"hasGravityJump"), 0
         not
         ofs11:
         iffalse ofs12
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         getlocal0
         pushbyte 0
         pushbyte 11
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         setproperty QName(PackageNamespace(""),"facing")
         ofs12:
         label
         jump ofs3
         ofs4:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal3
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal3
         ifstrictne ofs13
         pushbyte 0
         jump ofs14
         ofs13:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal3
         ifstrictne ofs15
         pushbyte 1
         jump ofs14
         ofs15:
         jump ofs16
         pushbyte -1
         jump ofs16
         ofs16:
         pushbyte -1
         ofs14:
         kill 3
         lookupswitch ofs12, [ofs5, ofs9]
         ofs3:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         equals
         dup
         iftrue ofs17
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         equals
         ofs17:
         iffalse ofs18
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         iffalse ofs18
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs19
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs20
         ofs19:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs20:
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         ofs18:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitTop(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitTop")
         flag OVERRIDE
         dispid 0
         method
         name "Player:hitTop"
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         getlocal0
         pushtrue
         setproperty QName(PrivateNamespace(":Player"),"_justHitHeadOrWall")
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(PackageNamespace(""),"hitTop"), 2
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_paralyzed")
         iffalse ofs1
         returnvoid
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         equals
         dup
         iftrue ofs2
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         equals
         ofs2:
         iffalse ofs3
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedJump"), 0
         not
         iffalse ofs3
         jump ofs4
         ofs5:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         iffalse ofs6
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         setproperty QName(PackageNamespace(""),"facing")
         ofs6:
         jump ofs3
         ofs7:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         iffalse ofs8
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushbyte -11
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         setproperty QName(PackageNamespace(""),"facing")
         ofs8:
         label
         jump ofs3
         ofs4:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal3
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal3
         ifstrictne ofs9
         pushbyte 0
         jump ofs10
         ofs9:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal3
         ifstrictne ofs11
         pushbyte 1
         jump ofs10
         ofs11:
         jump ofs12
         pushbyte -1
         jump ofs12
         ofs12:
         pushbyte -1
         ofs10:
         kill 3
         lookupswitch ofs8, [ofs5, ofs7]
         ofs3:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         equals
         dup
         iftrue ofs13
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         equals
         ofs13:
         iffalse ofs14
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         iffalse ofs14
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs15
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs16
         ofs15:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs16:
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         ofs14:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hasAnyWeapon() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasAnyWeapon")
         dispid 0
         method
         name "Player:hasAnyWeapon"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 0
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         dup
         convert_b
         iftrue ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs0:
         dup
         iftrue ofs1
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 2
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasAnyTwoWeapons() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasAnyTwoWeapons")
         dispid 0
         method
         name "Player:hasAnyTwoWeapons"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 0
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         dup
         convert_b
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         dup
         convert_b
         iftrue ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 2
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs0:
         dup
         iftrue ofs1
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         dup
         convert_b
         iffalse ofs1
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 2
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getHasWeapon(param1:int) : Boolean
      {
         trait method QName(PackageNamespace(""),"getHasWeapon")
         dispid 0
         method
         name "Player:getHasWeapon"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setHasWeapon(param1:int, param2:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setHasWeapon")
         dispid 0
         method
         name "Player:setHasWeapon"
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         getlocal1
         getlocal2
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function switchToWeapon(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"switchToWeapon")
         dispid 0
         method
         name "Player:switchToWeapon"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         dup
         convert_b
         iftrue ofs0
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"WEAPON_NONE")
         equals
         ofs0:
         iffalse ofs1
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getCurrentWeapon() : int
      {
         trait method QName(PackageNamespace(""),"getCurrentWeapon")
         dispid 0
         method
         name "Player:getCurrentWeapon"
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function switchToNextWeapon() : void
      {
         trait method QName(PrivateNamespace(":Player"),"switchToNextWeapon")
         dispid 0
         method
         name "Player/private:switchToNextWeapon"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 1540
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 0
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         dup
         convert_b
         iftrue ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs0:
         dup
         iftrue ofs1
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 2
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs1:
         not
         iffalse ofs2
         returnvoid
         ofs2:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         coerce_a
         setlocal1
         jump ofs3
         ofs4:
         label
         ofs3:
         inclocal 1
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal1
         pushbyte 3
         modulo
         callproperty QName(PackageNamespace(""),"int"), 1
         coerce_a
         setlocal1
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         not
         iftrue ofs4
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function switchToPrevWeapon() : void
      {
         trait method QName(PrivateNamespace(":Player"),"switchToPrevWeapon")
         dispid 0
         method
         name "Player/private:switchToPrevWeapon"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 1557
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 0
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         dup
         convert_b
         iftrue ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs0:
         dup
         iftrue ofs1
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 2
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs1:
         not
         iffalse ofs2
         returnvoid
         ofs2:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         coerce_a
         setlocal1
         jump ofs3
         ofs4:
         label
         ofs3:
         declocal 1
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal1
         pushbyte 3
         add
         callproperty QName(PackageNamespace(""),"int"), 1
         coerce_a
         setlocal1
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal1
         pushbyte 3
         modulo
         callproperty QName(PackageNamespace(""),"int"), 1
         coerce_a
         setlocal1
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         not
         iftrue ofs4
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hasTurbo() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasTurbo")
         dispid 0
         method
         name "Player:hasTurbo"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasTurbo")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function setHasTurbo(param1:Boolean) : void
      {
         trait method QName(PrivateNamespace(":Player"),"setHasTurbo")
         dispid 0
         method
         name "Player/private:setHasTurbo"
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasTurbo")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_turboMultiplier")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasTurbo")
         getproperty QName(PackageNamespace(""),"value")
         not
         not
         iffalse ofs0
         findpropstrict QName(PackageNamespace(""),"Number")
         pushdouble 0.5
         callproperty QName(PackageNamespace(""),"Number"), 1
         jump ofs1
         ofs0:
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         ofs1:
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"value")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function shootCurrentWeapon() : void
      {
         trait method QName(PackageNamespace(""),"shootCurrentWeapon")
         dispid 0
         method
         name "Player:shootCurrentWeapon"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 12
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 1602
         debug 1, "_loc2_", 1, 1582
         debug 1, "_loc3_", 2, 1583
         debug 1, "_loc4_", 3, 1584
         debug 1, "_loc5_", 4, 1585
         debug 1, "_loc6_", 5, 1586
         debug 1, "_loc7_", 6, 1587
         debug 1, "_loc8_", 7, 1588
         debug 1, "_loc9_", 8, 1589
         pushbyte 0
         setlocal2
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         pushfalse
         convert_b
         setlocal 4
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal 5
         pushbyte 0
         setlocal 6
         pushbyte 0
         setlocal 7
         pushbyte 0
         setlocal 8
         pushbyte 0
         setlocal 9
         jump ofs0
         ofs1:
         label
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         dup
         setlocal 10
         getproperty QName(PackageNamespace(""),"value")
         decrement_i
         setlocal 11
         getlocal 10
         getlocal 11
         setproperty QName(PackageNamespace(""),"value")
         kill 11
         kill 10
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace(""),"WEAPON_NONE")
         greaterthan
         dup
         iffalse ofs2
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         not
         ofs2:
         iftrue ofs1
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace(""),"WEAPON_NONE")
         ifne ofs3
         returnvoid
         ofs3:
         getlocal0
         getproperty QName(PackageNamespace(""),"_weaponTimeout")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         ifngt ofs4
         returnvoid
         ofs4:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_bulletGroups")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasDevastator")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"getBullet"), 2
         coerce QName(PackageNamespace(""),"PlayerBullet")
         setlocal1
         getlocal1
         iffalse ofs5
         pushbyte -1
         setlocal2
         pushfalse
         convert_b
         setlocal 4
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         dup
         iftrue ofs6
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasDevastator")
         getproperty QName(PackageNamespace(""),"value")
         ofs6:
         dup
         iftrue ofs7
         pop
         getlocal 4
         ofs7:
         iffalse ofs8
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         jump ofs9
         ofs8:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace(""),"WEAPON_PEA_SHOOTER")
         ifne ofs10
         jump ofs11
         ofs12:
         label
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 0
         pushbyte 0
         pushbyte 0
         pushbyte 1
         pushbyte 1
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         jump ofs13
         ofs14:
         label
         pushbyte 0
         pushbyte 0
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 0
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         jump ofs13
         ofs15:
         label
         pushbyte 1
         pushbyte 0
         pushbyte 0
         pushbyte 0
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         jump ofs13
         ofs16:
         label
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 0
         pushbyte 0
         pushbyte 0
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         ofs17:
         label
         jump ofs13
         ofs11:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal 10
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal 10
         ifstrictne ofs18
         pushbyte 0
         jump ofs19
         ofs18:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal 10
         ifstrictne ofs20
         pushbyte 1
         jump ofs19
         ofs20:
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal 10
         ifstrictne ofs21
         pushbyte 2
         jump ofs19
         ofs21:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal 10
         ifstrictne ofs22
         pushbyte 3
         jump ofs19
         ofs22:
         jump ofs23
         pushbyte -1
         jump ofs23
         ofs23:
         pushbyte -1
         ofs19:
         kill 10
         lookupswitch ofs17, [ofs12, ofs14, ofs15, ofs16]
         ofs13:
         jump ofs9
         ofs10:
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         pushbyte 1
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         ofs9:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         dup
         convert_b
         iffalse ofs24
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         ofs24:
         dup
         iffalse ofs25
         pop
         getlocal3
         pushbyte 3
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs25:
         iffalse ofs26
         pushbyte 3
         setlocal2
         jump ofs27
         ofs26:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         dup
         convert_b
         iffalse ofs28
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         ofs28:
         dup
         iffalse ofs29
         pop
         getlocal3
         pushbyte 1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs29:
         iffalse ofs30
         pushbyte 1
         setlocal2
         jump ofs27
         ofs30:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         dup
         convert_b
         iffalse ofs31
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         ofs31:
         dup
         iffalse ofs32
         pop
         getlocal3
         pushbyte 5
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs32:
         iffalse ofs33
         pushbyte 5
         setlocal2
         jump ofs27
         ofs33:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         dup
         convert_b
         iffalse ofs34
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         ofs34:
         dup
         iffalse ofs35
         pop
         getlocal3
         pushbyte 7
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs35:
         iffalse ofs36
         pushbyte 7
         setlocal2
         jump ofs27
         ofs36:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         dup
         convert_b
         iffalse ofs37
         pop
         getlocal3
         pushbyte 2
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs37:
         iffalse ofs38
         pushbyte 2
         setlocal2
         jump ofs27
         ofs38:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         dup
         convert_b
         iffalse ofs39
         pop
         getlocal3
         pushbyte 6
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs39:
         iffalse ofs40
         pushbyte 6
         setlocal2
         jump ofs27
         ofs40:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         dup
         convert_b
         iffalse ofs41
         pop
         getlocal3
         pushbyte 4
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs41:
         iffalse ofs42
         pushbyte 4
         setlocal2
         jump ofs27
         ofs42:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         dup
         convert_b
         iffalse ofs43
         pop
         getlocal3
         pushbyte 0
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         ofs43:
         iffalse ofs27
         pushbyte 0
         setlocal2
         ofs27:
         getlocal2
         pushbyte -1
         ifne ofs44
         jump ofs45
         ofs46:
         label
         pushbyte 4
         setlocal2
         jump ofs44
         ofs47:
         label
         pushbyte 4
         setlocal2
         jump ofs44
         ofs48:
         label
         pushbyte 0
         setlocal2
         jump ofs44
         ofs49:
         label
         pushbyte 0
         setlocal2
         jump ofs44
         ofs50:
         label
         pushbyte 2
         setlocal2
         jump ofs44
         ofs51:
         label
         pushbyte 2
         setlocal2
         jump ofs44
         ofs52:
         label
         pushbyte 6
         setlocal2
         jump ofs44
         ofs53:
         label
         pushbyte 6
         setlocal2
         ofs54:
         label
         jump ofs44
         ofs45:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         setlocal 10
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         getlocal 10
         ifstrictne ofs55
         pushbyte 0
         jump ofs56
         ofs55:
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         getlocal 10
         ifstrictne ofs57
         pushbyte 1
         jump ofs56
         ofs57:
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         getlocal 10
         ifstrictne ofs58
         pushbyte 2
         jump ofs56
         ofs58:
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         getlocal 10
         ifstrictne ofs59
         pushbyte 3
         jump ofs56
         ofs59:
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         getlocal 10
         ifstrictne ofs60
         pushbyte 4
         jump ofs56
         ofs60:
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         getlocal 10
         ifstrictne ofs61
         pushbyte 5
         jump ofs56
         ofs61:
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         getlocal 10
         ifstrictne ofs62
         pushbyte 6
         jump ofs56
         ofs62:
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         getlocal 10
         ifstrictne ofs63
         pushbyte 7
         jump ofs56
         ofs63:
         jump ofs64
         pushbyte -1
         jump ofs64
         ofs64:
         pushbyte -1
         ofs56:
         kill 10
         lookupswitch ofs54, [ofs46, ofs47, ofs48, ofs49, ofs50, ofs51, ofs52, ofs53]
         ofs44:
         pushbyte 0
         pushbyte 40
         pushbyte 90
         pushshort 140
         pushshort 180
         pushshort -140
         pushbyte -90
         pushbyte -40
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         dup
         setlocal 5
         getlocal2
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         convert_i
         setlocal 6
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"WEAPON_SPEED")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_turboMultiplier")
         getproperty QName(PackageNamespace(""),"value")
         divide
         convert_i
         setlocal 7
         getlex QName(PackageNamespace(""),"Math")
         getlocal 6
         getlex QName(PackageNamespace(""),"Math")
         getproperty Multiname("PI",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         multiply
         pushshort 180
         divide
         callproperty Multiname("cos",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 7
         multiply
         convert_i
         setlocal 8
         pushbyte 0
         getlex QName(PackageNamespace(""),"Math")
         getlocal 6
         getlex QName(PackageNamespace(""),"Math")
         getproperty Multiname("PI",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         multiply
         pushshort 180
         divide
         callproperty Multiname("sin",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         subtract
         getlocal 7
         multiply
         convert_i
         setlocal 9
         getlocal1
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         pushbyte 2
         divide
         add
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         pushbyte 2
         divide
         add
         getlocal 8
         getlocal 9
         callpropvoid QName(PackageNamespace(""),"shoot"), 4
         getlocal0
         getproperty QName(PackageNamespace(""),"_weaponTimeout")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"WEAPON_TIMEOUTS")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_turboMultiplier")
         getproperty QName(PackageNamespace(""),"value")
         multiply
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"value")
         ofs5:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function performGravityJump() : void
      {
         trait method QName(PackageNamespace(""),"performGravityJump")
         dispid 0
         method
         name "Player:performGravityJump"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "SHIFT"
         callproperty QName(PackageNamespace(""),"pressed"), 1
         dup
         convert_b
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"cheatsEnabled")
         ofs0:
         iffalse ofs1
         returnvoid
         ofs1:
         jump ofs2
         ofs3:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         not
         dup
         iffalse ofs4
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         not
         ofs4:
         dup
         iftrue ofs5
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_UP")
         equals
         ofs5:
         dup
         iffalse ofs6
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         ofs6:
         iffalse ofs7
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs8
         returnvoid
         ofs8:
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs9
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs10
         ofs9:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs10:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         jump ofs11
         ofs7:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs12
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs12:
         dup
         iftrue ofs13
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         equals
         ofs13:
         dup
         iffalse ofs14
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         ofs14:
         iffalse ofs15
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs16
         returnvoid
         ofs16:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         jump ofs11
         ofs15:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs17
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs17:
         dup
         iftrue ofs18
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_LEFT")
         equals
         ofs18:
         dup
         iffalse ofs19
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         ofs19:
         iffalse ofs11
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs20
         returnvoid
         ofs20:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         ofs11:
         jump ofs21
         ofs22:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs23
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs23:
         dup
         iftrue ofs24
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         equals
         ofs24:
         dup
         iffalse ofs25
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         ofs25:
         iffalse ofs26
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs27
         returnvoid
         ofs27:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         jump ofs28
         ofs26:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs29
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs29:
         dup
         iftrue ofs30
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_LEFT")
         equals
         ofs30:
         dup
         iffalse ofs31
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         ofs31:
         iffalse ofs32
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs33
         returnvoid
         ofs33:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         jump ofs28
         ofs32:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         iffalse ofs28
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs34
         returnvoid
         ofs34:
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs35
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs36
         ofs35:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs36:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         ofs28:
         jump ofs21
         ofs37:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         not
         dup
         iffalse ofs38
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         not
         ofs38:
         dup
         iftrue ofs39
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_UP")
         equals
         ofs39:
         dup
         iffalse ofs40
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         ofs40:
         iffalse ofs41
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs42
         returnvoid
         ofs42:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         jump ofs43
         ofs41:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs44
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs44:
         dup
         iftrue ofs45
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         equals
         ofs45:
         dup
         iffalse ofs46
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         ofs46:
         not
         iffalse ofs43
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs47
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs47:
         dup
         iftrue ofs48
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_LEFT")
         equals
         ofs48:
         dup
         iffalse ofs49
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         ofs49:
         iffalse ofs50
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs51
         returnvoid
         ofs51:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         ifne ofs52
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs53
         ofs52:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs53:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         jump ofs43
         ofs50:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         not
         dup
         iffalse ofs54
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         not
         ofs54:
         dup
         iftrue ofs55
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_DOWN")
         equals
         ofs55:
         dup
         iffalse ofs56
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         ofs56:
         iffalse ofs43
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs57
         returnvoid
         ofs57:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         ofs43:
         jump ofs21
         ofs58:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         not
         dup
         iffalse ofs59
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         not
         ofs59:
         dup
         iftrue ofs60
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_UP")
         equals
         ofs60:
         dup
         iffalse ofs61
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         ofs61:
         iffalse ofs62
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs63
         returnvoid
         ofs63:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         jump ofs64
         ofs62:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs65
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs65:
         dup
         iftrue ofs66
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_LEFT")
         equals
         ofs66:
         dup
         iffalse ofs67
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         ofs67:
         not
         iffalse ofs64
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs68
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs68:
         dup
         iftrue ofs69
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         equals
         ofs69:
         dup
         iffalse ofs70
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         ofs70:
         iffalse ofs71
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs72
         returnvoid
         ofs72:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         ifne ofs73
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs74
         ofs73:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs74:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         jump ofs64
         ofs71:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         not
         dup
         iffalse ofs75
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         not
         ofs75:
         dup
         iftrue ofs76
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_DOWN")
         equals
         ofs76:
         dup
         iffalse ofs77
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         ofs77:
         iffalse ofs64
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs78
         returnvoid
         ofs78:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         ofs64:
         label
         jump ofs21
         ofs2:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs79
         pushbyte 0
         jump ofs80
         ofs79:
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs81
         pushbyte 1
         jump ofs80
         ofs81:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs82
         pushbyte 2
         jump ofs80
         ofs82:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs83
         pushbyte 3
         jump ofs80
         ofs83:
         jump ofs84
         pushbyte -1
         jump ofs84
         ofs84:
         pushbyte -1
         ofs80:
         kill 1
         lookupswitch ofs64, [ofs3, ofs22, ofs37, ofs58]
         ofs21:
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function changeSnailSizeCheckBounds(param1:int, param2:int, param3:int, param4:int) : void
      {
         trait method QName(PackageNamespace(""),"changeSnailSizeCheckBounds")
         dispid 0
         method
         name "Player:changeSnailSizeCheckBounds"
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 7
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "param3", 2, 0
         debug 1, "param4", 3, 0
         debug 1, "_loc5_", 4, 141
         debug 1, "_loc6_", 5, 142
         getlocal1
         getlocal3
         subtract
         convert_i
         setlocal 5
         getlocal2
         getlocal 4
         subtract
         convert_i
         setlocal 6
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"x")
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"y")
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlocal 5
         pushbyte 0
         greaterthan
         dup
         iffalse ofs0
         pop
         getlocal 6
         pushbyte 0
         greaterthan
         ofs0:
         iffalse ofs1
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"x")
         getlocal 5
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         getlocal 6
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs2
         ofs1:
         getlocal 5
         pushbyte 0
         ifngt ofs3
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"x")
         getlocal 5
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getlocal 5
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs2
         ofs3:
         getlocal 6
         pushbyte 0
         ifngt ofs2
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         getlocal 6
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         pushbyte 0
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function findNotSolidHeight() : int
      {
         trait method QName(PackageNamespace(""),"findNotSolidHeight")
         dispid 0
         method
         name "Player:findNotSolidHeight"
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 6
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 165
         debug 1, "_loc2_", 1, 166
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         pushbyte 0
         pushbyte -8
         callproperty QName(PackageNamespace(""),"findFirstNotSolidTop"), 5
         convert_i
         setlocal1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         add
         getlex QName(PackageNamespace(""),"width")
         pushbyte 0
         pushbyte 8
         callproperty QName(PackageNamespace(""),"findFirstNotSolidBottom"), 5
         convert_i
         setlocal2
         getlocal2
         getlocal1
         subtract
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function findNotSolidWidth() : int
      {
         trait method QName(PackageNamespace(""),"findNotSolidWidth")
         dispid 0
         method
         name "Player:findNotSolidWidth"
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 6
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 172
         debug 1, "_loc2_", 1, 173
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         pushbyte 0
         getlex QName(PackageNamespace(""),"height")
         pushbyte -8
         callproperty QName(PackageNamespace(""),"findFirstNotSolidLeft"), 5
         convert_i
         setlocal1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         add
         getlex QName(PackageNamespace(""),"y")
         pushbyte 0
         getlex QName(PackageNamespace(""),"height")
         pushbyte 8
         callproperty QName(PackageNamespace(""),"findFirstNotSolidRight"), 5
         convert_i
         setlocal2
         getlocal2
         getlocal1
         subtract
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function moveSnailCheckFullBounds(param1:int, param2:int) : void
      {
         trait method QName(PackageNamespace(""),"moveSnailCheckFullBounds")
         dispid 0
         method
         name "Player:moveSnailCheckFullBounds"
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "_loc3_", 2, 179
         getlocal2
         coerce_a
         setlocal3
         getlocal2
         pushbyte 0
         ifnlt ofs0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstFullNotSolidTop"), 5
         convert_i
         setlocal2
         jump ofs1
         ofs0:
         getlocal2
         pushbyte 0
         ifngt ofs1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstFullNotSolidBottom"), 5
         convert_i
         setlocal2
         ofs1:
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         getlocal2
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushbyte 0
         ifnlt ofs2
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal1
         callproperty QName(PackageNamespace(""),"findFirstFullNotSolidLeft"), 5
         convert_i
         setlocal1
         jump ofs3
         ofs2:
         getlocal1
         pushbyte 0
         ifngt ofs3
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal1
         callproperty QName(PackageNamespace(""),"findFirstFullNotSolidRight"), 5
         convert_i
         setlocal1
         ofs3:
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"x")
         getlocal1
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlocal3
         getlocal2
         subtract
         convert_i
         setlocal2
         getlocal2
         pushbyte 0
         ifnlt ofs4
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstFullNotSolidTop"), 5
         convert_i
         setlocal2
         jump ofs5
         ofs4:
         getlocal2
         pushbyte 0
         ifngt ofs5
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstFullNotSolidBottom"), 5
         convert_i
         setlocal2
         ofs5:
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         getlocal2
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function moveSnailCheckBounds(param1:int, param2:int) : void
      {
         trait method QName(PackageNamespace(""),"moveSnailCheckBounds")
         dispid 0
         method
         name "Player:moveSnailCheckBounds"
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "_loc3_", 2, 212
         getlocal2
         coerce_a
         setlocal3
         getlocal2
         pushbyte 0
         ifnlt ofs0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstNotSolidTop"), 5
         convert_i
         setlocal2
         jump ofs1
         ofs0:
         getlocal2
         pushbyte 0
         ifngt ofs1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstNotSolidBottom"), 5
         convert_i
         setlocal2
         ofs1:
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         getlocal2
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushbyte 0
         ifnlt ofs2
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal1
         callproperty QName(PackageNamespace(""),"findFirstNotSolidLeft"), 5
         convert_i
         setlocal1
         jump ofs3
         ofs2:
         getlocal1
         pushbyte 0
         ifngt ofs3
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal1
         callproperty QName(PackageNamespace(""),"findFirstNotSolidRight"), 5
         convert_i
         setlocal1
         ofs3:
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"x")
         getlocal1
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlocal3
         getlocal2
         subtract
         convert_i
         setlocal2
         getlocal2
         pushbyte 0
         ifnlt ofs4
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstNotSolidTop"), 5
         convert_i
         setlocal2
         jump ofs5
         ofs4:
         getlocal2
         pushbyte 0
         ifngt ofs5
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstNotSolidBottom"), 5
         convert_i
         setlocal2
         ofs5:
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         getlocal2
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function fixGravity() : void
      {
         trait method QName(PrivateNamespace(":Player"),"fixGravity")
         dispid 0
         method
         name "Player/private:fixGravity"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_justHitSteps")
         iffalse ofs0
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"_justHitSteps")
         returnvoid
         ofs0:
         jump ofs1
         ofs2:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         equals
         not
         setproperty QName(PackageNamespace(""),"_jumping")
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         iffalse ofs3
         getlocal0
         dup
         setlocal1
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         increment_i
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         kill 2
         kill 1
         jump ofs4
         ofs3:
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         ofs4:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         dup
         iffalse ofs5
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 1
         greaterequals
         ofs5:
         dup
         iftrue ofs6
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         dup
         convert_b
         iffalse ofs6
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         ofs6:
         iffalse ofs7
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs8
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs9
         ofs8:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs9:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs10
         ofs7:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs11
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 1
         equals
         ofs11:
         dup
         iffalse ofs12
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         ofs12:
         dup
         iffalse ofs13
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         ofs13:
         iffalse ofs14
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte 0
         pushbyte -1
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs10
         ofs14:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs15
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 1
         equals
         ofs15:
         dup
         iffalse ofs16
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         ofs16:
         dup
         iffalse ofs17
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         ofs17:
         iffalse ofs18
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte 12
         pushbyte -1
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs10
         ofs18:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs19
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedJump"), 0
         not
         ofs19:
         dup
         iffalse ofs20
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 1
         equals
         ofs20:
         dup
         iffalse ofs21
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs21:
         iffalse ofs10
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         jump ofs22
         ofs23:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs24
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs25
         ofs24:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs25:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs10
         ofs26:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs27
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs28
         ofs27:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs28:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs10
         ofs29:
         label
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentUpDown")
         getlex QName(PackageNamespace(""),"DIR_UP")
         ifne ofs30
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs31
         ofs30:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs31:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs10
         ofs32:
         label
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentUpDown")
         getlex QName(PackageNamespace(""),"DIR_UP")
         ifne ofs33
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs34
         ofs33:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs34:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs35:
         label
         jump ofs10
         ofs22:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs36
         pushbyte 0
         jump ofs37
         ofs36:
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs38
         pushbyte 1
         jump ofs37
         ofs38:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs39
         pushbyte 2
         jump ofs37
         ofs39:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs40
         pushbyte 3
         jump ofs37
         ofs40:
         jump ofs41
         pushbyte -1
         jump ofs41
         ofs41:
         pushbyte -1
         ofs37:
         kill 1
         lookupswitch ofs35, [ofs23, ofs26, ofs29, ofs32]
         ofs10:
         jump ofs42
         ofs43:
         label
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 1
         equals
         dup
         iffalse ofs44
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         ofs44:
         dup
         iffalse ofs45
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_justHitHeadOrWall")
         not
         ofs45:
         dup
         iffalse ofs46
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         not
         ofs46:
         dup
         iffalse ofs47
         pop
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         greaterthan
         ofs47:
         iffalse ofs48
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         equals
         dup
         iffalse ofs49
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         ofs49:
         iffalse ofs50
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         pushfalse
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 3
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         pushbyte 0
         pushbyte -11
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs51
         ofs50:
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         equals
         dup
         iffalse ofs52
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         ofs52:
         iffalse ofs51
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         pushfalse
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 3
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         pushbyte 15
         pushbyte -11
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         ofs51:
         jump ofs42
         ofs48:
         getlocal0
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         equals
         not
         setproperty QName(PackageNamespace(""),"_jumping")
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         iffalse ofs53
         getlocal0
         dup
         setlocal1
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         increment_i
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         kill 2
         kill 1
         jump ofs54
         ofs53:
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         ofs54:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 1
         equals
         dup
         iftrue ofs55
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         ofs55:
         iffalse ofs56
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs57
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs56
         ofs57:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs56:
         jump ofs42
         ofs58:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         equals
         not
         setproperty QName(PackageNamespace(""),"_jumping")
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         iffalse ofs59
         getlocal0
         dup
         setlocal1
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         increment_i
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         kill 2
         kill 1
         jump ofs60
         ofs59:
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         ofs60:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         dup
         iffalse ofs61
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 1
         greaterequals
         ofs61:
         dup
         iftrue ofs62
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         dup
         convert_b
         iffalse ofs62
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         ofs62:
         iffalse ofs63
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte 0
         pushbyte 13
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs64
         ofs63:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs65
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 1
         equals
         ofs65:
         dup
         iffalse ofs66
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         ofs66:
         dup
         iffalse ofs67
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         ofs67:
         iffalse ofs68
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte 0
         pushbyte 13
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs64
         ofs68:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs69
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 1
         equals
         ofs69:
         dup
         iffalse ofs70
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         ofs70:
         dup
         iffalse ofs71
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         ofs71:
         iffalse ofs72
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte 0
         pushbyte 1
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs64
         ofs72:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs73
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedJump"), 0
         not
         ofs73:
         dup
         iffalse ofs74
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 1
         equals
         ofs74:
         dup
         iffalse ofs75
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         not
         ofs75:
         iffalse ofs64
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         jump ofs76
         ofs77:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs78
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs79
         ofs78:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs79:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs64
         ofs80:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs81
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs82
         ofs81:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs82:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs64
         ofs83:
         label
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentUpDown")
         getlex QName(PackageNamespace(""),"DIR_UP")
         ifne ofs84
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs85
         ofs84:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs85:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs64
         ofs86:
         label
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentUpDown")
         getlex QName(PackageNamespace(""),"DIR_UP")
         ifne ofs87
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs88
         ofs87:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs88:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs89:
         label
         jump ofs64
         ofs76:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs90
         pushbyte 0
         jump ofs91
         ofs90:
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs92
         pushbyte 1
         jump ofs91
         ofs92:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs93
         pushbyte 2
         jump ofs91
         ofs93:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs94
         pushbyte 3
         jump ofs91
         ofs94:
         jump ofs95
         pushbyte -1
         jump ofs95
         ofs95:
         pushbyte -1
         ofs91:
         kill 1
         lookupswitch ofs89, [ofs77, ofs80, ofs83, ofs86]
         ofs64:
         jump ofs42
         ofs96:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         equals
         not
         setproperty QName(PackageNamespace(""),"_jumping")
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         iffalse ofs97
         getlocal0
         dup
         setlocal1
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         increment_i
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         kill 2
         kill 1
         jump ofs98
         ofs97:
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         ofs98:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         dup
         iffalse ofs99
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 1
         greaterequals
         ofs99:
         dup
         iftrue ofs100
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         dup
         convert_b
         iffalse ofs100
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         ofs100:
         iffalse ofs101
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte -6
         pushbyte 13
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs102
         ofs101:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs103
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 1
         equals
         ofs103:
         dup
         iffalse ofs104
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         ofs104:
         dup
         iffalse ofs105
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         ofs105:
         iffalse ofs106
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte -6
         pushbyte 13
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs102
         ofs106:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs107
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 1
         equals
         ofs107:
         dup
         iffalse ofs108
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         ofs108:
         dup
         iffalse ofs109
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         ofs109:
         iffalse ofs110
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte -6
         pushbyte 1
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs102
         ofs110:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs111
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedJump"), 0
         not
         ofs111:
         dup
         iffalse ofs112
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_fallFrames")
         pushbyte 1
         equals
         ofs112:
         dup
         iffalse ofs113
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         not
         ofs113:
         iffalse ofs102
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         jump ofs114
         ofs115:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs116
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs117
         ofs116:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs117:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs102
         ofs118:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs119
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs120
         ofs119:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs120:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs102
         ofs121:
         label
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentUpDown")
         getlex QName(PackageNamespace(""),"DIR_UP")
         ifne ofs122
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs123
         ofs122:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs123:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs102
         ofs124:
         label
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_mostRecentUpDown")
         getlex QName(PackageNamespace(""),"DIR_UP")
         ifne ofs125
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs126
         ofs125:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs126:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs127:
         label
         jump ofs102
         ofs114:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_desiredGravity")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs128
         pushbyte 0
         jump ofs129
         ofs128:
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs130
         pushbyte 1
         jump ofs129
         ofs130:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs131
         pushbyte 2
         jump ofs129
         ofs131:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs132
         pushbyte 3
         jump ofs129
         ofs132:
         jump ofs133
         pushbyte -1
         jump ofs133
         ofs133:
         pushbyte -1
         ofs129:
         kill 1
         lookupswitch ofs127, [ofs115, ofs118, ofs121, ofs124]
         ofs102:
         label
         jump ofs42
         ofs1:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs134
         pushbyte 0
         jump ofs135
         ofs134:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs136
         pushbyte 1
         jump ofs135
         ofs136:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs137
         pushbyte 2
         jump ofs135
         ofs137:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs138
         pushbyte 3
         jump ofs135
         ofs138:
         jump ofs139
         pushbyte -1
         jump ofs139
         ofs139:
         pushbyte -1
         ofs135:
         kill 1
         lookupswitch ofs102, [ofs2, ofs43, ofs58, ofs96]
         ofs42:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function doJump() : void
      {
         trait method QName(PackageNamespace(""),"doJump")
         dispid 0
         method
         name "Player:doJump"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         iffalse ofs0
         returnvoid
         ofs0:
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs1
         getlocal0
         callproperty QName(PrivateNamespace(":Player"),"doGravityJump"), 0
         iffalse ofs2
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playJump1"), 0
         ofs2:
         jump ofs3
         ofs1:
         getlocal0
         callproperty QName(PrivateNamespace(":Player"),"doRegularJump"), 0
         iffalse ofs3
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playJump1"), 0
         ofs3:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function doGravityJump() : Boolean
      {
         trait method QName(PrivateNamespace(":Player"),"doGravityJump")
         dispid 0
         method
         name "Player/private:doGravityJump"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 8
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         jump ofs0
         ofs1:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnge ofs2
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         increment
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_jumpPower")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         pushtrue
         returnvalue
         ofs2:
         jump ofs3
         ofs4:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnge ofs5
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         decrement
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_jumpPower")
         getproperty QName(PackageNamespace(""),"value")
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         pushtrue
         returnvalue
         ofs5:
         jump ofs3
         ofs6:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnge ofs7
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"x")
         decrement
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_jumpPower")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         pushtrue
         returnvalue
         ofs7:
         jump ofs3
         ofs8:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnge ofs9
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"x")
         increment
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_jumpPower")
         getproperty QName(PackageNamespace(""),"value")
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         pushtrue
         returnvalue
         ofs9:
         jump ofs3
         ofs10:
         label
         jump ofs3
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs11
         pushbyte 0
         jump ofs12
         ofs11:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs13
         pushbyte 1
         jump ofs12
         ofs13:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs14
         pushbyte 2
         jump ofs12
         ofs14:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs15
         pushbyte 3
         jump ofs12
         ofs15:
         jump ofs16
         pushbyte -1
         jump ofs16
         ofs16:
         pushbyte -1
         ofs12:
         kill 1
         lookupswitch ofs10, [ofs1, ofs4, ofs6, ofs8]
         ofs3:
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function doRegularJump() : Boolean
      {
         trait method QName(PrivateNamespace(":Player"),"doRegularJump")
         dispid 0
         method
         name "Player/private:doRegularJump"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 8
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         jump ofs0
         ofs1:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnge ofs2
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         increment
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs3
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs4
         ofs3:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs4:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         pushtrue
         returnvalue
         ofs2:
         jump ofs5
         ofs6:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnge ofs7
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         decrement
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_jumpPower")
         getproperty QName(PackageNamespace(""),"value")
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         pushtrue
         returnvalue
         ofs7:
         jump ofs5
         ofs8:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         greaterequals
         dup
         iffalse ofs9
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         dup
         convert_b
         iffalse ofs10
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         dup
         convert_b
         iftrue ofs10
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         ofs10:
         not
         ofs9:
         iffalse ofs11
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 100
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         pushtrue
         returnvalue
         ofs11:
         jump ofs5
         ofs12:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         greaterequals
         dup
         iffalse ofs13
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         dup
         convert_b
         iffalse ofs14
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         dup
         convert_b
         iftrue ofs14
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         ofs14:
         not
         ofs13:
         iffalse ofs15
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte -100
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"x")
         pushbyte 11
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         pushtrue
         returnvalue
         ofs15:
         jump ofs5
         ofs16:
         label
         jump ofs5
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs17
         pushbyte 0
         jump ofs18
         ofs17:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs19
         pushbyte 1
         jump ofs18
         ofs19:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs20
         pushbyte 2
         jump ofs18
         ofs20:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs21
         pushbyte 3
         jump ofs18
         ofs21:
         jump ofs22
         pushbyte -1
         jump ofs22
         ofs22:
         pushbyte -1
         ofs18:
         kill 1
         lookupswitch ofs16, [ofs1, ofs6, ofs8, ofs12]
         ofs5:
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setHighJump(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setHighJump")
         dispid 0
         method
         name "Player:setHighJump"
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasHighJump")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_jumpPower")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasHighJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         not
         iffalse ofs0
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PrivateNamespace(":Player"),"HIGH_JUMP")
         callproperty QName(PackageNamespace(""),"int"), 1
         jump ofs1
         ofs0:
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PrivateNamespace(":Player"),"REGULAR_JUMP")
         callproperty QName(PackageNamespace(""),"int"), 1
         ofs1:
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         setproperty QName(PackageNamespace(""),"value")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function isIcy() : Boolean
      {
         trait method QName(PackageNamespace(""),"isIcy")
         dispid 0
         method
         name "Player:isIcy"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasColdFoot")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setSnailType(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setSnailType")
         dispid 0
         method
         name "Player:setSnailType"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_snailType")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         pushstring "snail"
         getlocal1
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         pushstring "_"
         add
         setproperty QName(PrivateNamespace(":Player"),"_snailTypePrefix")
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_ICE")
         equals
         dup
         iftrue ofs0
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_ICEGRAV")
         equals
         ofs0:
         dup
         iftrue ofs1
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_ICEMETAL")
         equals
         ofs1:
         dup
         iftrue ofs2
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_ALL")
         equals
         ofs2:
         iffalse ofs3
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasColdFoot")
         pushtrue
         setproperty QName(PackageNamespace(""),"value")
         ofs3:
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_GRAVITY")
         equals
         dup
         iftrue ofs4
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_ICEGRAV")
         equals
         ofs4:
         dup
         iftrue ofs5
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_GRAVMETAL")
         equals
         ofs5:
         dup
         iftrue ofs6
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_ALL")
         equals
         ofs6:
         iffalse ofs7
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         pushtrue
         setproperty QName(PackageNamespace(""),"value")
         ofs7:
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_METAL")
         equals
         dup
         iftrue ofs8
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_ICEMETAL")
         equals
         ofs8:
         dup
         iftrue ofs9
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_GRAVMETAL")
         equals
         ofs9:
         dup
         iftrue ofs10
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_ALL")
         equals
         ofs10:
         iffalse ofs11
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         pushtrue
         setproperty QName(PackageNamespace(""),"value")
         ofs11:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs12
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         not
         not
         iffalse ofs13
         pushshort 480
         jump ofs14
         ofs13:
         pushshort 330
         ofs14:
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_maxSpeed")
         pushshort 550
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_gravity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         not
         not
         iffalse ofs15
         pushshort 900
         jump ofs16
         ofs15:
         pushshort 1200
         ofs16:
         setproperty QName(PackageNamespace(""),"value")
         jump ofs17
         ofs12:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs18
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         not
         not
         iffalse ofs19
         pushshort 370
         jump ofs20
         ofs19:
         pushshort 260
         ofs20:
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_maxSpeed")
         pushshort 500
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_gravity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         not
         not
         iffalse ofs21
         pushshort 900
         jump ofs22
         ofs21:
         pushshort 1200
         ofs22:
         setproperty QName(PackageNamespace(""),"value")
         jump ofs17
         ofs18:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasColdFoot")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs23
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         not
         not
         iffalse ofs24
         pushshort 370
         jump ofs25
         ofs24:
         pushshort 260
         ofs25:
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_maxSpeed")
         pushshort 500
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_gravity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         not
         not
         iffalse ofs26
         pushshort 900
         jump ofs27
         ofs26:
         pushshort 1200
         ofs27:
         setproperty QName(PackageNamespace(""),"value")
         jump ofs17
         ofs23:
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         not
         not
         iffalse ofs28
         pushshort 370
         jump ofs29
         ofs28:
         pushshort 260
         ofs29:
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_maxSpeed")
         pushshort 500
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_gravity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         not
         not
         iffalse ofs30
         pushshort 900
         jump ofs31
         ofs30:
         pushshort 1200
         ofs31:
         setproperty QName(PackageNamespace(""),"value")
         ofs17:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function playAnim(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"playAnim")
         dispid 0
         method
         name "Player:playAnim"
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasColdFoot")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         ofs0:
         iffalse ofs1
         getlocal0
         pushstring "snail3_"
         setproperty QName(PrivateNamespace(":Player"),"_snailTypePrefix")
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs3
         getlocal0
         pushstring "snail4_"
         setproperty QName(PrivateNamespace(":Player"),"_snailTypePrefix")
         jump ofs2
         ofs3:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasColdFoot")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs4
         getlocal0
         pushstring "snail2_"
         setproperty QName(PrivateNamespace(":Player"),"_snailTypePrefix")
         jump ofs2
         ofs4:
         getlocal0
         pushstring "snail1_"
         setproperty QName(PrivateNamespace(":Player"),"_snailTypePrefix")
         ofs2:
         findpropstrict QName(PackageNamespace(""),"play")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_snailTypePrefix")
         getlocal1
         add
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setGravityDir(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setGravityDir")
         dispid 0
         method
         name "Player:setGravityDir"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlocal1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"uint"), 1
         setproperty QName(PackageNamespace(""),"_gravityDir")
         jump ofs0
         ofs1:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_gravity")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         pushshort 200
         multiply
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"drag")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         jump ofs2
         ofs3:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_gravity")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         pushshort 200
         multiply
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         jump ofs2
         ofs4:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_gravity")
         getproperty QName(PackageNamespace(""),"value")
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         pushshort 200
         multiply
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"drag")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         jump ofs2
         ofs5:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_gravity")
         getproperty QName(PackageNamespace(""),"value")
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"acceleration")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         pushshort 200
         multiply
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         ofs6:
         label
         jump ofs2
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal2
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal2
         ifstrictne ofs7
         pushbyte 0
         jump ofs8
         ofs7:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal2
         ifstrictne ofs9
         pushbyte 1
         jump ofs8
         ofs9:
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal2
         ifstrictne ofs10
         pushbyte 2
         jump ofs8
         ofs10:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal2
         ifstrictne ofs11
         pushbyte 3
         jump ofs8
         ofs11:
         jump ofs12
         pushbyte -1
         jump ofs12
         ofs12:
         pushbyte -1
         ofs8:
         kill 2
         lookupswitch ofs6, [ofs1, ofs3, ofs4, ofs5]
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hideInShell(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"hideInShell")
         dispid 0
         method
         name "Player:hideInShell"
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hidingInShell")
         not
         dup
         iffalse ofs0
         pop
         getlocal1
         ofs0:
         iffalse ofs1
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playShell"), 0
         ofs1:
         getlocal0
         getlocal1
         setproperty QName(PrivateNamespace(":Player"),"_hidingInShell")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"zzz")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function realTeleport() : void
      {
         trait method QName(PackageNamespace(""),"realTeleport")
         dispid 0
         method
         name "Player:realTeleport"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 646
         pushnull
         coerce QName(PackageNamespace(""),"XMLList")
         setlocal1
         getlocal0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         findpropstrict QName(PackageNamespace(""),"dead")
         pushfalse
         setproperty QName(PackageNamespace(""),"dead")
         findpropstrict QName(PackageNamespace(""),"solid")
         pushtrue
         setproperty QName(PackageNamespace(""),"solid")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         iffalse ofs0
         getlocal0
         pushint 99999
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"BOSSRUSH_STARTX")
         pushbyte 16
         multiply
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"BOSSRUSH_STARTY")
         pushbyte 16
         multiply
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         jump ofs1
         ofs0:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         coerce QName(PackageNamespace(""),"XMLList")
         setlocal1
         getlocal0
         getlocal1
         getproperty Multiname("savex",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlocal1
         getproperty Multiname("savey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         callpropvoid QName(PackageNamespace(""),"teleportTo"), 2
         ofs1:
         findpropstrict QName(PackageNamespace("flash.utils"),"clearInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"teleportInterval")
         callpropvoid QName(PackageNamespace("flash.utils"),"clearInterval"), 1
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"fade")
         callpropvoid QName(PackageNamespace(""),"stop"), 0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"flash")
         pushint 2130706432
         pushdouble 0.34
         callpropvoid QName(PackageNamespace(""),"start"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function teleportTo(param1:int, param2:int) : void
      {
         trait method QName(PackageNamespace(""),"teleportTo")
         dispid 0
         method
         name "Player:teleportTo"
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal2
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         pushshort 200
         multiply
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"drag")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkRoomBounds"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setFaceDirHiding(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setFaceDirHiding")
         dispid 0
         method
         name "Player:setFaceDirHiding"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         jump ofs0
         ofs1:
         label
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 13
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 32
         pushbyte 13
         subtract
         pushbyte 7
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 3
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 3
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"height")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "floor_right_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         getlocal0
         pushbyte 9
         setproperty QName(PrivateNamespace(":Player"),"_hideOfsX")
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hideOfsX")
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(":Player"),"_hideOfsY")
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hideOfsY")
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         jump ofs2
         ofs3:
         label
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 7
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 32
         pushbyte 7
         subtract
         pushbyte 13
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 3
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 3
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"height")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushbyte 3
         setproperty QName(PrivateNamespace(":Player"),"_hideOfsX")
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hideOfsX")
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(":Player"),"_hideOfsY")
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hideOfsY")
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         pushstring "floor_right_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         jump ofs2
         ofs4:
         label
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 13
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 32
         pushbyte 13
         subtract
         pushbyte 7
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 0
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 6
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"height")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "ceil_right_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         getlocal0
         pushbyte 9
         setproperty QName(PrivateNamespace(":Player"),"_hideOfsX")
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hideOfsX")
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         jump ofs2
         ofs5:
         label
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 7
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 32
         pushbyte 7
         subtract
         pushbyte 13
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 0
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 6
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"height")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "ceil_right_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         getlocal0
         pushbyte 3
         setproperty QName(PrivateNamespace(":Player"),"_hideOfsX")
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hideOfsX")
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         jump ofs2
         ofs6:
         label
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 13
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 32
         pushbyte 13
         subtract
         pushbyte 7
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 6
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 6
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_up_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         setproperty QName(PackageNamespace(""),"facing")
         getlocal0
         pushbyte 9
         setproperty QName(PrivateNamespace(":Player"),"_hideOfsY")
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hideOfsY")
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         pushbyte 3
         setproperty QName(PrivateNamespace(":Player"),"_hideOfsX")
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hideOfsX")
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         jump ofs2
         ofs7:
         label
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 7
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 32
         pushbyte 7
         subtract
         pushbyte 13
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 6
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 6
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_down_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         setproperty QName(PackageNamespace(""),"facing")
         getlocal0
         pushbyte 3
         setproperty QName(PrivateNamespace(":Player"),"_hideOfsY")
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hideOfsY")
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         pushbyte 3
         setproperty QName(PrivateNamespace(":Player"),"_hideOfsX")
         findpropstrict QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hideOfsX")
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         jump ofs2
         ofs8:
         label
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 13
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 32
         pushbyte 13
         subtract
         pushbyte 7
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 0
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 6
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_up_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         setproperty QName(PackageNamespace(""),"facing")
         getlocal0
         pushbyte 9
         setproperty QName(PrivateNamespace(":Player"),"_hideOfsY")
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hideOfsY")
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         jump ofs2
         ofs9:
         label
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 7
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 32
         pushbyte 7
         subtract
         pushbyte 13
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 0
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 6
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_down_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         setproperty QName(PackageNamespace(""),"facing")
         getlocal0
         pushbyte 3
         setproperty QName(PrivateNamespace(":Player"),"_hideOfsY")
         findpropstrict QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hideOfsY")
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         ofs10:
         label
         jump ofs2
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         setlocal2
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         getlocal2
         ifstrictne ofs11
         pushbyte 0
         jump ofs12
         ofs11:
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         getlocal2
         ifstrictne ofs13
         pushbyte 1
         jump ofs12
         ofs13:
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         getlocal2
         ifstrictne ofs14
         pushbyte 2
         jump ofs12
         ofs14:
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         getlocal2
         ifstrictne ofs15
         pushbyte 3
         jump ofs12
         ofs15:
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         getlocal2
         ifstrictne ofs16
         pushbyte 4
         jump ofs12
         ofs16:
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         getlocal2
         ifstrictne ofs17
         pushbyte 5
         jump ofs12
         ofs17:
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         getlocal2
         ifstrictne ofs18
         pushbyte 6
         jump ofs12
         ofs18:
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         getlocal2
         ifstrictne ofs19
         pushbyte 7
         jump ofs12
         ofs19:
         jump ofs20
         pushbyte -1
         jump ofs20
         ofs20:
         pushbyte -1
         ofs12:
         kill 2
         lookupswitch ofs10, [ofs1, ofs3, ofs4, ofs5, ofs6, ofs7, ofs8, ofs9]
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setFaceDirNotHiding(param1:int, param2:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"setFaceDirNotHiding")
         dispid 0
         method
         name "Player:setFaceDirNotHiding"
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 8
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "_loc3_", 2, 778
         debug 1, "_loc4_", 3, 779
         debug 1, "_loc5_", 4, 780
         debug 1, "_loc6_", 5, 781
         getlex QName(PackageNamespace(""),"offset")
         getproperty QName(PackageNamespace(""),"x")
         convert_i
         setlocal3
         getlex QName(PackageNamespace(""),"offset")
         getproperty QName(PackageNamespace(""),"y")
         convert_i
         setlocal 4
         getlex QName(PackageNamespace(""),"width")
         convert_i
         setlocal 5
         getlex QName(PackageNamespace(""),"height")
         convert_i
         setlocal 6
         jump ofs0
         ofs1:
         label
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 4
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 32
         pushbyte 4
         subtract
         pushbyte 4
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 3
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 3
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"height")
         getlocal0
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"changeSnailSizeCheckBounds"), 4
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "floor_right_move"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         jump ofs2
         ofs3:
         label
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 4
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 32
         pushbyte 4
         subtract
         pushbyte 4
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 0
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 3
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"height")
         getlocal0
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"changeSnailSizeCheckBounds"), 4
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "ceil_right_move"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         jump ofs2
         ofs4:
         label
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 4
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 32
         pushbyte 8
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 3
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 3
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"width")
         getlocal2
         not
         iffalse ofs5
         getlocal0
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"changeSnailSizeCheckBounds"), 4
         ofs5:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_up_move"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         setproperty QName(PackageNamespace(""),"facing")
         jump ofs2
         ofs6:
         label
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 4
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 32
         pushbyte 8
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 3
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 3
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"width")
         getlocal2
         not
         iffalse ofs7
         getlocal0
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"changeSnailSizeCheckBounds"), 4
         ofs7:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_down_move"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         setproperty QName(PackageNamespace(""),"facing")
         jump ofs2
         ofs8:
         label
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 4
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 32
         pushbyte 8
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 0
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 3
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"width")
         getlocal2
         not
         iffalse ofs9
         getlocal0
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"changeSnailSizeCheckBounds"), 4
         ofs9:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_up_move"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         setproperty QName(PackageNamespace(""),"facing")
         jump ofs2
         ofs10:
         label
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 4
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 32
         pushbyte 8
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 0
         pushbyte 0
         add
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"width")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         findpropstrict QName(PackageNamespace(""),"Number")
         pushbyte 16
         pushbyte 3
         subtract
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"Number"), 1
         setproperty QName(PackageNamespace(""),"width")
         getlocal2
         not
         iffalse ofs11
         getlocal0
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"changeSnailSizeCheckBounds"), 4
         ofs11:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_down_move"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findpropstrict QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         setproperty QName(PackageNamespace(""),"facing")
         ofs12:
         label
         jump ofs2
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         setlocal 7
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         getlocal 7
         ifstrictne ofs13
         pushbyte 0
         jump ofs14
         ofs13:
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         getlocal 7
         ifstrictne ofs15
         pushbyte 1
         jump ofs14
         ofs15:
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         getlocal 7
         ifstrictne ofs16
         pushbyte 2
         jump ofs14
         ofs16:
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         getlocal 7
         ifstrictne ofs17
         pushbyte 3
         jump ofs14
         ofs17:
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         getlocal 7
         ifstrictne ofs18
         pushbyte 4
         jump ofs14
         ofs18:
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         getlocal 7
         ifstrictne ofs19
         pushbyte 5
         jump ofs14
         ofs19:
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         getlocal 7
         ifstrictne ofs20
         pushbyte 6
         jump ofs14
         ofs20:
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         getlocal 7
         ifstrictne ofs21
         pushbyte 7
         jump ofs14
         ofs21:
         jump ofs22
         pushbyte -1
         jump ofs22
         ofs22:
         pushbyte -1
         ofs14:
         kill 7
         lookupswitch ofs12, [ofs1, ofs1, ofs3, ofs3, ofs4, ofs6, ofs8, ofs10]
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setFaceDir(param1:int, param2:Boolean = false, param3:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"setFaceDir")
         dispid 0
         method
         name "Player:setFaceDir"
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "param3", 2, 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         getlocal1
         equals
         dup
         iffalse ofs0
         pop
         getlocal2
         not
         ofs0:
         iffalse ofs1
         returnvoid
         ofs1:
         getlocal0
         getlocal1
         setproperty QName(PrivateNamespace(":Player"),"_faceDir")
         getlocal0
         pushbyte 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hideOfsX")
         subtract
         pushbyte 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hideOfsY")
         subtract
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(":Player"),"_hideOfsX")
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(":Player"),"_hideOfsY")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hidingInShell")
         iffalse ofs2
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         callpropvoid QName(PackageNamespace(""),"setFaceDirHiding"), 1
         jump ofs3
         ofs2:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_faceDir")
         getlocal3
         callpropvoid QName(PackageNamespace(""),"setFaceDirNotHiding"), 2
         ofs3:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setCurHp(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setCurHp")
         dispid 0
         method
         name "Player:setCurHp"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_curHp")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_curHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         ifngt ofs0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_curHp")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"value")
         ofs0:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"heartHud")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_curHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 2
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_curHp")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         ifnle ofs1
         getlocal0
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getCurHp() : int
      {
         trait method QName(PackageNamespace(""),"getCurHp")
         dispid 0
         method
         name "Player:getCurHp"
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_curHp")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getMaxHp() : int
      {
         trait method QName(PackageNamespace(""),"getMaxHp")
         dispid 0
         method
         name "Player:getMaxHp"
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setMaxHp(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setMaxHp")
         dispid 0
         method
         name "Player:setMaxHp"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         getlex QName(PackageNamespace(""),"MAX_HEART_CONTAINERS")
         multiply
         ifngt ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         getlex QName(PackageNamespace(""),"MAX_HEART_CONTAINERS")
         multiply
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         setproperty QName(PackageNamespace(""),"value")
         ofs0:
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"heartHud")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"setMaxHp"), 2
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"heartHud")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addHeartContainer() : void
      {
         trait method QName(PackageNamespace(""),"addHeartContainer")
         dispid 0
         method
         name "Player:addHeartContainer"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         add
         callpropvoid QName(PackageNamespace(""),"setMaxHp"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function justPressedShoot() : Boolean
      {
         trait method QName(PackageNamespace(""),"justPressedShoot")
         dispid 0
         method
         name "Player:justPressedShoot"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_NORMAL")
         ifne ofs0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         dup
         convert_b
         iftrue ofs1
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         ofs1:
         dup
         iftrue ofs2
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"STRAFE_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         ofs2:
         dup
         iftrue ofs3
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_STRAFE_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         ofs3:
         returnvalue
         ofs0:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         dup
         convert_b
         iftrue ofs4
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         ofs4:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function pressedStrafe() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressedStrafe")
         dispid 0
         method
         name "Player:pressedStrafe"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"STRAFE_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         dup
         convert_b
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_STRAFE_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         ofs0:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function pressedShoot() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressedShoot")
         dispid 0
         method
         name "Player:pressedShoot"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_NORMAL")
         ifne ofs0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         dup
         convert_b
         iftrue ofs1
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         ofs1:
         dup
         iftrue ofs2
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"STRAFE_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         ofs2:
         dup
         iftrue ofs3
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_STRAFE_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         ofs3:
         returnvalue
         ofs0:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         dup
         convert_b
         iftrue ofs4
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         ofs4:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function justPressedJump() : Boolean
      {
         trait method QName(PackageNamespace(""),"justPressedJump")
         dispid 0
         method
         name "Player:justPressedJump"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"JUMP_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         dup
         convert_b
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_JUMP_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         ofs0:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function pressedJump() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressedJump")
         dispid 0
         method
         name "Player:pressedJump"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"JUMP_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         dup
         convert_b
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_JUMP_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         ofs0:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function justPressedUp() : Boolean
      {
         trait method QName(PackageNamespace(""),"justPressedUp")
         dispid 0
         method
         name "Player:justPressedUp"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"UP_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         dup
         convert_b
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_UP_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         ofs0:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function justPressedDown() : Boolean
      {
         trait method QName(PackageNamespace(""),"justPressedDown")
         dispid 0
         method
         name "Player:justPressedDown"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"DOWN_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         dup
         convert_b
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_DOWN_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         ofs0:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function justPressedLeft() : Boolean
      {
         trait method QName(PackageNamespace(""),"justPressedLeft")
         dispid 0
         method
         name "Player:justPressedLeft"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"LEFT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         dup
         convert_b
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_LEFT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         ofs0:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function justPressedRight() : Boolean
      {
         trait method QName(PackageNamespace(""),"justPressedRight")
         dispid 0
         method
         name "Player:justPressedRight"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"RIGHT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         dup
         convert_b
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_RIGHT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         ofs0:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function pressedUp() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressedUp")
         dispid 0
         method
         name "Player:pressedUp"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"UP_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         dup
         convert_b
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_UP_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         ofs0:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function pressedDown() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressedDown")
         dispid 0
         method
         name "Player:pressedDown"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"DOWN_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         dup
         convert_b
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_DOWN_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         ofs0:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function pressedLeft() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressedLeft")
         dispid 0
         method
         name "Player:pressedLeft"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"LEFT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         dup
         convert_b
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_LEFT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         ofs0:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function pressedRight() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressedRight")
         dispid 0
         method
         name "Player:pressedRight"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"RIGHT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         dup
         convert_b
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_RIGHT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         ofs0:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function saveGame() : void
      {
         trait method QName(PackageNamespace(""),"saveGame")
         dispid 0
         method
         name "Player:saveGame"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 994
         debug 1, "_loc2_", 1, 995
         debug 1, "_loc3_", 2, 996
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         coerce QName(PackageNamespace(""),"XMLList")
         setlocal1
         getlocal1
         getproperty Multiname("savex",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         convert_i
         setlocal2
         getlocal1
         getproperty Multiname("savey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         convert_i
         setlocal3
         getlocal0
         getlocal2
         getlocal3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setSaveCoords"), 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function saveNoCoords() : void
      {
         trait method QName(PackageNamespace(""),"saveNoCoords")
         dispid 0
         method
         name "Player:saveNoCoords"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 1006
         debug 1, "_loc2_", 1, 1007
         debug 1, "_loc3_", 2, 1008
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         iffalse ofs0
         returnvoid
         ofs0:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"config")
         callproperty QName(PackageNamespace(""),"getPlayerStartX"), 0
         pushbyte 16
         multiply
         convert_i
         setlocal1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"config")
         callproperty QName(PackageNamespace(""),"getPlayerStartY"), 0
         pushbyte 16
         multiply
         convert_i
         setlocal2
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         coerce QName(PackageNamespace(""),"SaveData")
         setlocal3
         getlocal3
         pushstring "savex"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iffalse ofs1
         getlocal3
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getproperty Multiname("savex",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         convert_i
         setlocal1
         ofs1:
         getlocal3
         pushstring "savey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iffalse ofs2
         getlocal3
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getproperty Multiname("savey",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         convert_i
         setlocal2
         ofs2:
         getlocal0
         getlocal1
         getlocal2
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setSaveCoords"), 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setSaveCoords(param1:int, param2:int, param3:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"setSaveCoords")
         dispid 0
         method
         name "Player:setSaveCoords"
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "param3", 2, 0
         debug 1, "_loc4_", 3, 1022
         pushnull
         coerce QName(PackageNamespace(""),"XML")
         setlocal 4
         getlex QName(PackageNamespace(""),"dead")
         dup
         iftrue ofs0
         pop
         getlex QName(PackageNamespace(""),"active")
         not
         ofs0:
         iffalse ofs1
         returnvoid
         ofs1:
         getlocal3
         not
         iffalse ofs2
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"savingText")
         callpropvoid QName(PackageNamespace(""),"setSaving"), 0
         ofs2:
         findpropstrict QName(PackageNamespace(""),"XML")
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<vars"
         pushstring "/>"
         add
         construct 1
         constructprop QName(PackageNamespace(""),"XML"), 1
         coerce QName(PackageNamespace(""),"XML")
         dup
         setlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<savex"
         pushstring ">"
         add
         getlocal1
         esc_xelem
         add
         pushstring "</savex>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<savey"
         pushstring ">"
         add
         getlocal2
         esc_xelem
         add
         pushstring "</savey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<lastWeapon"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</lastWeapon>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlex QName(PackageNamespace(""),"firingMode")
         iffalse ofs3
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<toggleFire"
         pushstring ">true</toggleFire>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs3:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasTurbo")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs4
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasTurbo"
         pushstring ">true</hasTurbo>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs4:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasHighJump")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs5
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasHighJump"
         pushstring ">true</hasHighJump>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs5:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasDevastator")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs6
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasDevastator"
         pushstring ">true</hasDevastator>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs6:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityShock")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs7
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasGravityShock"
         pushstring ">true</hasGravityShock>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs7:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasShellShield")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs8
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasShellShield"
         pushstring ">true</hasShellShield>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs8:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hasGoodEnding")
         iffalse ofs9
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasGoodEnding"
         pushstring ">true</hasGoodEnding>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs9:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hideMiniMap")
         iffalse ofs10
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hideMiniMap"
         pushstring ">true</hideMiniMap>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs10:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hideTab")
         iffalse ofs11
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hideTab"
         pushstring ">true</hideTab>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs11:
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<snailType"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_snailType")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</snailType>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<maxHp"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</maxHp>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         iffalse ofs12
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bossesKilledOne"
         pushstring ">true</bossesKilledOne>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs12:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 2
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         iffalse ofs13
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bossesKilledTwo"
         pushstring ">true</bossesKilledTwo>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs13:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 3
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         iffalse ofs14
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bossesKilledThree"
         pushstring ">true</bossesKilledThree>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs14:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 4
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         iffalse ofs15
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bossesKilledFour"
         pushstring ">true</bossesKilledFour>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs15:
         getlocal0
         getproperty QName(PackageNamespace(""),"_easyMode")
         iffalse ofs16
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<easyMode"
         pushstring ">true</easyMode>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs16:
         getlocal0
         getproperty QName(PackageNamespace(""),"_hardMode")
         iffalse ofs17
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hardMode"
         pushstring ">true</hardMode>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs17:
         getlocal0
         getproperty QName(PackageNamespace(""),"_insaneMode")
         iffalse ofs18
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<insaneMode"
         pushstring ">true</insaneMode>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs18:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 0
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         iffalse ofs19
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWeaponZero"
         pushstring ">true</hasWeaponZero>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs19:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         iffalse ofs20
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWeaponOne"
         pushstring ">true</hasWeaponOne>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs20:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 2
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         iffalse ofs21
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWeaponTwo"
         pushstring ">true</hasWeaponTwo>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs21:
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<gameTime"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</gameTime>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<helixFragments"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</helixFragments>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"hasSeenIsis")
         iffalse ofs22
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasSeenIsis"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"hasSeenIsis")
         esc_xelem
         add
         pushstring "</hasSeenIsis>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs22:
         getlocal0
         getproperty QName(PackageNamespace(""),"hasSeenHelp")
         iffalse ofs23
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasSeenHelp"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"hasSeenHelp")
         esc_xelem
         add
         pushstring "</hasSeenHelp>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         ofs23:
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWonGame"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"hasWonGame")
         esc_xelem
         add
         pushstring "</hasWonGame>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWonHardMode"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"hasWonHardMode")
         esc_xelem
         add
         pushstring "</hasWonHardMode>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWonInsaneMode"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"hasWonInsaneMode")
         esc_xelem
         add
         pushstring "</hasWonInsaneMode>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasFullClear"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"hasFullClear")
         esc_xelem
         add
         pushstring "</hasFullClear>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWonBossRush"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"hasWonBossRush")
         esc_xelem
         add
         pushstring "</hasWonBossRush>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bestBossRushTime"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"bestBossRushTime")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</bestBossRushTime>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bestMainTime"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"bestMainTime")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</bestMainTime>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bestHardTime"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"bestHardTime")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</bestHardTime>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bestInsaneTime"
         pushstring ">"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</bestInsaneTime>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<mapKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"MAP_KEY")
         esc_xelem
         add
         pushstring "</mapKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<jumpKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"JUMP_KEY")
         esc_xelem
         add
         pushstring "</jumpKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<shootKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"SHOOT_KEY")
         esc_xelem
         add
         pushstring "</shootKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<strafeKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"STRAFE_KEY")
         esc_xelem
         add
         pushstring "</strafeKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<upKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"UP_KEY")
         esc_xelem
         add
         pushstring "</upKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<downKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"DOWN_KEY")
         esc_xelem
         add
         pushstring "</downKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<leftKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"LEFT_KEY")
         esc_xelem
         add
         pushstring "</leftKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<rightKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"RIGHT_KEY")
         esc_xelem
         add
         pushstring "</rightKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<jumpAltKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"ALT_JUMP_KEY")
         esc_xelem
         add
         pushstring "</jumpAltKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<shootAltKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         esc_xelem
         add
         pushstring "</shootAltKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<strafeAltKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"ALT_STRAFE_KEY")
         esc_xelem
         add
         pushstring "</strafeAltKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<upAltKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"ALT_UP_KEY")
         esc_xelem
         add
         pushstring "</upAltKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<downAltKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"ALT_DOWN_KEY")
         esc_xelem
         add
         pushstring "</downAltKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<leftAltKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"ALT_LEFT_KEY")
         esc_xelem
         add
         pushstring "</leftAltKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<rightAltKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"ALT_RIGHT_KEY")
         esc_xelem
         add
         pushstring "</rightAltKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<weap1Key"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"WEAPON_1_KEY")
         esc_xelem
         add
         pushstring "</weap1Key>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<weap2Key"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"WEAPON_2_KEY")
         esc_xelem
         add
         pushstring "</weap2Key>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<weap3Key"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"WEAPON_3_KEY")
         esc_xelem
         add
         pushstring "</weap3Key>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<weapNextKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"WEAPON_NEXT_KEY")
         esc_xelem
         add
         pushstring "</weapNextKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<weapPrevKey"
         pushstring ">"
         add
         getlex QName(PackageNamespace(""),"WEAPON_PREV_KEY")
         esc_xelem
         add
         pushstring "</weapPrevKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         getproperty QName(PackageNamespace(""),"xml")
         deleteproperty Multiname("vars",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         getproperty QName(PackageNamespace(""),"xml")
         getlocal 4
         setproperty Multiname("vars",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"uniqueBlocks")
         callpropvoid QName(PackageNamespace(""),"saveAll"), 0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         callpropvoid QName(PackageNamespace(""),"saveAll"), 0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         callpropvoid QName(PackageNamespace(""),"saveAll"), 0
         getlocal3
         not
         iffalse ofs24
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"savingText")
         callpropvoid QName(PackageNamespace(""),"setSaved"), 0
         ofs24:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addWeapon(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"addWeapon")
         dispid 0
         method
         name "Player:addWeapon"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "_loc2_", 1, 1164
         getlocal0
         callproperty QName(PackageNamespace(""),"hasAnyWeapon"), 0
         not
         dup
         iffalse ofs0
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         not
         ofs0:
         dup
         iffalse ofs1
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_hardMode")
         not
         ofs1:
         convert_b
         setlocal2
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         getlocal1
         pushtrue
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getlocal1
         ifnlt ofs2
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         ofs2:
         getlocal2
         iffalse ofs3
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"controlHelp")
         callpropvoid QName(PackageNamespace(""),"updateLetterGraphics"), 0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"controlHelp")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"show"), 1
         ofs3:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hasWeapon(param1:int) : Boolean
      {
         trait method QName(PackageNamespace(""),"hasWeapon")
         dispid 0
         method
         name "Player:hasWeapon"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getHasDevastator() : Boolean
      {
         trait method QName(PackageNamespace(""),"getHasDevastator")
         dispid 0
         method
         name "Player:getHasDevastator"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasDevastator")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasArmor() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasArmor")
         dispid 0
         method
         name "Player:hasArmor"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasGravityJump() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasGravityJump")
         dispid 0
         method
         name "Player:hasGravityJump"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasHighJump() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasHighJump")
         dispid 0
         method
         name "Player:hasHighJump"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasHighJump")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function addTurbo() : void
      {
         trait method QName(PackageNamespace(""),"addTurbo")
         dispid 0
         method
         name "Player:addTurbo"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         pushtrue
         callpropvoid QName(PrivateNamespace(":Player"),"setHasTurbo"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addDevastator() : void
      {
         trait method QName(PackageNamespace(""),"addDevastator")
         dispid 0
         method
         name "Player:addDevastator"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setHasDevastator"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addGravityJump() : void
      {
         trait method QName(PackageNamespace(""),"addGravityJump")
         dispid 0
         method
         name "Player:addGravityJump"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasColdFoot")
         getproperty QName(PackageNamespace(""),"value")
         ofs0:
         iffalse ofs1
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_ALL")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs3
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasColdFoot")
         getproperty QName(PackageNamespace(""),"value")
         not
         ofs3:
         iffalse ofs4
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_GRAVMETAL")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         jump ofs2
         ofs4:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         not
         dup
         iffalse ofs5
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasColdFoot")
         getproperty QName(PackageNamespace(""),"value")
         ofs5:
         iffalse ofs6
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_ICEGRAV")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         jump ofs2
         ofs6:
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_GRAVITY")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addColdFoot() : void
      {
         trait method QName(PackageNamespace(""),"addColdFoot")
         dispid 0
         method
         name "Player:addColdFoot"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         ofs0:
         iffalse ofs1
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_ALL")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs3
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         not
         ofs3:
         iffalse ofs4
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_ICEGRAV")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         jump ofs2
         ofs4:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         dup
         iffalse ofs5
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         ofs5:
         iffalse ofs6
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_ICEMETAL")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         jump ofs2
         ofs6:
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_ICE")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addHighJump() : void
      {
         trait method QName(PackageNamespace(""),"addHighJump")
         dispid 0
         method
         name "Player:addHighJump"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setHighJump"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setHasDevastator(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setHasDevastator")
         dispid 0
         method
         name "Player:setHasDevastator"
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasDevastator")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setHelixFragments(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setHelixFragments")
         dispid 0
         method
         name "Player:setHelixFragments"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_helixFragments")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace(""),"MAX_HELIX_FRAGMENTS")
         ifngt ofs0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_helixFragments")
         getlex QName(PackageNamespace(""),"MAX_HELIX_FRAGMENTS")
         setproperty QName(PackageNamespace(""),"value")
         ofs0:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         iffalse ofs1
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         ifne ofs2
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         getproperty QName(PackageNamespace(""),"subscreen")
         getproperty QName(PackageNamespace(""),"helixSprite")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         getproperty QName(PackageNamespace(""),"subscreen")
         getproperty QName(PackageNamespace(""),"helixText")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         getproperty QName(PackageNamespace(""),"subscreen")
         getproperty QName(PackageNamespace(""),"helixText")
         pushstring "x "
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         setproperty QName(PackageNamespace(""),"text")
         jump ofs1
         ofs2:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         getproperty QName(PackageNamespace(""),"subscreen")
         getproperty QName(PackageNamespace(""),"helixSprite")
         pushtrue
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         getproperty QName(PackageNamespace(""),"subscreen")
         getproperty QName(PackageNamespace(""),"helixText")
         pushtrue
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         getproperty QName(PackageNamespace(""),"subscreen")
         getproperty QName(PackageNamespace(""),"helixText")
         pushstring "x "
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         callproperty Multiname("toString",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")]), 0
         add
         setproperty QName(PackageNamespace(""),"text")
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getHelixFragments() : int
      {
         trait method QName(PackageNamespace(""),"getHelixFragments")
         dispid 0
         method
         name "Player:getHelixFragments"
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getHasShellShield() : Boolean
      {
         trait method QName(PackageNamespace(""),"getHasShellShield")
         dispid 0
         method
         name "Player:getHasShellShield"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasShellShield")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setHasShellShield(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setHasShellShield")
         dispid 0
         method
         name "Player:setHasShellShield"
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasShellShield")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addShellShield() : void
      {
         trait method QName(PackageNamespace(""),"addShellShield")
         dispid 0
         method
         name "Player:addShellShield"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         not
         iffalse ofs0
         getlocal0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setHasShellShield"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setEasyMode(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setEasyMode")
         dispid 0
         method
         name "Player:setEasyMode"
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getlocal1
         setproperty QName(PackageNamespace(""),"_easyMode")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setHardMode(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setHardMode")
         dispid 0
         method
         name "Player:setHardMode"
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getlocal1
         setproperty QName(PackageNamespace(""),"_hardMode")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setInsaneMode(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setInsaneMode")
         dispid 0
         method
         name "Player:setInsaneMode"
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getlocal1
         setproperty QName(PackageNamespace(""),"_insaneMode")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hasGravityShock() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasGravityShock")
         dispid 0
         method
         name "Player:hasGravityShock"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityShock")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setHasGravityShock(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setHasGravityShock")
         dispid 0
         method
         name "Player:setHasGravityShock"
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addGravityShock() : void
      {
         trait method QName(PackageNamespace(""),"addGravityShock")
         dispid 0
         method
         name "Player:addGravityShock"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addHelixFragment() : void
      {
         trait method QName(PackageNamespace(""),"addHelixFragment")
         dispid 0
         method
         name "Player:addHelixFragment"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         increment
         callpropvoid QName(PackageNamespace(""),"setHelixFragments"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getPercentComplete() : int
      {
         trait method QName(PackageNamespace(""),"getPercentComplete")
         dispid 0
         method
         name "Player:getPercentComplete"
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 1348
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 0
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         not
         not
         iffalse ofs0
         pushbyte 1
         jump ofs1
         ofs0:
         pushbyte 0
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         not
         not
         iffalse ofs2
         pushbyte 1
         jump ofs3
         ofs2:
         pushbyte 0
         ofs3:
         add
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasWeapon")
         pushbyte 2
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),PrivateNamespace(":Player"),ProtectedNamespace(":Player"),StaticProtectedNs(":Player"),PrivateNamespace("Player.as$93")])
         not
         not
         iffalse ofs4
         pushbyte 1
         jump ofs5
         ofs4:
         pushbyte 0
         ofs5:
         add
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasDevastator")
         getproperty QName(PackageNamespace(""),"value")
         not
         not
         iffalse ofs6
         pushbyte 1
         jump ofs7
         ofs6:
         pushbyte 0
         ofs7:
         add
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasTurbo")
         getproperty QName(PackageNamespace(""),"value")
         not
         not
         iffalse ofs8
         pushbyte 1
         jump ofs9
         ofs8:
         pushbyte 0
         ofs9:
         add
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasHighJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         not
         iffalse ofs10
         pushbyte 1
         jump ofs11
         ofs10:
         pushbyte 0
         ofs11:
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         divide
         add
         getlex QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
         subtract
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasColdFoot")
         getproperty QName(PackageNamespace(""),"value")
         not
         not
         iffalse ofs12
         pushbyte 1
         jump ofs13
         ofs12:
         pushbyte 0
         ofs13:
         add
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         not
         iffalse ofs14
         pushbyte 1
         jump ofs15
         ofs14:
         pushbyte 0
         ofs15:
         add
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         not
         not
         iffalse ofs16
         pushbyte 1
         jump ofs17
         ofs16:
         pushbyte 0
         ofs17:
         add
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasShellShield")
         getproperty QName(PackageNamespace(""),"value")
         not
         not
         iffalse ofs18
         pushbyte 1
         jump ofs19
         ofs18:
         pushbyte 0
         ofs19:
         add
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         add
         convert_i
         setlocal1
         getlocal1
         pushbyte 100
         multiply
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         not
         not
         iffalse ofs20
         pushbyte 50
         jump ofs21
         ofs20:
         pushbyte 51
         ofs21:
         divide
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function isParalyzed() : Boolean
      {
         trait method QName(PackageNamespace(""),"isParalyzed")
         dispid 0
         method
         name "Player:isParalyzed"
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_paralyzed")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function paralyze(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"paralyze")
         dispid 0
         method
         name "Player:paralyze"
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlocal0
         getlocal1
         setproperty QName(PrivateNamespace(":Player"),"_paralyzed")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addArmor() : void
      {
         trait method QName(PackageNamespace(""),"addArmor")
         dispid 0
         method
         name "Player:addArmor"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasColdFoot")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         ofs0:
         iffalse ofs1
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_ALL")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasColdFoot")
         getproperty QName(PackageNamespace(""),"value")
         dup
         iffalse ofs3
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         ofs3:
         iffalse ofs4
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_ICEMETAL")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         jump ofs2
         ofs4:
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasColdFoot")
         getproperty QName(PackageNamespace(""),"value")
         not
         dup
         iffalse ofs5
         pop
         getlocal0
         getproperty QName(PrivateNamespace(":Player"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         ofs5:
         iffalse ofs6
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_GRAVMETAL")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         jump ofs2
         ofs6:
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_METAL")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
