
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("EnemySnake3",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   newclass #EnemySnake3
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"EnemySnake3")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   import org.flixel.FlxObject;
   
   public class EnemySnake3 extends Enemy
   {
      
      private static const IMG_WIDTH:int = 25;
      
      private static const IMG_HEIGHT:int = 16;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 0;
      
      private static const DEFENSE:int = 10;
      
      private static const OFFENSE:int = 4;
      
      private static const WEAPON_SPEED:Number = 80;
      
      private static const THETA_OFFSET:Array;
      
      private static const SHOT_TIMEOUT:Number = 1.2;
      
      private static const MOVE_TIMEOUT:Array;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 37
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#EnemySnake3"),"IMG_WIDTH")
         pushbyte 25
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"IMG_WIDTH")
         findproperty QName(PrivateNamespace(null,"#EnemySnake3"),"IMG_HEIGHT")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"IMG_HEIGHT")
         findproperty QName(PrivateNamespace(null,"#EnemySnake3"),"IMG_OFS_X")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"IMG_OFS_X")
         findproperty QName(PrivateNamespace(null,"#EnemySnake3"),"IMG_OFS_Y")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"IMG_OFS_Y")
         findproperty QName(PrivateNamespace(null,"#EnemySnake3"),"DEFENSE")
         pushbyte 10
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"DEFENSE")
         findproperty QName(PrivateNamespace(null,"#EnemySnake3"),"OFFENSE")
         pushbyte 4
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"OFFENSE")
         findproperty QName(PrivateNamespace(null,"#EnemySnake3"),"WEAPON_SPEED")
         pushbyte 80
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"WEAPON_SPEED")
         findproperty QName(PrivateNamespace(null,"#EnemySnake3"),"THETA_OFFSET")
         pushbyte 0
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         pushbyte 0
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         pushbyte 2
         divide
         pushbyte 0
         dup
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         negate
         pushbyte 2
         divide
         pushbyte 0
         dup
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         negate
         pushbyte 4
         divide
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         pushbyte 4
         divide
         pushbyte 0
         newarray 12
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"THETA_OFFSET")
         findproperty QName(PrivateNamespace(null,"#EnemySnake3"),"SHOT_TIMEOUT")
         pushdouble 1.2
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"SHOT_TIMEOUT")
         findproperty QName(PrivateNamespace(null,"#EnemySnake3"),"MOVE_TIMEOUT")
         pushdouble 1.2
         pushdouble 1.3
         pushdouble 1.4
         pushdouble 1.1
         pushdouble 1.6
         pushbyte 1
         pushdouble 1.8
         pushdouble 0.9
         pushdouble 1.9
         pushdouble 2.1
         pushdouble 0.9
         pushdouble 1.3
         pushdouble 1.7
         pushdouble 1.4
         pushdouble 2.1
         pushdouble 1.2
         pushdouble 0.9
         pushdouble 0.8
         pushdouble 1.2
         pushdouble 1.3
         pushdouble 1.4
         pushdouble 0.2
         pushdouble 1.6
         pushbyte 1
         pushdouble 1.8
         pushdouble 0.4
         pushdouble 1.9
         pushdouble 2.1
         pushdouble 0.9
         pushdouble 0.7
         pushdouble 1.7
         pushdouble 1.2
         pushdouble 2.3
         pushdouble 1.1
         pushdouble 0.9
         pushdouble 0.8
         newarray 36
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"MOVE_TIMEOUT")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var MAX_HP:int = 450;
      
      private var REACT_DISTANCE:int = 390;
      
      private var X_SPEED:Number = 240;
      
      private var Y_SPEED:Number = 190;
      
      private var moveTimeout:Number = 0;
      
      private var thetaOffsetIndex:int = 0;
      
      private var shotTimeout:Number = 1.2;
      
      private var moveTimeoutIndex:int = 0;
      
      public function EnemySnake3(param1:int, param2:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         convert_b
         dup
         iffalse ofs0
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_easyMode")
         convert_b
         ofs0:
         iffalse ofs1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"MAX_HP")
         pushdouble 0.7
         multiply
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"MAX_HP")
         getlocal0
         pushbyte 120
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"Y_SPEED")
         ofs1:
         getlocal0
         getlocal1
         getlocal2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"MAX_HP")
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"DEFENSE")
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"OFFENSE")
         constructsuper 5
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"EnemySnake3")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         getlocal1
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"IMG_OFS_X")
         subtract
         convert_i
         setlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"IMG_OFS_Y")
         subtract
         convert_i
         setlocal2
         getlocal0
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"x")
         pushbyte 16
         divide
         getlex QName(PackageNamespace(""),"y")
         pushbyte 4
         divide
         add
         callproperty QName(PackageNamespace(""),"int"), 1
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"thetaOffsetIndex")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"thetaOffsetIndex")
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"THETA_OFFSET")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"thetaOffsetIndex")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"x")
         pushbyte 16
         divide
         getlex QName(PackageNamespace(""),"y")
         pushbyte 4
         divide
         add
         callproperty QName(PackageNamespace(""),"int"), 1
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"moveTimeoutIndex")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"moveTimeoutIndex")
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"MOVE_TIMEOUT")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"moveTimeoutIndex")
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"MOVE_TIMEOUT")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"moveTimeoutIndex")
         getproperty MultinameL([PrivateNamespace(null,"#EnemySnake3"),PackageNamespace(""),PrivateNamespace(null,"#EnemySnake3/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemySnake3"),StaticProtectedNs("EnemySnake3"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 4
         divide
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"moveTimeout")
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         pushbyte 0
         pushbyte 1
         newarray 2
         pushbyte 10
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         getlex QName(PackageNamespace(""),"drag")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"X_SPEED")
         pushdouble 0.7
         multiply
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"drag")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"Y_SPEED")
         pushdouble 0.6
         multiply
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"touch"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function shoot(param1:Number) : void
      {
         trait method QName(PackageNamespace(""),"shoot")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 6
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"EnemyBullet")
         setlocal 5
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"WEAPON_SPEED")
         convert_d
         setlocal2
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         callproperty QName(PackageNamespace(""),"cos"), 1
         negate
         getlocal2
         multiply
         convert_d
         setlocal3
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         callproperty QName(PackageNamespace(""),"sin"), 1
         negate
         getlocal2
         multiply
         convert_d
         setlocal 4
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         convert_b
         dup
         iffalse ofs0
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_insaneMode")
         convert_b
         ofs0:
         iffalse ofs1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"enemyBulletPool")
         pushbyte 4
         callproperty QName(PackageNamespace(""),"getBullet"), 1
         coerce QName(PackageNamespace(""),"EnemyBullet")
         dup
         setlocal 5
         iffalse ofs1
         getlocal 5
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         pushbyte 2
         divide
         add
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         pushbyte 2
         divide
         add
         getlocal3
         pushdouble 1.3
         multiply
         getlocal 4
         pushdouble 1.3
         multiply
         callpropvoid QName(PackageNamespace(""),"shoot"), 4
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         findpropstrict QName(PackageNamespace(""),"onScreen")
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         iffalse ofs1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"moveTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"moveTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"moveTimeout")
         pushbyte 0
         lessthan
         dup
         iffalse ofs2
         pop
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         subtract
         callproperty QName(PackageNamespace(""),"abs"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"REACT_DISTANCE")
         lessthan
         ofs2:
         dup
         iffalse ofs3
         pop
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         subtract
         callproperty QName(PackageNamespace(""),"abs"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"REACT_DISTANCE")
         lessthan
         ofs3:
         iffalse ofs1
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         subtract
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         subtract
         callproperty QName(PackageNamespace(""),"atan2"), 2
         convert_d
         setlocal1
         getlocal1
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"THETA_OFFSET")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"thetaOffsetIndex")
         getproperty MultinameL([PrivateNamespace(null,"#EnemySnake3"),PackageNamespace(""),PrivateNamespace(null,"#EnemySnake3/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemySnake3"),StaticProtectedNs("EnemySnake3"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         add
         convert_d
         setlocal1
         getlocal0
         dup
         setlocal2
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"thetaOffsetIndex")
         increment_i
         setlocal3
         getlocal2
         getlocal3
         setproperty QName(PrivateNamespace(null,"#EnemySnake3"),"thetaOffsetIndex")
         kill 3
         kill 2
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"thetaOffsetIndex")
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"THETA_OFFSET")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"thetaOffsetIndex")
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         callproperty QName(PackageNamespace(""),"cos"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"X_SPEED")
         multiply
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         callproperty QName(PackageNamespace(""),"sin"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"Y_SPEED")
         multiply
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         dup
         setlocal2
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"moveTimeout")
         increment
         setlocal3
         getlocal2
         getlocal3
         setproperty QName(PrivateNamespace(null,"#EnemySnake3"),"moveTimeout")
         kill 3
         kill 2
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"moveTimeout")
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"MOVE_TIMEOUT")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"moveTimeout")
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"MOVE_TIMEOUT")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"moveTimeoutIndex")
         getproperty MultinameL([PrivateNamespace(null,"#EnemySnake3"),PackageNamespace(""),PrivateNamespace(null,"#EnemySnake3/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemySnake3"),StaticProtectedNs("EnemySnake3"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"moveTimeout")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"shotTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"shotTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySnake3"),"shotTimeout")
         pushbyte 0
         ifnle ofs1
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySnake3"),"SHOT_TIMEOUT")
         initproperty QName(PrivateNamespace(null,"#EnemySnake3"),"shotTimeout")
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         subtract
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         subtract
         callproperty QName(PackageNamespace(""),"atan2"), 2
         convert_d
         setlocal1
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"shoot"), 1
         ofs1:
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifnlt ofs4
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs4:
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifngt ofs5
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs5:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitTop(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitTop")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte -1
         multiply
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitBottom(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitBottom")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte -1
         multiply
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitSide(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitSide")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte -1
         multiply
         setproperty QName(PackageNamespace(""),"x")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
