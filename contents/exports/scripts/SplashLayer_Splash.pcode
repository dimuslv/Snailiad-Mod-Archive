
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 12
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("SplashLayer_Splash",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"EventDispatcher")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"DisplayObject")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"InteractiveObject")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"Sprite")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"MovieClip")
   pushscope
   getlex QName(PackageNamespace("mx.core"),"FlexMovieClip")
   pushscope
   getlex QName(PackageNamespace("mx.core"),"MovieClipAsset")
   pushscope
   getlex QName(PackageNamespace("mx.core"),"MovieClipLoaderAsset")
   pushscope
   getlex QName(PackageNamespace("mx.core"),"MovieClipLoaderAsset")
   newclass #SplashLayer_Splash
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"SplashLayer_Splash")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import flash.utils.ByteArray;
   import mx.core.MovieClipLoaderAsset;
   
   public class SplashLayer_Splash extends MovieClipLoaderAsset
   {
      
      private static var bytes:ByteArray = null;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 12
         maxscopedepth 13
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#SplashLayer_Splash"),"bytes")
         pushnull
         setproperty QName(PrivateNamespace(null,"#SplashLayer_Splash"),"bytes")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var dataClass:Class;
      
      public function SplashLayer_Splash()
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 13
         maxscopedepth 14
         
         code
         getlocal0
         pushscope
         getlocal0
         getlex QName(PackageNamespace(""),"SplashLayer_Splash_dataClass")
         initproperty QName(PackageNamespace(""),"dataClass")
         getlocal0
         constructsuper 0
         findproperty QName(ProtectedNamespace("mx.core:MovieClipLoaderAsset"),"initialWidth")
         pushshort 14000
         pushbyte 20
         divide
         initproperty QName(ProtectedNamespace("mx.core:MovieClipLoaderAsset"),"initialWidth")
         findproperty QName(ProtectedNamespace("mx.core:MovieClipLoaderAsset"),"initialHeight")
         pushshort 8000
         pushbyte 20
         divide
         initproperty QName(ProtectedNamespace("mx.core:MovieClipLoaderAsset"),"initialHeight")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get movieClipData() : ByteArray
      {
         trait getter QName(PackageNamespace(""),"movieClipData")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.utils"),"ByteArray")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 13
         maxscopedepth 14
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#SplashLayer_Splash"),"bytes")
         pushnull
         ifne ofs0
         findproperty QName(PrivateNamespace(null,"#SplashLayer_Splash"),"bytes")
         findpropstrict QName(PackageNamespace("flash.utils"),"ByteArray")
         getlocal0
         constructprop QName(PackageNamespace(""),"dataClass"), 0
         callproperty QName(PackageNamespace("flash.utils"),"ByteArray"), 1
         setproperty QName(PrivateNamespace(null,"#SplashLayer_Splash"),"bytes")
         ofs0:
         getlex QName(PrivateNamespace(null,"#SplashLayer_Splash"),"bytes")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
