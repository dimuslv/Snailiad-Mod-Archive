
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("EnemyBirdGenerator",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   newclass #EnemyBirdGenerator
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"EnemyBirdGenerator")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   import org.flixel.FlxU;
   
   public class EnemyBirdGenerator extends Enemy
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private const TIMEOUTS:Array;
      
      private const BASE_TIMEOUT:Number = 7.0;
      
      private var timeout:Number = 0;
      
      private var listPos:int = 0;
      
      public function EnemyBirdGenerator(param1:int, param2:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 61
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         pushdouble 0.60153
         pushdouble 0.48509
         pushdouble 0.70037
         pushdouble 0.66276
         pushdouble 0.70802
         pushdouble 0.79541
         pushdouble 0.62043
         pushdouble 0.5796
         pushdouble 0.99605
         pushdouble 0.15058
         pushdouble 0.72121
         pushdouble 0.86851
         pushdouble 0.64371
         pushdouble 0.76708
         pushdouble 0.89401
         pushdouble 0.52828
         pushdouble 0.72309
         pushdouble 0.15963
         pushdouble 0.15116
         pushdouble 0.1799
         pushdouble 0.27829
         pushdouble 0.40878
         pushdouble 0.92538
         pushdouble 0.45074
         pushdouble 0.18865
         pushdouble 0.59797
         pushdouble 0.4318
         pushdouble 0.94098
         pushdouble 0.23463
         pushdouble 0.29221
         pushdouble 0.59734
         pushdouble 0.34877
         pushdouble 0.81676
         pushdouble 0.57617
         pushdouble 0.14883
         pushdouble 0.16094
         pushdouble 0.14123
         pushdouble 0.57931
         pushdouble 0.85924
         pushdouble 0.22828
         pushdouble 0.63834
         pushdouble 0.10387
         pushdouble 0.54746
         pushdouble 0.24897
         pushdouble 0.11105
         pushdouble 0.49748
         pushdouble 0.54746
         pushdouble 0.19405
         pushdouble 0.79792
         pushdouble 0.36023
         pushdouble 0.53726
         pushdouble 0.78544
         pushdouble 0.60425
         pushdouble 0.83512
         pushdouble 0.01696
         pushdouble 0.10451
         pushdouble 0.01513
         pushdouble 0.78678
         pushdouble 0.51617
         pushdouble 0.24251
         newarray 60
         initproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"TIMEOUTS")
         getlocal0
         getlocal1
         getlocal2
         pushshort 9999
         pushbyte 0
         dup
         constructsuper 5
         findproperty QName(PackageNamespace(""),"solid")
         pushfalse
         initproperty QName(PackageNamespace(""),"solid")
         findproperty QName(PackageNamespace(""),"visible")
         pushfalse
         initproperty QName(PackageNamespace(""),"visible")
         getlocal0
         getlex QName(PackageNamespace(""),"Math")
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal1
         pushbyte 23
         multiply
         getlocal2
         pushbyte 17
         multiply
         subtract
         callproperty QName(PackageNamespace(""),"int"), 1
         callproperty QName(PackageNamespace(""),"abs"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"TIMEOUTS")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"listPos")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"TIMEOUTS")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"listPos")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBirdGenerator"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBirdGenerator/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBirdGenerator"),StaticProtectedNs("EnemyBirdGenerator"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"BASE_TIMEOUT")
         multiply
         initproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"timeout")
         findproperty QName(PackageNamespace(""),"active")
         pushtrue
         initproperty QName(PackageNamespace(""),"active")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function collideTerrain() : Boolean
      {
         trait method QName(PackageNamespace(""),"collideTerrain")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"touch"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal1
         pushnan
         setlocal2
         pushnull
         coerce QName(PackageNamespace(""),"Enemy")
         setlocal3
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"timeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"timeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"timeout")
         pushbyte 0
         ifnlt ofs1
         getlocal0
         dup
         setlocal 4
         getproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"listPos")
         increment_i
         setlocal 5
         getlocal 4
         getlocal 5
         setproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"listPos")
         kill 5
         kill 4
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"listPos")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"TIMEOUTS")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"listPos")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"TIMEOUTS")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"listPos")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBirdGenerator"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBirdGenerator/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBirdGenerator"),StaticProtectedNs("EnemyBirdGenerator"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"BASE_TIMEOUT")
         multiply
         initproperty QName(PrivateNamespace(null,"#EnemyBirdGenerator"),"timeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         callproperty QName(PackageNamespace(""),"random"), 0
         pushdouble 0.5
         ifngt ofs2
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"scroll")
         getproperty QName(PackageNamespace(""),"x")
         negate
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"width")
         add
         pushbyte 8
         subtract
         convert_d
         jump ofs3
         ofs2:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"scroll")
         getproperty QName(PackageNamespace(""),"x")
         negate
         pushbyte 8
         subtract
         convert_d
         ofs3:
         convert_d
         setlocal1
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlocal1
         subtract
         callproperty QName(PackageNamespace(""),"abs"), 1
         pushbyte 75
         ifnlt ofs4
         returnvoid
         ofs4:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"scroll")
         getproperty QName(PackageNamespace(""),"y")
         negate
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         callproperty QName(PackageNamespace(""),"random"), 0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"height")
         multiply
         add
         convert_d
         setlocal2
         findpropstrict QName(PackageNamespace(""),"EnemyBird")
         getlocal1
         getlocal2
         constructprop QName(PackageNamespace(""),"EnemyBird"), 2
         coerce QName(PackageNamespace(""),"Enemy")
         setlocal3
         getlocal3
         callproperty QName(PackageNamespace(""),"collideTerrain"), 0
         iffalse ofs5
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"enemies")
         getlocal3
         callpropvoid QName(PackageNamespace(""),"add"), 1
         jump ofs6
         ofs5:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"enemiesNoCollide")
         getlocal3
         callpropvoid QName(PackageNamespace(""),"add"), 1
         ofs6:
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playChirp"), 0
         ofs1:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hurt(param1:Number) : void
      {
         trait method QName(PackageNamespace(""),"hurt")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"hurt"), 1
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "quiver"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
