
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("FlxMonitor",[PackageNamespace("org.flixel")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #FlxMonitor
   popscope
   initproperty QName(PackageNamespace("org.flixel"),"FlxMonitor")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package org.flixel
{
   public class FlxMonitor
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected var _size:uint;
      
      protected var _itr:uint;
      
      protected var _data:Array;
      
      public function FlxMonitor(param1:uint, param2:Number = 0)
      {
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"Number")
         optional Integer(0)
         returns null
         
         body
         maxstack 3
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         getlocal0
         getlocal1
         initproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_size")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_size")
         pushbyte 0
         ifnle ofs0
         getlocal0
         pushbyte 1
         initproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_size")
         ofs0:
         getlocal0
         pushbyte 0
         initproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_itr")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Array")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_size")
         constructprop QName(PackageNamespace(""),"Array"), 1
         initproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_data")
         pushbyte 0
         convert_u
         setlocal3
         jump ofs1
         ofs2:
         label
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_data")
         getlocal3
         convert_d
         dup
         increment
         convert_u
         setlocal3
         dup
         setlocal 4
         getlocal2
         setproperty MultinameL([PrivateNamespace(null,"#FlxMonitor/1"),ProtectedNamespace("org.flixel:FlxMonitor"),PackageNamespace(""),PrivateNamespace(null,"#FlxMonitor/2"),PackageNamespace("org.flixel"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("org.flixel:FlxMonitor"),StaticProtectedNs("Object")])
         kill 4
         ofs1:
         getlocal3
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_size")
         iflt ofs2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function add(param1:Number) : void
      {
         trait method QName(PackageNamespace(""),"add")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_data")
         getlocal0
         dup
         setlocal3
         getproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_itr")
         convert_d
         dup
         increment
         setlocal 4
         getlocal3
         getlocal 4
         setproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_itr")
         kill 4
         kill 3
         setlocal2
         getlocal2
         getlocal1
         setproperty MultinameL([PrivateNamespace(null,"#FlxMonitor/1"),ProtectedNamespace("org.flixel:FlxMonitor"),PackageNamespace(""),PrivateNamespace(null,"#FlxMonitor/2"),PackageNamespace("org.flixel"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("org.flixel:FlxMonitor"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_itr")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_size")
         ifnge ofs0
         getlocal0
         pushbyte 0
         initproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_itr")
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function average() : Number
      {
         trait method QName(PackageNamespace(""),"average")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_d
         setlocal1
         pushbyte 0
         convert_u
         setlocal2
         jump ofs0
         ofs1:
         label
         getlocal1
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_data")
         getlocal2
         convert_d
         dup
         increment
         convert_u
         setlocal2
         getproperty MultinameL([PrivateNamespace(null,"#FlxMonitor/1"),ProtectedNamespace("org.flixel:FlxMonitor"),PackageNamespace(""),PrivateNamespace(null,"#FlxMonitor/2"),PackageNamespace("org.flixel"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("org.flixel:FlxMonitor"),StaticProtectedNs("Object")])
         add
         convert_d
         setlocal1
         ofs0:
         getlocal2
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_size")
         iflt ofs1
         getlocal1
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxMonitor"),"_size")
         divide
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
