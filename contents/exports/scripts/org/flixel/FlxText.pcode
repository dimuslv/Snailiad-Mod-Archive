
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 7
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("FlxText",[PackageNamespace("org.flixel")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   newclass #FlxText
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace("org.flixel"),"FlxText")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package org.flixel
{
   import flash.display.BitmapData;
   import flash.text.TextField;
   import flash.text.TextFormat;
   
   public class FlxText extends FlxSprite
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected var _tf:TextField;
      
      protected var _regen:Boolean;
      
      protected var _outline:Boolean;
      
      protected var _outlineColor:uint;
      
      protected var _shadow:uint;
      
      protected var _shadowDistance:uint;
      
      public function FlxText(param1:Number, param2:Number, param3:uint, param4:String = null, param5:Boolean = true)
      {
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         optional Null()
         optional True()
         returns null
         
         body
         maxstack 4
         localcount 7
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         constructsuper 2
         findpropstrict QName(PackageNamespace(""),"createGraphic")
         getlocal3
         pushbyte 1
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"createGraphic"), 3
         getlocal 4
         pushnull
         ifne ofs0
         pushstring ""
         setlocal 4
         ofs0:
         getlocal0
         findpropstrict QName(PackageNamespace("flash.text"),"TextField")
         constructprop QName(PackageNamespace("flash.text"),"TextField"), 0
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal3
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal 5
         setproperty QName(PackageNamespace(""),"embedFonts")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         pushfalse
         setproperty QName(PackageNamespace(""),"selectable")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         pushbyte 100
         setproperty QName(PackageNamespace(""),"sharpness")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         pushtrue
         setproperty QName(PackageNamespace(""),"multiline")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         pushtrue
         setproperty QName(PackageNamespace(""),"wordWrap")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal 4
         setproperty QName(PackageNamespace(""),"text")
         findpropstrict QName(PackageNamespace("flash.text"),"TextFormat")
         pushstring "system"
         pushbyte 8
         pushint 16777215
         constructprop QName(PackageNamespace("flash.text"),"TextFormat"), 3
         coerce QName(PackageNamespace("flash.text"),"TextFormat")
         setlocal 6
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal 6
         setproperty QName(PackageNamespace(""),"defaultTextFormat")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"setTextFormat"), 1
         getlocal 4
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         ifnle ofs1
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         pushbyte 1
         setproperty QName(PackageNamespace(""),"height")
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         pushbyte 10
         setproperty QName(PackageNamespace(""),"height")
         ofs2:
         getlocal0
         pushtrue
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_regen")
         getlocal0
         pushbyte 0
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_shadow")
         getlocal0
         pushbyte 1
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_shadowDistance")
         findproperty QName(PackageNamespace(""),"solid")
         pushfalse
         initproperty QName(PackageNamespace(""),"solid")
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxText"),"calcFrame"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setFormat(param1:String = null, param2:Number = 8, param3:uint = 16777215, param4:String = null, param5:uint = 0) : FlxText
      {
         trait method QName(PackageNamespace(""),"setFormat")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"uint")
         optional Null()
         optional Integer(8)
         optional Integer(16777215)
         optional Null()
         optional Integer(0)
         returns QName(PackageNamespace("org.flixel"),"FlxText")
         
         body
         maxstack 2
         localcount 7
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal1
         pushnull
         ifne ofs0
         pushstring ""
         setlocal1
         ofs0:
         getlocal0
         callproperty QName(ProtectedNamespace("org.flixel:FlxText"),"dtfCopy"), 0
         coerce QName(PackageNamespace("flash.text"),"TextFormat")
         dup
         setlocal 6
         getlocal1
         setproperty QName(PackageNamespace(""),"font")
         getlocal 6
         getlocal2
         setproperty QName(PackageNamespace(""),"size")
         getlocal 6
         getlocal3
         setproperty QName(PackageNamespace(""),"color")
         getlocal 6
         getlocal 4
         setproperty QName(PackageNamespace(""),"align")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal 6
         setproperty QName(PackageNamespace(""),"defaultTextFormat")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"setTextFormat"), 1
         getlocal0
         getlocal 5
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_shadow")
         getlocal0
         pushtrue
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_regen")
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxText"),"calcFrame"), 0
         getlocal0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setShadowDistance(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setShadowDistance")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_shadowDistance")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get text() : String
      {
         trait getter QName(PackageNamespace(""),"text")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"text")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get realWidth() : int
      {
         trait getter QName(PackageNamespace(""),"realWidth")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"textWidth")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get realHeight() : int
      {
         trait getter QName(PackageNamespace(""),"realHeight")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"textHeight")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set text(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"text")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"text")
         coerce_s
         setlocal2
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal1
         setproperty QName(PackageNamespace(""),"text")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"text")
         getlocal2
         ifeq ofs0
         getlocal0
         pushtrue
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_regen")
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxText"),"calcFrame"), 0
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function set outline(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"outline")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_outline")
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxText"),"calcFrame"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get outline() : Boolean
      {
         trait getter QName(PackageNamespace(""),"outline")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_outline")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get size() : Number
      {
         trait getter QName(PackageNamespace(""),"size")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"defaultTextFormat")
         getproperty QName(PackageNamespace(""),"size")
         getlex QName(PackageNamespace(""),"Number")
         astypelate
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set size(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"size")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         callproperty QName(ProtectedNamespace("org.flixel:FlxText"),"dtfCopy"), 0
         coerce QName(PackageNamespace("flash.text"),"TextFormat")
         setlocal2
         getlocal2
         getlocal1
         setproperty QName(PackageNamespace(""),"size")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal2
         setproperty QName(PackageNamespace(""),"defaultTextFormat")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal2
         callpropvoid QName(PackageNamespace(""),"setTextFormat"), 1
         getlocal0
         pushtrue
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_regen")
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxText"),"calcFrame"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get color() : uint
      {
         trait getter QName(PackageNamespace(""),"color")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"defaultTextFormat")
         getproperty QName(PackageNamespace(""),"color")
         getlex QName(PackageNamespace(""),"uint")
         astypelate
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set color(param1:uint) : void
      {
         trait setter QName(PackageNamespace(""),"color")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         callproperty QName(ProtectedNamespace("org.flixel:FlxText"),"dtfCopy"), 0
         coerce QName(PackageNamespace("flash.text"),"TextFormat")
         setlocal2
         getlocal2
         getlocal1
         setproperty QName(PackageNamespace(""),"color")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal2
         setproperty QName(PackageNamespace(""),"defaultTextFormat")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal2
         callpropvoid QName(PackageNamespace(""),"setTextFormat"), 1
         getlocal0
         pushtrue
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_regen")
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxText"),"calcFrame"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get font() : String
      {
         trait getter QName(PackageNamespace(""),"font")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"defaultTextFormat")
         getproperty QName(PackageNamespace(""),"font")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set font(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"font")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         callproperty QName(ProtectedNamespace("org.flixel:FlxText"),"dtfCopy"), 0
         coerce QName(PackageNamespace("flash.text"),"TextFormat")
         setlocal2
         getlocal2
         getlocal1
         setproperty QName(PackageNamespace(""),"font")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal2
         setproperty QName(PackageNamespace(""),"defaultTextFormat")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal2
         callpropvoid QName(PackageNamespace(""),"setTextFormat"), 1
         getlocal0
         pushtrue
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_regen")
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxText"),"calcFrame"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get alignment() : String
      {
         trait getter QName(PackageNamespace(""),"alignment")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"defaultTextFormat")
         getproperty QName(PackageNamespace(""),"align")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set alignment(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"alignment")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         callproperty QName(ProtectedNamespace("org.flixel:FlxText"),"dtfCopy"), 0
         coerce QName(PackageNamespace("flash.text"),"TextFormat")
         setlocal2
         getlocal2
         getlocal1
         setproperty QName(PackageNamespace(""),"align")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal2
         setproperty QName(PackageNamespace(""),"defaultTextFormat")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal2
         callpropvoid QName(PackageNamespace(""),"setTextFormat"), 1
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxText"),"calcFrame"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get shadow() : uint
      {
         trait getter QName(PackageNamespace(""),"shadow")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_shadow")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get outlineColor() : uint
      {
         trait getter QName(PackageNamespace(""),"outlineColor")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_outlineColor")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set outlineColor(param1:uint) : void
      {
         trait setter QName(PackageNamespace(""),"outlineColor")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_outlineColor")
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxText"),"calcFrame"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function set shadow(param1:uint) : void
      {
         trait setter QName(PackageNamespace(""),"shadow")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_shadow")
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxText"),"calcFrame"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override protected function calcFrame() : void
      {
         trait method QName(ProtectedNamespace("org.flixel:FlxText"),"calcFrame")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 11
         localcount 5
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_u
         setlocal1
         pushbyte 0
         convert_u
         setlocal2
         pushnull
         coerce QName(PackageNamespace("flash.text"),"TextFormat")
         setlocal3
         pushnull
         coerce QName(PackageNamespace("flash.text"),"TextFormat")
         setlocal 4
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_regen")
         iffalse ofs0
         pushbyte 0
         convert_u
         setlocal1
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"numLines")
         convert_u
         setlocal2
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 0
         initproperty QName(PackageNamespace(""),"height")
         jump ofs1
         ofs2:
         label
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"height")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal1
         convert_d
         dup
         increment
         convert_u
         setlocal1
         callproperty QName(PackageNamespace(""),"getLineMetrics"), 1
         getproperty QName(PackageNamespace(""),"height")
         add
         initproperty QName(PackageNamespace(""),"height")
         ofs1:
         getlocal1
         getlocal2
         iflt ofs2
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"height")
         pushbyte 4
         add
         initproperty QName(PackageNamespace(""),"height")
         findproperty QName(ProtectedNamespace("org.flixel:FlxSprite"),"_pixels")
         findpropstrict QName(PackageNamespace("flash.display"),"BitmapData")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         pushtrue
         pushbyte 0
         constructprop QName(PackageNamespace("flash.display"),"BitmapData"), 4
         initproperty QName(ProtectedNamespace("org.flixel:FlxSprite"),"_pixels")
         findproperty QName(ProtectedNamespace("org.flixel:FlxSprite"),"_bbb")
         findpropstrict QName(PackageNamespace("flash.display"),"BitmapData")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         pushtrue
         pushbyte 0
         constructprop QName(PackageNamespace("flash.display"),"BitmapData"), 4
         initproperty QName(ProtectedNamespace("org.flixel:FlxSprite"),"_bbb")
         findproperty QName(PackageNamespace(""),"frameHeight")
         getlex QName(PackageNamespace(""),"height")
         initproperty QName(PackageNamespace(""),"frameHeight")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlex QName(PackageNamespace(""),"height")
         pushdouble 1.2
         multiply
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_flashRect")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_flashRect")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_flashRect")
         getlex QName(PackageNamespace(""),"width")
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_flashRect")
         getlex QName(PackageNamespace(""),"height")
         setproperty QName(PackageNamespace(""),"height")
         getlocal0
         pushfalse
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_regen")
         jump ofs3
         ofs0:
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_pixels")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_flashRect")
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"fillRect"), 2
         ofs3:
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         pushnull
         equals
         not
         dup
         iffalse ofs4
         pop
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"text")
         pushnull
         equals
         not
         ofs4:
         dup
         iffalse ofs5
         pop
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"text")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         ofs5:
         iffalse ofs6
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"defaultTextFormat")
         coerce QName(PackageNamespace("flash.text"),"TextFormat")
         setlocal3
         getlocal3
         coerce QName(PackageNamespace("flash.text"),"TextFormat")
         setlocal 4
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         callpropvoid QName(PackageNamespace(""),"identity"), 0
         getlocal3
         getproperty QName(PackageNamespace(""),"align")
         pushstring "center"
         equals
         dup
         iffalse ofs7
         pop
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"numLines")
         pushbyte 1
         equals
         ofs7:
         iffalse ofs8
         findpropstrict QName(PackageNamespace("flash.text"),"TextFormat")
         getlocal3
         getproperty QName(PackageNamespace(""),"font")
         getlocal3
         getproperty QName(PackageNamespace(""),"size")
         getlocal3
         getproperty QName(PackageNamespace(""),"color")
         pushnull
         pushnull
         pushnull
         pushnull
         pushnull
         pushstring "left"
         constructprop QName(PackageNamespace("flash.text"),"TextFormat"), 9
         coerce QName(PackageNamespace("flash.text"),"TextFormat")
         setlocal 4
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlocal 4
         callpropvoid QName(PackageNamespace(""),"setTextFormat"), 1
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"getLineMetrics"), 1
         getproperty QName(PackageNamespace(""),"width")
         subtract
         pushbyte 2
         divide
         callproperty QName(PackageNamespace(""),"floor"), 1
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"translate"), 2
         ofs8:
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_outline")
         iffalse ofs9
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         findpropstrict QName(PackageNamespace("flash.text"),"TextFormat")
         getlocal 4
         getproperty QName(PackageNamespace(""),"font")
         getlocal 4
         getproperty QName(PackageNamespace(""),"size")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_outlineColor")
         pushnull
         pushnull
         pushnull
         pushnull
         pushnull
         getlocal 4
         getproperty QName(PackageNamespace(""),"align")
         constructprop QName(PackageNamespace("flash.text"),"TextFormat"), 9
         callpropvoid QName(PackageNamespace(""),"setTextFormat"), 1
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         pushbyte 1
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"translate"), 2
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_pixels")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_ct")
         callpropvoid QName(PackageNamespace(""),"draw"), 3
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         pushbyte -2
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"translate"), 2
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_pixels")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_ct")
         callpropvoid QName(PackageNamespace(""),"draw"), 3
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         pushbyte 1
         dup
         callpropvoid QName(PackageNamespace(""),"translate"), 2
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_pixels")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_ct")
         callpropvoid QName(PackageNamespace(""),"draw"), 3
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         pushbyte 0
         pushbyte -2
         callpropvoid QName(PackageNamespace(""),"translate"), 2
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_pixels")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_ct")
         callpropvoid QName(PackageNamespace(""),"draw"), 3
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         pushbyte 0
         pushbyte 1
         callpropvoid QName(PackageNamespace(""),"translate"), 2
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         findpropstrict QName(PackageNamespace("flash.text"),"TextFormat")
         getlocal 4
         getproperty QName(PackageNamespace(""),"font")
         getlocal 4
         getproperty QName(PackageNamespace(""),"size")
         getlocal 4
         getproperty QName(PackageNamespace(""),"color")
         pushnull
         pushnull
         pushnull
         pushnull
         pushnull
         getlocal 4
         getproperty QName(PackageNamespace(""),"align")
         constructprop QName(PackageNamespace("flash.text"),"TextFormat"), 9
         callpropvoid QName(PackageNamespace(""),"setTextFormat"), 1
         ofs9:
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_shadow")
         pushbyte 0
         ifngt ofs10
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         findpropstrict QName(PackageNamespace("flash.text"),"TextFormat")
         getlocal 4
         getproperty QName(PackageNamespace(""),"font")
         getlocal 4
         getproperty QName(PackageNamespace(""),"size")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_shadow")
         pushnull
         pushnull
         pushnull
         pushnull
         pushnull
         getlocal 4
         getproperty QName(PackageNamespace(""),"align")
         constructprop QName(PackageNamespace("flash.text"),"TextFormat"), 9
         callpropvoid QName(PackageNamespace(""),"setTextFormat"), 1
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_shadowDistance")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_shadowDistance")
         callpropvoid QName(PackageNamespace(""),"translate"), 2
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_pixels")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_ct")
         callpropvoid QName(PackageNamespace(""),"draw"), 3
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_shadowDistance")
         negate
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_shadowDistance")
         negate
         callpropvoid QName(PackageNamespace(""),"translate"), 2
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         findpropstrict QName(PackageNamespace("flash.text"),"TextFormat")
         getlocal 4
         getproperty QName(PackageNamespace(""),"font")
         getlocal 4
         getproperty QName(PackageNamespace(""),"size")
         getlocal 4
         getproperty QName(PackageNamespace(""),"color")
         pushnull
         pushnull
         pushnull
         pushnull
         pushnull
         getlocal 4
         getproperty QName(PackageNamespace(""),"align")
         constructprop QName(PackageNamespace("flash.text"),"TextFormat"), 9
         callpropvoid QName(PackageNamespace(""),"setTextFormat"), 1
         ofs10:
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_pixels")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_mtx")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_ct")
         callpropvoid QName(PackageNamespace(""),"draw"), 3
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         findpropstrict QName(PackageNamespace("flash.text"),"TextFormat")
         getlocal3
         getproperty QName(PackageNamespace(""),"font")
         getlocal3
         getproperty QName(PackageNamespace(""),"size")
         getlocal3
         getproperty QName(PackageNamespace(""),"color")
         pushnull
         pushnull
         pushnull
         pushnull
         pushnull
         getlocal3
         getproperty QName(PackageNamespace(""),"align")
         constructprop QName(PackageNamespace("flash.text"),"TextFormat"), 9
         callpropvoid QName(PackageNamespace(""),"setTextFormat"), 1
         ofs6:
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_framePixels")
         pushnull
         equals
         dup
         iftrue ofs11
         pop
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_framePixels")
         getproperty QName(PackageNamespace(""),"width")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_pixels")
         getproperty QName(PackageNamespace(""),"width")
         equals
         not
         ofs11:
         dup
         iftrue ofs12
         pop
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_framePixels")
         getproperty QName(PackageNamespace(""),"height")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_pixels")
         getproperty QName(PackageNamespace(""),"height")
         equals
         not
         ofs12:
         iffalse ofs13
         findproperty QName(ProtectedNamespace("org.flixel:FlxSprite"),"_framePixels")
         findpropstrict QName(PackageNamespace("flash.display"),"BitmapData")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_pixels")
         getproperty QName(PackageNamespace(""),"width")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_pixels")
         getproperty QName(PackageNamespace(""),"height")
         pushtrue
         pushbyte 0
         constructprop QName(PackageNamespace("flash.display"),"BitmapData"), 4
         initproperty QName(ProtectedNamespace("org.flixel:FlxSprite"),"_framePixels")
         ofs13:
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_framePixels")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_pixels")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_flashRect")
         getlex QName(ProtectedNamespace("org.flixel:FlxSprite"),"_flashPointZero")
         callpropvoid QName(PackageNamespace(""),"copyPixels"), 3
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"showBounds")
         iffalse ofs14
         findpropstrict QName(ProtectedNamespace("org.flixel:FlxSprite"),"drawBounds")
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxSprite"),"drawBounds"), 0
         ofs14:
         getlex QName(PackageNamespace(""),"solid")
         iffalse ofs15
         findpropstrict QName(PackageNamespace(""),"refreshHulls")
         callpropvoid QName(PackageNamespace(""),"refreshHulls"), 0
         ofs15:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method QName(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         callsupervoid QName(PackageNamespace(""),"destroy"), 0
         getlocal0
         pushnull
         initproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function dtfCopy() : TextFormat
      {
         trait method QName(ProtectedNamespace("org.flixel:FlxText"),"dtfCopy")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.text"),"TextFormat")
         
         body
         maxstack 10
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxText"),"_tf")
         getproperty QName(PackageNamespace(""),"defaultTextFormat")
         coerce QName(PackageNamespace("flash.text"),"TextFormat")
         setlocal1
         findpropstrict QName(PackageNamespace("flash.text"),"TextFormat")
         getlocal1
         getproperty QName(PackageNamespace(""),"font")
         getlocal1
         getproperty QName(PackageNamespace(""),"size")
         getlocal1
         getproperty QName(PackageNamespace(""),"color")
         getlocal1
         getproperty QName(PackageNamespace(""),"bold")
         getlocal1
         getproperty QName(PackageNamespace(""),"italic")
         getlocal1
         getproperty QName(PackageNamespace(""),"underline")
         getlocal1
         getproperty QName(PackageNamespace(""),"url")
         getlocal1
         getproperty QName(PackageNamespace(""),"target")
         getlocal1
         getproperty QName(PackageNamespace(""),"align")
         constructprop QName(PackageNamespace("flash.text"),"TextFormat"), 9
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
