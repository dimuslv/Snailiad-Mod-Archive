
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("FlxMouse",[PackageNamespace("org.flixel.data")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #FlxMouse
   popscope
   initproperty QName(PackageNamespace("org.flixel.data"),"FlxMouse")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package org.flixel.data
{
   import flash.events.MouseEvent;
   import org.flixel.FlxSprite;
   import org.flixel.FlxU;
   
   public class FlxMouse
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected var ImgDefaultCursor:Class;
      
      public var _justMoved:Boolean;
      
      public var x:int;
      
      public var y:int;
      
      public var wheel:int;
      
      public var screenX:int;
      
      public var screenY:int;
      
      public var cursor:FlxSprite;
      
      protected var _current:int;
      
      protected var _last:int;
      
      protected var _out:Boolean;
      
      public function FlxMouse()
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getlex QName(PackageNamespace("org.flixel.data"),"FlxMouse_ImgDefaultCursor")
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"ImgDefaultCursor")
         getlocal0
         constructsuper 0
         getlocal0
         pushbyte 0
         initproperty QName(PackageNamespace(""),"x")
         getlocal0
         pushbyte 0
         initproperty QName(PackageNamespace(""),"y")
         getlocal0
         pushbyte 0
         initproperty QName(PackageNamespace(""),"screenX")
         getlocal0
         pushbyte 0
         initproperty QName(PackageNamespace(""),"screenY")
         getlocal0
         pushbyte 0
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         getlocal0
         pushbyte 0
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_last")
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"cursor")
         getlocal0
         pushfalse
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_out")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function show(param1:Class = null, param2:int = 0, param3:int = 0) : void
      {
         trait method QName(PackageNamespace(""),"show")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Class")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         optional Null()
         optional Integer(0)
         optional Integer(0)
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         pushtrue
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_out")
         getlocal1
         pushnull
         ifeq ofs0
         getlocal0
         getlocal1
         getlocal2
         getlocal3
         callpropvoid QName(PackageNamespace(""),"load"), 3
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         pushnull
         ifeq ofs2
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         pushtrue
         setproperty QName(PackageNamespace(""),"visible")
         jump ofs1
         ofs2:
         getlocal0
         pushnull
         callpropvoid QName(PackageNamespace(""),"load"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hide() : void
      {
         trait method QName(PackageNamespace(""),"hide")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         pushnull
         ifeq ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         getlocal0
         pushfalse
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_out")
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function load(param1:Class, param2:int = 0, param3:int = 0) : void
      {
         trait method QName(PackageNamespace(""),"load")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Class")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         optional Integer(0)
         optional Integer(0)
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal1
         pushnull
         ifne ofs0
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"ImgDefaultCursor")
         coerce QName(PackageNamespace(""),"Class")
         setlocal1
         ofs0:
         getlocal0
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxSprite")
         getlocal0
         getproperty QName(PackageNamespace(""),"screenX")
         getlocal0
         getproperty QName(PackageNamespace(""),"screenY")
         getlocal1
         constructprop QName(PackageNamespace("org.flixel"),"FlxSprite"), 3
         initproperty QName(PackageNamespace(""),"cursor")
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         pushfalse
         setproperty QName(PackageNamespace(""),"solid")
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         getproperty QName(PackageNamespace(""),"offset")
         getlocal2
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         getproperty QName(PackageNamespace(""),"offset")
         getlocal3
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function unload() : void
      {
         trait method QName(PackageNamespace(""),"unload")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         pushnull
         ifeq ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         getproperty QName(PackageNamespace(""),"visible")
         iffalse ofs1
         getlocal0
         pushnull
         callpropvoid QName(PackageNamespace(""),"load"), 1
         jump ofs0
         ofs1:
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"cursor")
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function update(param1:int, param2:int, param3:Number, param4:Number) : void
      {
         trait method QName(PackageNamespace(""),"update")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 7
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"screenX")
         convert_i
         setlocal 5
         getlocal0
         getproperty QName(PackageNamespace(""),"screenY")
         convert_i
         setlocal 6
         getlocal0
         getlocal1
         initproperty QName(PackageNamespace(""),"screenX")
         getlocal0
         getlocal2
         initproperty QName(PackageNamespace(""),"screenY")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"screenX")
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlocal3
         callproperty QName(PackageNamespace(""),"floor"), 1
         subtract
         initproperty QName(PackageNamespace(""),"x")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"screenY")
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlocal 4
         callproperty QName(PackageNamespace(""),"floor"), 1
         subtract
         initproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         pushnull
         ifeq ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         getlocal0
         getproperty QName(PackageNamespace(""),"x")
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         getlocal0
         getproperty QName(PackageNamespace(""),"y")
         setproperty QName(PackageNamespace(""),"y")
         ofs0:
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_last")
         pushbyte -1
         equals
         dup
         iffalse ofs1
         pop
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         pushbyte -1
         equals
         ofs1:
         iffalse ofs2
         getlocal0
         pushbyte 0
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         jump ofs3
         ofs2:
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_last")
         pushbyte 2
         equals
         dup
         iffalse ofs4
         pop
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         pushbyte 2
         equals
         ofs4:
         iffalse ofs3
         getlocal0
         pushbyte 1
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         ofs3:
         getlocal0
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_last")
         getlocal0
         getlocal 5
         getlocal0
         getproperty QName(PackageNamespace(""),"screenX")
         equals
         not
         dup
         iftrue ofs5
         pop
         getlocal 6
         getlocal0
         getproperty QName(PackageNamespace(""),"screenY")
         equals
         not
         ofs5:
         initproperty QName(PackageNamespace(""),"_justMoved")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get justMoved() : Boolean
      {
         trait getter QName(PackageNamespace(""),"justMoved")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_justMoved")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function reset() : void
      {
         trait method QName(PackageNamespace(""),"reset")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         pushbyte 0
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         getlocal0
         pushbyte 0
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_last")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function pressed() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressed")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         pushbyte 0
         greaterthan
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function justPressed() : Boolean
      {
         trait method QName(PackageNamespace(""),"justPressed")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         pushbyte 2
         equals
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function justReleased() : Boolean
      {
         trait method QName(PackageNamespace(""),"justReleased")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         pushbyte -1
         equals
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function handleMouseDown(param1:MouseEvent) : void
      {
         trait method QName(PackageNamespace(""),"handleMouseDown")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"MouseEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         pushbyte 0
         ifngt ofs0
         getlocal0
         pushbyte 1
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         jump ofs1
         ofs0:
         getlocal0
         pushbyte 2
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function handleMouseUp(param1:MouseEvent) : void
      {
         trait method QName(PackageNamespace(""),"handleMouseUp")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"MouseEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         pushbyte 0
         ifngt ofs0
         getlocal0
         pushbyte -1
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         jump ofs1
         ofs0:
         getlocal0
         pushbyte 0
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_current")
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function handleMouseOut(param1:MouseEvent) : void
      {
         trait method QName(PackageNamespace(""),"handleMouseOut")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"MouseEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         pushnull
         ifeq ofs0
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         getproperty QName(PackageNamespace(""),"visible")
         initproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_out")
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function handleMouseOver(param1:MouseEvent) : void
      {
         trait method QName(PackageNamespace(""),"handleMouseOver")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"MouseEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         pushnull
         ifeq ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"cursor")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel.data:FlxMouse"),"_out")
         setproperty QName(PackageNamespace(""),"visible")
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function handleMouseWheel(param1:MouseEvent) : void
      {
         trait method QName(PackageNamespace(""),"handleMouseWheel")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"MouseEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getproperty QName(PackageNamespace(""),"delta")
         initproperty QName(PackageNamespace(""),"wheel")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
