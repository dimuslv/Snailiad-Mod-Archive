
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("Step",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace(""),"Item")
   pushscope
   getlex QName(PackageNamespace(""),"Item")
   newclass #Step
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"Step")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   
   public class Step extends Item
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _stepHeight:int = 0;
      
      public function Step(param1:int, param2:int, param3:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         pushfalse
         constructsuper 3
         findproperty QName(PackageNamespace(""),"active")
         pushtrue
         initproperty QName(PackageNamespace(""),"active")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         pushbyte 16
         getlocal3
         subtract
         add
         initproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"visible")
         pushfalse
         initproperty QName(PackageNamespace(""),"visible")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_gravityDir")
         getlex QName(PackageNamespace(""),"Player")
         getproperty QName(PackageNamespace(""),"GRAV_DOWN")
         ifne ofs0
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal1
         getproperty QName(PackageNamespace(""),"height")
         subtract
         ifngt ofs1
         getlocal1
         getlex QName(PackageNamespace(""),"y")
         getlocal1
         getproperty QName(PackageNamespace(""),"height")
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         getproperty QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushfalse
         setproperty QName(PackageNamespace(""),"_jumping")
         getlocal1
         pushtrue
         setproperty QName(PackageNamespace(""),"_justHitSteps")
         ofs1:
         jump ofs2
         ofs0:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_gravityDir")
         getlex QName(PackageNamespace(""),"Player")
         getproperty QName(PackageNamespace(""),"GRAV_RIGHT")
         ifne ofs3
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal1
         getproperty QName(PackageNamespace(""),"height")
         subtract
         ifngt ofs4
         getlocal1
         getlex QName(PackageNamespace(""),"y")
         getlocal1
         getproperty QName(PackageNamespace(""),"height")
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         getproperty QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"Player")
         getproperty QName(PackageNamespace(""),"LEFT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         dup
         iftrue ofs5
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"Player")
         getproperty QName(PackageNamespace(""),"ALT_LEFT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         ofs5:
         iffalse ofs6
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 11
         add
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 11
         subtract
         setproperty QName(PackageNamespace(""),"x")
         getlocal1
         getlex QName(PackageNamespace(""),"Player")
         getproperty QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         getlocal1
         getlex QName(PackageNamespace(""),"left")
         setproperty QName(PackageNamespace(""),"facing")
         ofs6:
         getlocal1
         pushtrue
         setproperty QName(PackageNamespace(""),"_justHitSteps")
         ofs4:
         jump ofs2
         ofs3:
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal1
         getproperty QName(PackageNamespace(""),"height")
         subtract
         ifngt ofs2
         getlocal1
         getlex QName(PackageNamespace(""),"y")
         getlocal1
         getproperty QName(PackageNamespace(""),"height")
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         getproperty QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushtrue
         setproperty QName(PackageNamespace(""),"_justHitSteps")
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
