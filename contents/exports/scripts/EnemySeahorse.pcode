
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("EnemySeahorse",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   newclass #EnemySeahorse
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"EnemySeahorse")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   
   public class EnemySeahorse extends Enemy
   {
      
      private static const IMG_WIDTH:int = 16;
      
      private static const IMG_HEIGHT:int = 32;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 0;
      
      private static const MAX_HP:int = 250;
      
      private static const DEFENSE:int = 10;
      
      private static const OFFENSE:int = 2;
      
      private static const MODE_WAIT:int = 0;
      
      private static const MODE_COS_UP_LEFT:int = 1;
      
      private static const MODE_COS_DOWN_LEFT:int = 2;
      
      private static const MODE_COS_UP_RIGHT:int = 3;
      
      private static const MODE_COS_DOWN_RIGHT:int = 4;
      
      private static const MODE_SEMICIRCLE_LEFT_UP:int = 5;
      
      private static const MODE_SEMICIRCLE_LEFT_DOWN:int = 6;
      
      private static const MODE_SEMICIRCLE_RIGHT_UP:int = 7;
      
      private static const MODE_SEMICIRCLE_RIGHT_DOWN:int = 8;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"IMG_WIDTH")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"IMG_WIDTH")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"IMG_HEIGHT")
         pushbyte 32
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"IMG_HEIGHT")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"IMG_OFS_X")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"IMG_OFS_X")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"IMG_OFS_Y")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"IMG_OFS_Y")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MAX_HP")
         pushshort 250
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MAX_HP")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"DEFENSE")
         pushbyte 10
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"DEFENSE")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"OFFENSE")
         pushbyte 2
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"OFFENSE")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_WAIT")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_WAIT")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_UP_LEFT")
         pushbyte 1
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_UP_LEFT")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_DOWN_LEFT")
         pushbyte 2
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_DOWN_LEFT")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_UP_RIGHT")
         pushbyte 3
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_UP_RIGHT")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_DOWN_RIGHT")
         pushbyte 4
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_DOWN_RIGHT")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_LEFT_UP")
         pushbyte 5
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_LEFT_UP")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_LEFT_DOWN")
         pushbyte 6
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_LEFT_DOWN")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_RIGHT_UP")
         pushbyte 7
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_RIGHT_UP")
         findproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_RIGHT_DOWN")
         pushbyte 8
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_RIGHT_DOWN")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var mode:int = 0;
      
      private var originX:Number;
      
      private var originY:Number;
      
      private var theta:Number = 0;
      
      private var elapsed:Number = 0;
      
      private var X_RADIUS:Number = 70;
      
      private var Y_RADIUS:Number = 20;
      
      private var MOVE_TIME:Number = 1.8;
      
      private var AI_TRIGGER_TIMEOUT:Number = 1.5;
      
      private var _aiTriggerTimeout:Number = 0;
      
      public function EnemySeahorse(param1:int, param2:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         convert_b
         dup
         iffalse ofs0
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_insaneMode")
         convert_b
         ofs0:
         iffalse ofs1
         getlocal0
         pushdouble 1.3
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MOVE_TIME")
         getlocal0
         pushshort 130
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"X_RADIUS")
         getlocal0
         pushbyte 40
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"Y_RADIUS")
         jump ofs2
         ofs1:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         convert_b
         dup
         iffalse ofs3
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_hardMode")
         convert_b
         ofs3:
         iffalse ofs2
         getlocal0
         pushdouble 1.9
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MOVE_TIME")
         getlocal0
         pushshort 140
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"X_RADIUS")
         getlocal0
         pushbyte 50
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"Y_RADIUS")
         ofs2:
         getlocal0
         getlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MAX_HP")
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"DEFENSE")
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"OFFENSE")
         pushtrue
         constructsuper 6
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"EnemySeahorse")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         getlocal1
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"IMG_OFS_X")
         subtract
         convert_i
         setlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"IMG_OFS_Y")
         subtract
         convert_i
         setlocal2
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originX")
         getlocal0
         getlocal2
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originY")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MOVE_TIME")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"elapsed")
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         pushbyte 0
         newarray 1
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 2
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findproperty QName(PackageNamespace(""),"active")
         pushtrue
         initproperty QName(PackageNamespace(""),"active")
         findproperty QName(PackageNamespace(""),"visible")
         pushtrue
         initproperty QName(PackageNamespace(""),"visible")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function normalizedSigmoid(param1:Number) : Number
      {
         trait method QName(PrivateNamespace(null,"#EnemySeahorse"),"normalizedSigmoid")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 5
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushbyte 1
         dup
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         pushbyte 12
         multiply
         pushbyte 6
         subtract
         negate
         callproperty QName(PackageNamespace(""),"exp"), 1
         add
         divide
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"touch"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function triggerAi3() : void
      {
         trait method QName(PackageNamespace(""),"triggerAi3")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"_aiTriggerTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"_aiTriggerTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"_aiTriggerTimeout")
         pushbyte 0
         ifngt ofs0
         returnvoid
         ofs0:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"AI_TRIGGER_TIMEOUT")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"_aiTriggerTimeout")
         getlocal0
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"elapsed")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originX")
         getlocal0
         getlex QName(PackageNamespace(""),"y")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originY")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         ifnlt ofs1
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         ifne ofs2
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_DOWN_LEFT")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"mode")
         jump ofs3
         ofs2:
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_RIGHT_DOWN")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"mode")
         ofs3:
         jump ofs4
         ofs1:
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs5
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_DOWN_RIGHT")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"mode")
         jump ofs4
         ofs5:
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_LEFT_DOWN")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"mode")
         ofs4:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function updatePosition() : void
      {
         trait method QName(PackageNamespace(""),"updatePosition")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"mode")
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_WAIT")
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"elapsed")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MOVE_TIME")
         divide
         callproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"normalizedSigmoid"), 1
         convert_d
         setlocal1
         jump ofs1
         ofs2:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"X_RADIUS")
         getlocal1
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"y")
         jump ofs3
         ofs4:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"X_RADIUS")
         getlocal1
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         jump ofs3
         ofs5:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"X_RADIUS")
         getlocal1
         multiply
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"y")
         jump ofs3
         ofs6:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"X_RADIUS")
         getlocal1
         multiply
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         jump ofs3
         ofs7:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"Y_RADIUS")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushdouble 0.5
         ifngt ofs8
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs8:
         jump ofs3
         ofs9:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"Y_RADIUS")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushdouble 0.5
         ifngt ofs10
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs10:
         jump ofs3
         ofs11:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"Y_RADIUS")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushdouble 0.5
         ifngt ofs12
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs12:
         jump ofs3
         ofs13:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"Y_RADIUS")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushdouble 0.5
         ifngt ofs14
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs14:
         jump ofs3
         ofs15:
         label
         jump ofs3
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"mode")
         setlocal2
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_UP_LEFT")
         getlocal2
         ifstrictne ofs16
         pushbyte 0
         jump ofs17
         ofs16:
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_DOWN_LEFT")
         getlocal2
         ifstrictne ofs18
         pushbyte 1
         jump ofs17
         ofs18:
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_UP_RIGHT")
         getlocal2
         ifstrictne ofs19
         pushbyte 2
         jump ofs17
         ofs19:
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_DOWN_RIGHT")
         getlocal2
         ifstrictne ofs20
         pushbyte 3
         jump ofs17
         ofs20:
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_LEFT_UP")
         getlocal2
         ifstrictne ofs21
         pushbyte 4
         jump ofs17
         ofs21:
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_LEFT_DOWN")
         getlocal2
         ifstrictne ofs22
         pushbyte 5
         jump ofs17
         ofs22:
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_RIGHT_UP")
         getlocal2
         ifstrictne ofs23
         pushbyte 6
         jump ofs17
         ofs23:
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_RIGHT_DOWN")
         getlocal2
         ifstrictne ofs24
         pushbyte 7
         jump ofs17
         ofs24:
         jump ofs25
         pushbyte 8
         jump ofs25
         ofs25:
         pushbyte 8
         ofs17:
         kill 2
         lookupswitch ofs15, [ofs2, ofs4, ofs5, ofs6, ofs7, ofs9, ofs11, ofs13, ofs15]
         ofs3:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         findpropstrict QName(PackageNamespace(""),"onScreen")
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         iffalse ofs1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"elapsed")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         add
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"elapsed")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"updatePosition"), 0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"elapsed")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"MOVE_TIME")
         ifnge ofs1
         getlocal0
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"elapsed")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originX")
         getlocal0
         getlex QName(PackageNamespace(""),"y")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"originY")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         ifnlt ofs2
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         ifne ofs3
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         ifnlt ofs4
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_UP_LEFT")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"mode")
         jump ofs5
         ofs4:
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_DOWN_LEFT")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"mode")
         ofs5:
         jump ofs6
         ofs3:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         ifnlt ofs7
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_RIGHT_UP")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"mode")
         jump ofs6
         ofs7:
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_RIGHT_DOWN")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"mode")
         ofs6:
         jump ofs1
         ofs2:
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs8
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         ifnlt ofs9
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_UP_RIGHT")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"mode")
         jump ofs10
         ofs9:
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_COS_DOWN_RIGHT")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"mode")
         ofs10:
         jump ofs1
         ofs8:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         ifnlt ofs11
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_LEFT_UP")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"mode")
         jump ofs1
         ofs11:
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySeahorse"),"MODE_SEMICIRCLE_LEFT_DOWN")
         initproperty QName(PrivateNamespace(null,"#EnemySeahorse"),"mode")
         ofs1:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
