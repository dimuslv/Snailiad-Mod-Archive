
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("Utility",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #Utility
   popscope
   initproperty QName(PackageNamespace(""),"Utility")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   
   public class Utility
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function Utility()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function dist(param1:Number, param2:Number, param3:Number, param4:Number) : Number
      {
         trait method QName(PackageNamespace(""),"dist")
         flag FINAL
         dispid 3
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"Math")
         getlocal3
         getlocal1
         subtract
         getlocal3
         getlocal1
         subtract
         multiply
         getlocal 4
         getlocal2
         subtract
         getlocal 4
         getlocal2
         subtract
         multiply
         add
         callproperty QName(PackageNamespace(""),"sqrt"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function integrate(param1:Number, param2:Number, param3:Number, param4:Number, param5:Number = 0.1) : Number
      {
         trait method QName(PackageNamespace(""),"integrate")
         flag FINAL
         dispid 4
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         optional Double(0.1)
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 6
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"Math")
         pushdouble 0.1
         getlocal3
         callproperty QName(PackageNamespace(""),"pow"), 2
         convert_d
         setlocal 6
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getlocal 6
         getlocal 4
         callproperty QName(PackageNamespace(""),"pow"), 2
         multiply
         getlocal2
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal 6
         getlocal 4
         callproperty QName(PackageNamespace(""),"pow"), 2
         subtract
         multiply
         add
         convert_d
         setlocal1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlocal2
         subtract
         callproperty QName(PackageNamespace(""),"abs"), 1
         getlocal 5
         ifnlt ofs0
         getlocal2
         convert_d
         setlocal1
         ofs0:
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function stackTrace(param1:String = "stackTrace") : void
      {
         trait method QName(PackageNamespace(""),"stackTrace")
         flag FINAL
         dispid 5
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         optional Utf8("stackTrace")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"Error")
         constructprop QName(PackageNamespace(""),"Error"), 0
         coerce QName(PackageNamespace(""),"Error")
         setlocal2
         getlocal2
         callproperty QName(PackageNamespace(""),"getStackTrace"), 0
         coerce_s
         setlocal3
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getlocal1
         pushstring ": "
         add
         getlocal3
         add
         callpropvoid QName(PackageNamespace(""),"log"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function justPressedAnyKey() : Boolean
      {
         trait method QName(PackageNamespace(""),"justPressedAnyKey")
         flag FINAL
         dispid 6
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "A"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         dup
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "B"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs0:
         dup
         iftrue ofs1
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "C"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs1:
         dup
         iftrue ofs2
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "D"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs2:
         dup
         iftrue ofs3
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "E"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs3:
         dup
         iftrue ofs4
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "F"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs4:
         dup
         iftrue ofs5
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "G"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs5:
         dup
         iftrue ofs6
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "H"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs6:
         dup
         iftrue ofs7
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "I"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs7:
         dup
         iftrue ofs8
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "J"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs8:
         dup
         iftrue ofs9
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "K"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs9:
         dup
         iftrue ofs10
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "L"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs10:
         dup
         iftrue ofs11
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "M"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs11:
         dup
         iftrue ofs12
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "N"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs12:
         dup
         iftrue ofs13
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "O"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs13:
         dup
         iftrue ofs14
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "P"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs14:
         dup
         iftrue ofs15
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "Q"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs15:
         dup
         iftrue ofs16
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "R"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs16:
         dup
         iftrue ofs17
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "S"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs17:
         dup
         iftrue ofs18
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "T"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs18:
         dup
         iftrue ofs19
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "U"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs19:
         dup
         iftrue ofs20
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "V"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs20:
         dup
         iftrue ofs21
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "W"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs21:
         dup
         iftrue ofs22
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "X"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs22:
         dup
         iftrue ofs23
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "Y"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs23:
         dup
         iftrue ofs24
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "Z"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs24:
         dup
         iftrue ofs25
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "QUOTE"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs25:
         dup
         iftrue ofs26
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "ONE"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs26:
         dup
         iftrue ofs27
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "TWO"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs27:
         dup
         iftrue ofs28
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "THREE"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs28:
         dup
         iftrue ofs29
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "FOUR"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs29:
         dup
         iftrue ofs30
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "FIVE"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs30:
         dup
         iftrue ofs31
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "SIX"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs31:
         dup
         iftrue ofs32
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "SEVEN"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs32:
         dup
         iftrue ofs33
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "EIGHT"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs33:
         dup
         iftrue ofs34
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "NINE"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs34:
         dup
         iftrue ofs35
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "ZERO"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs35:
         dup
         iftrue ofs36
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "MINUS"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs36:
         dup
         iftrue ofs37
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "PLUS"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs37:
         dup
         iftrue ofs38
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "LBRACKET"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs38:
         dup
         iftrue ofs39
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "RBRACKET"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs39:
         dup
         iftrue ofs40
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "SEMICOLON"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs40:
         dup
         iftrue ofs41
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "BACKSLASH"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs41:
         dup
         iftrue ofs42
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "SLASH"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs42:
         dup
         iftrue ofs43
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "COMMA"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs43:
         dup
         iftrue ofs44
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "PERIOD"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs44:
         dup
         iftrue ofs45
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "ALT"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs45:
         dup
         iftrue ofs46
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "CONTROL"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs46:
         dup
         iftrue ofs47
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "SHIFT"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs47:
         dup
         iftrue ofs48
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "ENTER"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs48:
         dup
         iftrue ofs49
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "SPACE"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs49:
         dup
         iftrue ofs50
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "UP"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs50:
         dup
         iftrue ofs51
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "LEFT"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs51:
         dup
         iftrue ofs52
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "DOWN"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs52:
         dup
         iftrue ofs53
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "RIGHT"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs53:
         iffalse ofs54
         pushtrue
         returnvalue
         ofs54:
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
