
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("EnemyBlob2",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   newclass #EnemyBlob2
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"EnemyBlob2")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   import org.flixel.FlxObject;
   
   public class EnemyBlob2 extends Enemy
   {
      
      private static const IMG_WIDTH:int = 16;
      
      private static const IMG_HEIGHT:int = 16;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 0;
      
      private static const MAX_HP:int = 270;
      
      private static const DEFENSE:int = 10;
      
      private static const OFFENSE:int = 2;
      
      private static const HOP_TIMEOUTS:Array;
      
      private static const HOP_HEIGHT:Array;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 10
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"IMG_WIDTH")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"IMG_WIDTH")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"IMG_HEIGHT")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"IMG_HEIGHT")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"IMG_OFS_X")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"IMG_OFS_X")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"IMG_OFS_Y")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"IMG_OFS_Y")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"MAX_HP")
         pushshort 270
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"MAX_HP")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"DEFENSE")
         pushbyte 10
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"DEFENSE")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"OFFENSE")
         pushbyte 2
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"OFFENSE")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"HOP_TIMEOUTS")
         pushdouble 2.4
         pushdouble 3.5
         pushdouble 2.2
         pushdouble 1.6
         pushdouble 3.9
         pushdouble 3.5
         pushdouble 2.9
         pushdouble 3.1
         pushdouble 1.8
         newarray 9
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"HOP_TIMEOUTS")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"HOP_HEIGHT")
         pushbyte 1
         dup
         dup
         pushdouble 1.2
         pushbyte 2
         pushbyte 1
         pushdouble 1.2
         pushbyte 1
         pushbyte 2
         newarray 9
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"HOP_HEIGHT")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var hopNum:int = 0;
      
      private var hopTimeout:Number = 0;
      
      public function EnemyBlob2(param1:int, param2:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 25
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"MAX_HP")
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"DEFENSE")
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"OFFENSE")
         constructsuper 5
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"EnemyBlob")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         getlocal1
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"IMG_OFS_X")
         subtract
         convert_i
         setlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"IMG_OFS_Y")
         subtract
         convert_i
         setlocal2
         getlocal0
         getlocal1
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"HOP_TIMEOUTS")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopNum")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         convert_b
         dup
         iffalse ofs0
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_hardMode")
         convert_b
         ofs0:
         iffalse ofs1
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"HOP_TIMEOUTS")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopNum")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBlob2"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBlob2/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBlob2"),StaticProtectedNs("EnemyBlob2"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 2
         divide
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopTimeout")
         jump ofs2
         ofs1:
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"HOP_TIMEOUTS")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopNum")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBlob2"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBlob2/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBlob2"),StaticProtectedNs("EnemyBlob2"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopTimeout")
         ofs2:
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         pushbyte 4
         newarray 1
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 2
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "quiver"
         pushbyte 5
         pushbyte 6
         pushbyte 7
         pushbyte 4
         pushbyte 5
         pushbyte 6
         pushbyte 7
         pushbyte 4
         pushbyte 5
         dup
         pushbyte 6
         dup
         pushbyte 7
         dup
         pushbyte 4
         dup
         pushbyte 5
         dup
         pushbyte 6
         dup
         pushbyte 7
         dup
         pushbyte 4
         newarray 23
         pushbyte 12
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         getlex QName(PackageNamespace(""),"acceleration")
         pushshort 1200
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"touch"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         findpropstrict QName(PackageNamespace(""),"onScreen")
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         iffalse ofs1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopTimeout")
         pushbyte 0
         ifnlt ofs1
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         ifngt ofs2
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte -100
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         pushshort -240
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"HOP_HEIGHT")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopNum")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBlob2"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBlob2/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBlob2"),StaticProtectedNs("EnemyBlob2"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         multiply
         setproperty QName(PackageNamespace(""),"y")
         jump ofs3
         ofs2:
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 100
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         pushshort -240
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"HOP_HEIGHT")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopNum")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBlob2"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBlob2/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBlob2"),StaticProtectedNs("EnemyBlob2"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         multiply
         setproperty QName(PackageNamespace(""),"y")
         ofs3:
         getlocal0
         dup
         setlocal1
         getproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopNum")
         increment_i
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopNum")
         kill 2
         kill 1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopNum")
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"HOP_TIMEOUTS")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopNum")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         convert_b
         dup
         iffalse ofs4
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_hardMode")
         convert_b
         ofs4:
         iffalse ofs5
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"HOP_TIMEOUTS")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopNum")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBlob2"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBlob2/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBlob2"),StaticProtectedNs("EnemyBlob2"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 2
         divide
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopTimeout")
         jump ofs1
         ofs5:
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyBlob2"),"HOP_TIMEOUTS")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopNum")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBlob2"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBlob2/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBlob2"),StaticProtectedNs("EnemyBlob2"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         initproperty QName(PrivateNamespace(null,"#EnemyBlob2"),"hopTimeout")
         ofs1:
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifnlt ofs6
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs6:
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifngt ofs7
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs7:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitBottom(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitBottom")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushdouble -0.1
         multiply
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte -5
         ifnle ofs0
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "quiver"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitSide(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitSide")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte -1
         multiply
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "quiver"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hurt(param1:Number) : void
      {
         trait method QName(PackageNamespace(""),"hurt")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"hurt"), 1
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "quiver"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
