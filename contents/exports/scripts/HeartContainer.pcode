
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 9
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("HeartContainer",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace(""),"Item")
   pushscope
   getlex QName(PackageNamespace(""),"UniqueItem")
   pushscope
   getlex QName(PackageNamespace(""),"UniqueItem")
   newclass #HeartContainer
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"HeartContainer")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   public class HeartContainer extends UniqueItem
   {
      
      private static const IMG_WIDTH:int = 32;
      
      private static const IMG_HEIGHT:int = 32;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 16;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#HeartContainer"),"IMG_WIDTH")
         pushbyte 32
         initproperty QName(PrivateNamespace(null,"#HeartContainer"),"IMG_WIDTH")
         findproperty QName(PrivateNamespace(null,"#HeartContainer"),"IMG_HEIGHT")
         pushbyte 32
         initproperty QName(PrivateNamespace(null,"#HeartContainer"),"IMG_HEIGHT")
         findproperty QName(PrivateNamespace(null,"#HeartContainer"),"IMG_OFS_X")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#HeartContainer"),"IMG_OFS_X")
         findproperty QName(PrivateNamespace(null,"#HeartContainer"),"IMG_OFS_Y")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#HeartContainer"),"IMG_OFS_Y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function HeartContainer(param1:int, param2:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 20
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         constructsuper 2
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(null,"#HeartContainer"),"IMG_OFS_X")
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PrivateNamespace(null,"#HeartContainer"),"IMG_OFS_Y")
         subtract
         initproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"ItemHeartContainer")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"#HeartContainer"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"#HeartContainer"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"#HeartContainer"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"#HeartContainer"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         pushbyte 2
         dup
         pushbyte 1
         dup
         pushbyte 0
         dup
         dup
         pushbyte 1
         dup
         pushbyte 2
         dup
         pushbyte 3
         dup
         pushbyte 4
         dup
         dup
         pushbyte 3
         dup
         newarray 18
         pushdouble 3.7
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         callpropvoid QName(PackageNamespace(""),"addHeartContainer"), 0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"itemName")
         pushstring "HEART CONTAINER #"
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         callproperty QName(PackageNamespace(""),"getMaxHp"), 0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         divide
         pushbyte 3
         subtract
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         callpropvoid QName(PackageNamespace(""),"setItem"), 1
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"touch"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
