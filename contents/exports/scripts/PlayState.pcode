
{
   method
   name ""
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 9
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("PlayState",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"EventDispatcher")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"DisplayObject")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"InteractiveObject")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"Sprite")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxState")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxState")
   newclass #PlayState
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"PlayState")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import flash.utils.clearInterval;
   import org.flixel.FlxG;
   import org.flixel.FlxGroup;
   import org.flixel.FlxObject;
   import org.flixel.FlxState;
   import org.flixel.FlxU;
   
   public class PlayState extends FlxState
   {
      
      public static var STATE_MENU:int = 1;
      
      public static var STATE_GAME:int = 2;
      
      public static var STATE_ENDING:int = 3;
      
      public static var STATE_SUBSCREEN:int = 4;
      
      public static var STATE_INTRO:int = 5;
      
      public static var STATE_SPLASH:int = 6;
      
      public static var realState:int;
      
      public static var startedGame:Boolean = false;
      
      public static var endingFromMenu:Boolean = false;
      
      public static var endingNum:int = 0;
      
      public static var startFromTown:Boolean = false;
      
      public static var hasGoodEnding:Boolean = false;
      
      public static var introSlugMode:Boolean = false;
      
      public static var hideMiniMap:Boolean = false;
      
      public static var hideTab:Boolean = false;
      
      public static var hideableHidden:Boolean = false;
      
      public static var area:int = -1;
      
      public static var hasJumped:Boolean = false;
      
      public static var bossRush:Boolean = false;
      
      public static var isBossRushComplete:Boolean = false;
      
      public static var bossRushFade:Boolean = false;
      
      public static var bossRushCompleteTimeout:Number = 0;
      
      public static const BOSS_RUSH_COMPLETE_TIMEOUT:Number = 9;
      
      public static var isGameComplete:Boolean = false;
      
      public static var gameFade:Boolean = false;
      
      public static var gameCompleteTimeout:Number = 0;
      
      public static const GAME_COMPLETE_TIMEOUT:Number = 9;
      
      public static var aiTriggerPool:AiTriggerPool;
      
      public static var boss4BulletGroups:Boss4BulletGroups;
      
      public static var boss4SecondFormBulletGroups:Boss4SecondFormBulletGroups;
      
      public static var bossRushTimer:BossRushTimer;
      
      public static var bossesKilled:Array;
      
      public static var config:Configurable;
      
      public static var controlHelp:ControlHelp;
      
      public static var damageNumberPool:DamageNumberPool;
      
      public static var bossBgLayer:FlxGroup;
      
      public static var dialogue:Dialogue;
      
      public static var doors:Array;
      
      public static var emitters:FlxGroup;
      
      public static var ending:Ending;
      
      public static var intro:Intro;
      
      public static var enemies:FlxGroup;
      
      public static var enemiesNoCollide:FlxGroup;
      
      public static var bubbles:FlxGroup;
      
      public static var enemyBulletPool:EnemyBulletPool;
      
      public static var explosionPool:ExplosionPool;
      
      public static var fixBlocks:FixBlocks;
      
      public static var gameTimeDisplay:GameTimeDisplay;
      
      public static var hud:Hud;
      
      public static var itemRateHud:ItemRateHud;
      
      public static var items:FlxGroup;
      
      public static var mainMenu:MainMenu;
      
      public static var splashLayer:SplashLayer;
      
      public static var miniMap:MiniMap;
      
      public static var npcs:FlxGroup;
      
      public static var player:Player;
      
      public static var playerBulletGroups:PlayerBulletGroups;
      
      public static var saveData:SaveData;
      
      public static var savingText:SavingText;
      
      public static var solidItems:FlxGroup;
      
      public static var sprites:FlxGroup;
      
      public static var snowLayer:SnowLayer;
      
      public static var starLayer:StarLayer;
      
      public static var uniqueBlocks:UniqueBlocks;
      
      public static var worldMap:WorldMap;
      
      public static var zzz:Zzz;
      
      public static var menuHideable:FlxGroup;
      
      public static var boss2:Boss;
      
      public static var boss2rush:Boss;
      
      public static var This:PlayState;
      
      public static var fxStompActive:Boolean = false;
      
      public static var fxStompTimeout:Number = 1.5;
      
      {
         method
         name ""
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findproperty QName(PackageNamespace(""),"STATE_MENU")
         pushbyte 1
         setproperty QName(PackageNamespace(""),"STATE_MENU")
         findproperty QName(PackageNamespace(""),"STATE_GAME")
         pushbyte 2
         setproperty QName(PackageNamespace(""),"STATE_GAME")
         findproperty QName(PackageNamespace(""),"STATE_ENDING")
         pushbyte 3
         setproperty QName(PackageNamespace(""),"STATE_ENDING")
         findproperty QName(PackageNamespace(""),"STATE_SUBSCREEN")
         pushbyte 4
         setproperty QName(PackageNamespace(""),"STATE_SUBSCREEN")
         findproperty QName(PackageNamespace(""),"STATE_INTRO")
         pushbyte 5
         setproperty QName(PackageNamespace(""),"STATE_INTRO")
         findproperty QName(PackageNamespace(""),"STATE_SPLASH")
         pushbyte 6
         setproperty QName(PackageNamespace(""),"STATE_SPLASH")
         findproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_SPLASH")
         setproperty QName(PackageNamespace(""),"realState")
         findproperty QName(PackageNamespace(""),"startedGame")
         pushfalse
         setproperty QName(PackageNamespace(""),"startedGame")
         findproperty QName(PackageNamespace(""),"endingFromMenu")
         pushfalse
         setproperty QName(PackageNamespace(""),"endingFromMenu")
         findproperty QName(PackageNamespace(""),"endingNum")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"endingNum")
         findproperty QName(PackageNamespace(""),"startFromTown")
         pushfalse
         setproperty QName(PackageNamespace(""),"startFromTown")
         findproperty QName(PackageNamespace(""),"hasGoodEnding")
         pushfalse
         setproperty QName(PackageNamespace(""),"hasGoodEnding")
         findproperty QName(PackageNamespace(""),"introSlugMode")
         pushfalse
         setproperty QName(PackageNamespace(""),"introSlugMode")
         findproperty QName(PackageNamespace(""),"hideMiniMap")
         pushfalse
         setproperty QName(PackageNamespace(""),"hideMiniMap")
         findproperty QName(PackageNamespace(""),"hideTab")
         pushfalse
         setproperty QName(PackageNamespace(""),"hideTab")
         findproperty QName(PackageNamespace(""),"hideableHidden")
         pushfalse
         setproperty QName(PackageNamespace(""),"hideableHidden")
         findproperty QName(PackageNamespace(""),"area")
         pushbyte -1
         setproperty QName(PackageNamespace(""),"area")
         findproperty QName(PackageNamespace(""),"hasJumped")
         pushfalse
         setproperty QName(PackageNamespace(""),"hasJumped")
         findproperty QName(PackageNamespace(""),"bossRush")
         pushfalse
         setproperty QName(PackageNamespace(""),"bossRush")
         findproperty QName(PackageNamespace(""),"isBossRushComplete")
         pushfalse
         setproperty QName(PackageNamespace(""),"isBossRushComplete")
         findproperty QName(PackageNamespace(""),"bossRushFade")
         pushfalse
         setproperty QName(PackageNamespace(""),"bossRushFade")
         findproperty QName(PackageNamespace(""),"bossRushCompleteTimeout")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"bossRushCompleteTimeout")
         findproperty QName(PackageNamespace(""),"BOSS_RUSH_COMPLETE_TIMEOUT")
         pushbyte 9
         initproperty QName(PackageNamespace(""),"BOSS_RUSH_COMPLETE_TIMEOUT")
         findproperty QName(PackageNamespace(""),"isGameComplete")
         pushfalse
         setproperty QName(PackageNamespace(""),"isGameComplete")
         findproperty QName(PackageNamespace(""),"gameFade")
         pushfalse
         setproperty QName(PackageNamespace(""),"gameFade")
         findproperty QName(PackageNamespace(""),"gameCompleteTimeout")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"gameCompleteTimeout")
         findproperty QName(PackageNamespace(""),"GAME_COMPLETE_TIMEOUT")
         pushbyte 9
         initproperty QName(PackageNamespace(""),"GAME_COMPLETE_TIMEOUT")
         findproperty QName(PackageNamespace(""),"fxStompActive")
         pushfalse
         setproperty QName(PackageNamespace(""),"fxStompActive")
         findproperty QName(PackageNamespace(""),"fxStompTimeout")
         pushdouble 1.5
         setproperty QName(PackageNamespace(""),"fxStompTimeout")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function PlayState()
      {
         method
         name ":PlayState/PlayState"
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function loadGame(param1:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"loadGame")
         flag FINAL
         dispid 3
         method
         name "PlayState:loadGame"
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlex QName(PackageNamespace(""),"player")
         iffalse ofs0
         findpropstrict QName(PackageNamespace("flash.utils"),"clearInterval")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"deathFadeInterval")
         callpropvoid QName(PackageNamespace("flash.utils"),"clearInterval"), 1
         findpropstrict QName(PackageNamespace("flash.utils"),"clearInterval")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"reviveInterval")
         callpropvoid QName(PackageNamespace("flash.utils"),"clearInterval"), 1
         findpropstrict QName(PackageNamespace("flash.utils"),"clearInterval")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"teleportInterval")
         callpropvoid QName(PackageNamespace("flash.utils"),"clearInterval"), 1
         getlex QName(PackageNamespace(""),"player")
         pushtrue
         setproperty QName(PackageNamespace(""),"_invincible")
         getlex QName(PackageNamespace(""),"player")
         pushtrue
         setproperty QName(PackageNamespace(""),"dead")
         ofs0:
         getlex QName(PackageNamespace(""),"This")
         getproperty QName(PackageNamespace(""),"defaultGroup")
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         getlex QName(PackageNamespace(""),"This")
         getproperty QName(PackageNamespace(""),"defaultGroup")
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         setproperty QName(PackageNamespace(""),"members")
         findpropstrict QName(PackageNamespace(""),"area")
         pushbyte -1
         setproperty QName(PackageNamespace(""),"area")
         findpropstrict QName(PackageNamespace(""),"hasJumped")
         pushfalse
         setproperty QName(PackageNamespace(""),"hasJumped")
         findpropstrict QName(PackageNamespace(""),"bossRush")
         pushfalse
         setproperty QName(PackageNamespace(""),"bossRush")
         findpropstrict QName(PackageNamespace(""),"startedGame")
         pushtrue
         setproperty QName(PackageNamespace(""),"startedGame")
         findpropstrict QName(PackageNamespace(""),"isBossRushComplete")
         pushfalse
         setproperty QName(PackageNamespace(""),"isBossRushComplete")
         findpropstrict QName(PackageNamespace(""),"startFromTown")
         getlocal1
         setproperty QName(PackageNamespace(""),"startFromTown")
         findpropstrict QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_GAME")
         setproperty QName(PackageNamespace(""),"realState")
         findpropstrict QName(PackageNamespace(""),"setup")
         callpropvoid QName(PackageNamespace(""),"setup"), 0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"fade")
         callpropvoid QName(PackageNamespace(""),"stop"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function loadGameFromTown() : void
      {
         trait method QName(PackageNamespace(""),"loadGameFromTown")
         flag FINAL
         dispid 4
         method
         name "PlayState:loadGameFromTown"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"loadGame")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"loadGame"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function startBossRush() : void
      {
         trait method QName(PackageNamespace(""),"startBossRush")
         flag FINAL
         dispid 5
         method
         name "PlayState:startBossRush"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"player")
         iffalse ofs0
         getlex QName(PackageNamespace(""),"player")
         pushtrue
         setproperty QName(PackageNamespace(""),"dead")
         ofs0:
         getlex QName(PackageNamespace(""),"This")
         getproperty QName(PackageNamespace(""),"defaultGroup")
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         getlex QName(PackageNamespace(""),"This")
         getproperty QName(PackageNamespace(""),"defaultGroup")
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         setproperty QName(PackageNamespace(""),"members")
         findpropstrict QName(PackageNamespace(""),"bossRush")
         pushtrue
         setproperty QName(PackageNamespace(""),"bossRush")
         findpropstrict QName(PackageNamespace(""),"startedGame")
         pushtrue
         setproperty QName(PackageNamespace(""),"startedGame")
         findpropstrict QName(PackageNamespace(""),"isBossRushComplete")
         pushfalse
         setproperty QName(PackageNamespace(""),"isBossRushComplete")
         findpropstrict QName(PackageNamespace(""),"bossRushCompleteTimeout")
         getlex QName(PackageNamespace(""),"BOSS_RUSH_COMPLETE_TIMEOUT")
         setproperty QName(PackageNamespace(""),"bossRushCompleteTimeout")
         findpropstrict QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_GAME")
         setproperty QName(PackageNamespace(""),"realState")
         findpropstrict QName(PackageNamespace(""),"setup")
         callpropvoid QName(PackageNamespace(""),"setup"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function startHardNewGame() : void
      {
         trait method QName(PackageNamespace(""),"startHardNewGame")
         flag FINAL
         dispid 6
         method
         name "PlayState:startHardNewGame"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"saveData")
         findpropstrict QName(PackageNamespace(""),"SaveData")
         constructprop QName(PackageNamespace(""),"SaveData"), 0
         setproperty QName(PackageNamespace(""),"saveData")
         getlex QName(PackageNamespace(""),"saveData")
         callpropvoid QName(PackageNamespace(""),"eraseMostHard"), 0
         findpropstrict QName(PackageNamespace(""),"startIntro")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"startIntro"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function startInsaneNewGame() : void
      {
         trait method QName(PackageNamespace(""),"startInsaneNewGame")
         flag FINAL
         dispid 7
         method
         name "PlayState:startInsaneNewGame"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"saveData")
         findpropstrict QName(PackageNamespace(""),"SaveData")
         constructprop QName(PackageNamespace(""),"SaveData"), 0
         setproperty QName(PackageNamespace(""),"saveData")
         getlex QName(PackageNamespace(""),"saveData")
         callpropvoid QName(PackageNamespace(""),"eraseMostInsane"), 0
         findpropstrict QName(PackageNamespace(""),"startIntro")
         pushfalse
         callpropvoid QName(PackageNamespace(""),"startIntro"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function startEasyNewGame() : void
      {
         trait method QName(PackageNamespace(""),"startEasyNewGame")
         flag FINAL
         dispid 8
         method
         name "PlayState:startEasyNewGame"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"saveData")
         findpropstrict QName(PackageNamespace(""),"SaveData")
         constructprop QName(PackageNamespace(""),"SaveData"), 0
         setproperty QName(PackageNamespace(""),"saveData")
         getlex QName(PackageNamespace(""),"saveData")
         callpropvoid QName(PackageNamespace(""),"eraseMostEasy"), 0
         findpropstrict QName(PackageNamespace(""),"startIntro")
         pushfalse
         callpropvoid QName(PackageNamespace(""),"startIntro"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function startNewGame() : void
      {
         trait method QName(PackageNamespace(""),"startNewGame")
         flag FINAL
         dispid 9
         method
         name "PlayState:startNewGame"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"saveData")
         findpropstrict QName(PackageNamespace(""),"SaveData")
         constructprop QName(PackageNamespace(""),"SaveData"), 0
         setproperty QName(PackageNamespace(""),"saveData")
         getlex QName(PackageNamespace(""),"saveData")
         callpropvoid QName(PackageNamespace(""),"eraseMost"), 0
         findpropstrict QName(PackageNamespace(""),"startIntro")
         pushfalse
         callpropvoid QName(PackageNamespace(""),"startIntro"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function startIntro(param1:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"startIntro")
         flag FINAL
         dispid 10
         method
         name "PlayState:startIntro"
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         findpropstrict QName(PackageNamespace(""),"introSlugMode")
         getlocal1
         setproperty QName(PackageNamespace(""),"introSlugMode")
         findpropstrict QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_INTRO")
         setproperty QName(PackageNamespace(""),"realState")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function startEnding(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"startEnding")
         flag FINAL
         dispid 11
         method
         name "PlayState:startEnding"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         findpropstrict QName(PackageNamespace(""),"endingFromMenu")
         getlex QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_MENU")
         equals
         setproperty QName(PackageNamespace(""),"endingFromMenu")
         findpropstrict QName(PackageNamespace(""),"endingNum")
         getlocal1
         setproperty QName(PackageNamespace(""),"endingNum")
         findpropstrict QName(PackageNamespace(""),"isGameComplete")
         pushtrue
         setproperty QName(PackageNamespace(""),"isGameComplete")
         findpropstrict QName(PackageNamespace(""),"gameCompleteTimeout")
         getlex QName(PackageNamespace(""),"GAME_COMPLETE_TIMEOUT")
         setproperty QName(PackageNamespace(""),"gameCompleteTimeout")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function endEnding() : void
      {
         trait method QName(PackageNamespace(""),"endEnding")
         flag FINAL
         dispid 12
         method
         name "PlayState:endEnding"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"endingFromMenu")
         iffalse ofs0
         findpropstrict QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_MENU")
         setproperty QName(PackageNamespace(""),"realState")
         jump ofs1
         ofs0:
         findpropstrict QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_GAME")
         setproperty QName(PackageNamespace(""),"realState")
         ofs1:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"flash")
         pushint -16777216
         pushdouble 0.34
         callpropvoid QName(PackageNamespace(""),"start"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function goToMainMenu() : void
      {
         trait method QName(PackageNamespace(""),"goToMainMenu")
         flag FINAL
         dispid 13
         method
         name "PlayState:goToMainMenu"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_SPLASH")
         setproperty QName(PackageNamespace(""),"realState")
         findpropstrict QName(PackageNamespace(""),"startedGame")
         pushfalse
         setproperty QName(PackageNamespace(""),"startedGame")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function returnToGame() : void
      {
         trait method QName(PackageNamespace(""),"returnToGame")
         flag FINAL
         dispid 14
         method
         name "PlayState:returnToGame"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"flash")
         pushint 2130706432
         pushdouble 0.34
         callpropvoid QName(PackageNamespace(""),"start"), 2
         findpropstrict QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_GAME")
         setproperty QName(PackageNamespace(""),"realState")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function addTitleScreen() : void
      {
         trait method QName(PackageNamespace(""),"addTitleScreen")
         flag FINAL
         dispid 15
         method
         name "PlayState:addTitleScreen"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function setup() : void
      {
         trait method QName(PackageNamespace(""),"setup")
         flag FINAL
         dispid 16
         method
         name "PlayState:setup"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 286
         findpropstrict QName(PackageNamespace(""),"config")
         findpropstrict QName(PackageNamespace(""),"Configurable")
         constructprop QName(PackageNamespace(""),"Configurable"), 0
         setproperty QName(PackageNamespace(""),"config")
         getlex QName(PackageNamespace(""),"saveData")
         not
         iffalse ofs0
         findpropstrict QName(PackageNamespace(""),"saveData")
         findpropstrict QName(PackageNamespace(""),"SaveData")
         constructprop QName(PackageNamespace(""),"SaveData"), 0
         setproperty QName(PackageNamespace(""),"saveData")
         ofs0:
         findpropstrict QName(PackageNamespace(""),"bossesKilled")
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         setproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 0
         setlocal1
         jump ofs1
         ofs2:
         label
         getlex QName(PackageNamespace(""),"bossesKilled")
         getlocal1
         pushfalse
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         inclocal_i 1
         ofs1:
         getlocal1
         pushbyte 5
         iflt ofs2
         getlex QName(PackageNamespace(""),"This")
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxGroup")
         constructprop QName(PackageNamespace("org.flixel"),"FlxGroup"), 0
         setproperty QName(PackageNamespace(""),"defaultGroup")
         getglobalscope
         getslot 1
         getproperty QName(PackageNamespace(""),"saveData")
         callpropvoid QName(PackageNamespace(""),"loadAll"), 0
         findpropstrict QName(PackageNamespace(""),"worldMap")
         findpropstrict QName(PackageNamespace(""),"WorldMap")
         constructprop QName(PackageNamespace(""),"WorldMap"), 0
         setproperty QName(PackageNamespace(""),"worldMap")
         findpropstrict QName(PackageNamespace(""),"dialogue")
         findpropstrict QName(PackageNamespace(""),"Dialogue")
         constructprop QName(PackageNamespace(""),"Dialogue"), 0
         setproperty QName(PackageNamespace(""),"dialogue")
         findpropstrict QName(PackageNamespace(""),"hud")
         findpropstrict QName(PackageNamespace(""),"Hud")
         constructprop QName(PackageNamespace(""),"Hud"), 0
         setproperty QName(PackageNamespace(""),"hud")
         findpropstrict QName(PackageNamespace(""),"items")
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxGroup")
         constructprop QName(PackageNamespace("org.flixel"),"FlxGroup"), 0
         setproperty QName(PackageNamespace(""),"items")
         findpropstrict QName(PackageNamespace(""),"solidItems")
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxGroup")
         constructprop QName(PackageNamespace("org.flixel"),"FlxGroup"), 0
         setproperty QName(PackageNamespace(""),"solidItems")
         findpropstrict QName(PackageNamespace(""),"enemies")
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxGroup")
         constructprop QName(PackageNamespace("org.flixel"),"FlxGroup"), 0
         setproperty QName(PackageNamespace(""),"enemies")
         findpropstrict QName(PackageNamespace(""),"bubbles")
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxGroup")
         constructprop QName(PackageNamespace("org.flixel"),"FlxGroup"), 0
         setproperty QName(PackageNamespace(""),"bubbles")
         findpropstrict QName(PackageNamespace(""),"enemiesNoCollide")
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxGroup")
         constructprop QName(PackageNamespace("org.flixel"),"FlxGroup"), 0
         setproperty QName(PackageNamespace(""),"enemiesNoCollide")
         findpropstrict QName(PackageNamespace(""),"npcs")
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxGroup")
         constructprop QName(PackageNamespace("org.flixel"),"FlxGroup"), 0
         setproperty QName(PackageNamespace(""),"npcs")
         findpropstrict QName(PackageNamespace(""),"sprites")
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxGroup")
         constructprop QName(PackageNamespace("org.flixel"),"FlxGroup"), 0
         setproperty QName(PackageNamespace(""),"sprites")
         findpropstrict QName(PackageNamespace(""),"starLayer")
         findpropstrict QName(PackageNamespace(""),"StarLayer")
         constructprop QName(PackageNamespace(""),"StarLayer"), 0
         setproperty QName(PackageNamespace(""),"starLayer")
         findpropstrict QName(PackageNamespace(""),"snowLayer")
         findpropstrict QName(PackageNamespace(""),"SnowLayer")
         constructprop QName(PackageNamespace(""),"SnowLayer"), 0
         setproperty QName(PackageNamespace(""),"snowLayer")
         findpropstrict QName(PackageNamespace(""),"emitters")
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxGroup")
         constructprop QName(PackageNamespace("org.flixel"),"FlxGroup"), 0
         setproperty QName(PackageNamespace(""),"emitters")
         findpropstrict QName(PackageNamespace(""),"damageNumberPool")
         findpropstrict QName(PackageNamespace(""),"DamageNumberPool")
         constructprop QName(PackageNamespace(""),"DamageNumberPool"), 0
         setproperty QName(PackageNamespace(""),"damageNumberPool")
         findpropstrict QName(PackageNamespace(""),"playerBulletGroups")
         findpropstrict QName(PackageNamespace(""),"PlayerBulletGroups")
         constructprop QName(PackageNamespace(""),"PlayerBulletGroups"), 0
         setproperty QName(PackageNamespace(""),"playerBulletGroups")
         findpropstrict QName(PackageNamespace(""),"boss4BulletGroups")
         findpropstrict QName(PackageNamespace(""),"Boss4BulletGroups")
         constructprop QName(PackageNamespace(""),"Boss4BulletGroups"), 0
         setproperty QName(PackageNamespace(""),"boss4BulletGroups")
         findpropstrict QName(PackageNamespace(""),"boss4SecondFormBulletGroups")
         findpropstrict QName(PackageNamespace(""),"Boss4SecondFormBulletGroups")
         constructprop QName(PackageNamespace(""),"Boss4SecondFormBulletGroups"), 0
         setproperty QName(PackageNamespace(""),"boss4SecondFormBulletGroups")
         findpropstrict QName(PackageNamespace(""),"enemyBulletPool")
         findpropstrict QName(PackageNamespace(""),"EnemyBulletPool")
         constructprop QName(PackageNamespace(""),"EnemyBulletPool"), 0
         setproperty QName(PackageNamespace(""),"enemyBulletPool")
         findpropstrict QName(PackageNamespace(""),"player")
         findpropstrict QName(PackageNamespace(""),"Player")
         getlex QName(PackageNamespace(""),"playerBulletGroups")
         constructprop QName(PackageNamespace(""),"Player"), 1
         setproperty QName(PackageNamespace(""),"player")
         findpropstrict QName(PackageNamespace(""),"itemRateHud")
         findpropstrict QName(PackageNamespace(""),"ItemRateHud")
         constructprop QName(PackageNamespace(""),"ItemRateHud"), 0
         setproperty QName(PackageNamespace(""),"itemRateHud")
         findpropstrict QName(PackageNamespace(""),"controlHelp")
         findpropstrict QName(PackageNamespace(""),"ControlHelp")
         constructprop QName(PackageNamespace(""),"ControlHelp"), 0
         setproperty QName(PackageNamespace(""),"controlHelp")
         findpropstrict QName(PackageNamespace(""),"explosionPool")
         findpropstrict QName(PackageNamespace(""),"ExplosionPool")
         constructprop QName(PackageNamespace(""),"ExplosionPool"), 0
         setproperty QName(PackageNamespace(""),"explosionPool")
         findpropstrict QName(PackageNamespace(""),"miniMap")
         findpropstrict QName(PackageNamespace(""),"MiniMap")
         constructprop QName(PackageNamespace(""),"MiniMap"), 0
         setproperty QName(PackageNamespace(""),"miniMap")
         findpropstrict QName(PackageNamespace(""),"fixBlocks")
         findpropstrict QName(PackageNamespace(""),"FixBlocks")
         constructprop QName(PackageNamespace(""),"FixBlocks"), 0
         setproperty QName(PackageNamespace(""),"fixBlocks")
         findpropstrict QName(PackageNamespace(""),"uniqueBlocks")
         findpropstrict QName(PackageNamespace(""),"UniqueBlocks")
         constructprop QName(PackageNamespace(""),"UniqueBlocks"), 0
         setproperty QName(PackageNamespace(""),"uniqueBlocks")
         findpropstrict QName(PackageNamespace(""),"aiTriggerPool")
         findpropstrict QName(PackageNamespace(""),"AiTriggerPool")
         constructprop QName(PackageNamespace(""),"AiTriggerPool"), 0
         setproperty QName(PackageNamespace(""),"aiTriggerPool")
         findpropstrict QName(PackageNamespace(""),"bossRushTimer")
         findpropstrict QName(PackageNamespace(""),"BossRushTimer")
         constructprop QName(PackageNamespace(""),"BossRushTimer"), 0
         setproperty QName(PackageNamespace(""),"bossRushTimer")
         findpropstrict QName(PackageNamespace(""),"savingText")
         findpropstrict QName(PackageNamespace(""),"SavingText")
         constructprop QName(PackageNamespace(""),"SavingText"), 0
         setproperty QName(PackageNamespace(""),"savingText")
         findpropstrict QName(PackageNamespace(""),"gameTimeDisplay")
         findpropstrict QName(PackageNamespace(""),"GameTimeDisplay")
         constructprop QName(PackageNamespace(""),"GameTimeDisplay"), 0
         setproperty QName(PackageNamespace(""),"gameTimeDisplay")
         findpropstrict QName(PackageNamespace(""),"zzz")
         findpropstrict QName(PackageNamespace(""),"Zzz")
         constructprop QName(PackageNamespace(""),"Zzz"), 0
         setproperty QName(PackageNamespace(""),"zzz")
         findpropstrict QName(PackageNamespace(""),"bossBgLayer")
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxGroup")
         constructprop QName(PackageNamespace("org.flixel"),"FlxGroup"), 0
         setproperty QName(PackageNamespace(""),"bossBgLayer")
         findpropstrict QName(PackageNamespace(""),"doors")
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         setproperty QName(PackageNamespace(""),"doors")
         findpropstrict QName(PackageNamespace(""),"menuHideable")
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxGroup")
         constructprop QName(PackageNamespace("org.flixel"),"FlxGroup"), 0
         setproperty QName(PackageNamespace(""),"menuHideable")
         getlex QName(PackageNamespace(""),"uniqueBlocks")
         callpropvoid QName(PackageNamespace(""),"loadAll"), 0
         getlex QName(PackageNamespace(""),"miniMap")
         callpropvoid QName(PackageNamespace(""),"loadAll"), 0
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"skymap")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"starLayer")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"bgmap")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"bossBgLayer")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"player")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"sprites")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"npcs")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"fgmap")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"zzz")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"items")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"solidItems")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"enemies")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"enemiesNoCollide")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"playerBulletGroups")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"boss4BulletGroups")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"boss4SecondFormBulletGroups")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"enemyBulletPool")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"explosionPool")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"emitters")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"aiTriggerPool")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"bubbles")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"snowLayer")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"This")
         getlex QName(PackageNamespace(""),"menuHideable")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"bossRush")
         not
         iffalse ofs3
         getlex QName(PackageNamespace(""),"menuHideable")
         getlex QName(PackageNamespace(""),"miniMap")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         jump ofs4
         ofs3:
         getlex QName(PackageNamespace(""),"menuHideable")
         getlex QName(PackageNamespace(""),"bossRushTimer")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         ofs4:
         getlex QName(PackageNamespace(""),"menuHideable")
         getlex QName(PackageNamespace(""),"damageNumberPool")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"menuHideable")
         getlex QName(PackageNamespace(""),"hud")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"menuHideable")
         getlex QName(PackageNamespace(""),"gameTimeDisplay")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"menuHideable")
         getlex QName(PackageNamespace(""),"itemRateHud")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"menuHideable")
         getlex QName(PackageNamespace(""),"controlHelp")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"menuHideable")
         getlex QName(PackageNamespace(""),"dialogue")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"menuHideable")
         getlex QName(PackageNamespace(""),"savingText")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         getlex QName(PackageNamespace(""),"bossRush")
         not
         iffalse ofs5
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"hasSeenHelp")
         not
         dup
         iffalse ofs6
         pop
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_hardMode")
         not
         ofs6:
         iffalse ofs5
         getlex QName(PackageNamespace(""),"controlHelp")
         callpropvoid QName(PackageNamespace(""),"show"), 0
         getlex QName(PackageNamespace(""),"player")
         pushtrue
         setproperty QName(PackageNamespace(""),"hasSeenHelp")
         ofs5:
         getlex QName(PackageNamespace(""),"bossRush")
         iffalse ofs7
         findpropstrict QName(PackageNamespace(""),"setArea")
         pushbyte 7
         callpropvoid QName(PackageNamespace(""),"setArea"), 1
         ofs7:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getlex QName(PackageNamespace(""),"player")
         pushbyte 5
         callpropvoid QName(PackageNamespace(""),"follow"), 2
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         pushdouble 0.25
         pushdouble 0.05
         callpropvoid QName(PackageNamespace(""),"followAdjust"), 2
         getlex QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"player")
         callpropvoid QName(PackageNamespace(""),"checkRoomBounds"), 1
         getlex QName(PackageNamespace(""),"miniMap")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"updateMiniMap"), 1
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"mouse")
         callpropvoid QName(PackageNamespace(""),"hide"), 0
         findpropstrict QName(PackageNamespace(""),"hasJumped")
         pushfalse
         setproperty QName(PackageNamespace(""),"hasJumped")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function isBossDead(param1:int) : Boolean
      {
         trait method QName(PackageNamespace(""),"isBossDead")
         flag FINAL
         dispid 17
         method
         name "PlayState:isBossDead"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlex QName(PackageNamespace(""),"bossesKilled")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function setBossDead(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setBossDead")
         flag FINAL
         dispid 18
         method
         name "PlayState:setBossDead"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         getlex QName(PackageNamespace(""),"bossesKilled")
         getlocal1
         pushtrue
         setproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function triggerEnding() : void
      {
         trait method QName(PackageNamespace(""),"triggerEnding")
         flag FINAL
         dispid 19
         method
         name "PlayState:triggerEnding"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 400
         getglobalscope
         getslot 1
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"clearTime")
         getglobalscope
         getslot 1
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"value")
         pushbyte 1
         setlocal1
         getglobalscope
         getslot 1
         getproperty QName(PackageNamespace(""),"bossRush")
         iffalse ofs0
         pushbyte 2
         setlocal1
         ofs0:
         getglobalscope
         getslot 1
         getproperty QName(PackageNamespace(""),"player")
         callproperty QName(PackageNamespace(""),"getPercentComplete"), 0
         pushbyte 100
         ifne ofs1
         pushbyte 3
         setlocal1
         ofs1:
         getglobalscope
         getslot 1
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 30
         pushbyte 60
         multiply
         ifnlt ofs2
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockSpeedrunner"), 0
         pushbyte 4
         setlocal1
         ofs2:
         getglobalscope
         getslot 1
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_hardMode")
         iffalse ofs3
         pushbyte 5
         setlocal1
         ofs3:
         getglobalscope
         getslot 1
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_easyMode")
         iffalse ofs4
         pushbyte 1
         setlocal1
         ofs4:
         getglobalscope
         getslot 1
         getlocal1
         callpropvoid QName(PackageNamespace(""),"startEnding"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function totalItemsInArea() : int
      {
         trait method QName(PackageNamespace(""),"totalItemsInArea")
         flag FINAL
         dispid 20
         method
         name "PlayState:totalItemsInArea"
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 6
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 427
         debug 1, "_loc2_", 1, 432
         debug 1, "_loc3_", 2, 433
         getlex QName(PackageNamespace(""),"area")
         coerce_a
         setlocal1
         getlocal1
         pushbyte 6
         ifnge ofs0
         pushbyte 5
         coerce_a
         setlocal1
         ofs0:
         pushbyte 16
         pushbyte 13
         pushbyte 11
         pushbyte 8
         pushbyte 2
         pushbyte 0
         newarray 6
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         getlocal2
         getlocal1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         convert_i
         setlocal3
         getlocal1
         pushbyte 1
         equals
         dup
         iffalse ofs1
         pop
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_slugMode")
         ofs1:
         iffalse ofs2
         declocal_i 3
         ofs2:
         getlocal3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function numOfItemsAt(param1:int, param2:int) : int
      {
         trait method QName(PackageNamespace(""),"numOfItemsAt")
         flag FINAL
         dispid 21
         method
         name "PlayState:numOfItemsAt"
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         getlocal1
         pushshort 220
         equals
         dup
         iffalse ofs0
         pop
         getlocal2
         pushbyte 72
         equals
         ofs0:
         dup
         iffalse ofs1
         pop
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_slugMode")
         ofs1:
         iffalse ofs2
         pushbyte 0
         returnvalue
         ofs2:
         getglobalscope
         getslot 1
         getproperty QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"spmap")
         getlocal1
         getlocal2
         callproperty QName(PackageNamespace(""),"getTile"), 2
         not
         not
         iffalse ofs3
         pushbyte 1
         jump ofs4
         ofs3:
         pushbyte 0
         ofs4:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function gottenItemsInArea() : int
      {
         trait method QName(PackageNamespace(""),"gottenItemsInArea")
         flag FINAL
         dispid 22
         method
         name "PlayState:gottenItemsInArea"
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"totalItemsInArea")
         callproperty QName(PackageNamespace(""),"totalItemsInArea"), 0
         findpropstrict QName(PackageNamespace(""),"remainingItemsInArea")
         callproperty QName(PackageNamespace(""),"remainingItemsInArea"), 0
         subtract
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function remainingItemsInArea() : int
      {
         trait method QName(PackageNamespace(""),"remainingItemsInArea")
         flag FINAL
         dispid 23
         method
         name "PlayState:remainingItemsInArea"
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 457
         debug 1, "_loc2_", 1, 462
         getlex QName(PackageNamespace(""),"area")
         coerce_a
         setlocal1
         getlocal1
         pushbyte 6
         ifnge ofs0
         pushbyte 5
         coerce_a
         setlocal1
         ofs0:
         pushbyte 0
         setlocal2
         jump ofs1
         ofs2:
         label
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushbyte 11
         pushshort 167
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushbyte 40
         pushshort 169
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 143
         pushshort 151
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 220
         pushbyte 72
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 273
         pushshort 153
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 376
         pushbyte 24
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 412
         pushbyte 68
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 425
         pushbyte 119
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 434
         pushbyte 105
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 452
         pushbyte 56
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 454
         pushbyte 104
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 506
         pushshort 184
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 537
         pushbyte 54
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 565
         pushbyte 57
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 566
         pushbyte 107
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 584
         pushbyte 56
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 670
         pushbyte 39
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         jump ofs3
         ofs4:
         label
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 350
         pushshort 200
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 408
         pushshort 184
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 426
         pushshort 226
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 428
         pushshort 168
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 462
         pushshort 265
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 474
         pushshort 265
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 506
         pushshort 184
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 584
         pushshort 136
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 615
         pushbyte 125
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 615
         pushshort 234
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 617
         pushshort 140
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 636
         pushshort 248
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 642
         pushshort 202
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         jump ofs3
         ofs5:
         label
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushbyte 39
         pushshort 328
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushbyte 58
         pushshort 296
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushbyte 75
         pushshort 346
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushbyte 90
         pushshort 344
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushbyte 96
         pushshort 235
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushbyte 101
         pushshort 317
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushbyte 114
         pushshort 278
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 163
         pushshort 180
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 193
         pushshort 284
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 195
         pushshort 236
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 221
         pushshort 248
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         jump ofs3
         ofs6:
         label
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 408
         pushshort 343
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 436
         pushshort 346
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 450
         pushshort 296
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 454
         pushshort 344
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 455
         pushshort 281
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 474
         pushshort 281
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 556
         pushshort 310
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 655
         pushshort 342
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         jump ofs3
         ofs7:
         label
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 143
         pushbyte 103
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         getlocal2
         findpropstrict QName(PackageNamespace(""),"numOfItemsAt")
         pushshort 264
         pushbyte 57
         callproperty QName(PackageNamespace(""),"numOfItemsAt"), 2
         add
         convert_i
         setlocal2
         jump ofs3
         ofs8:
         label
         pushbyte 0
         setlocal2
         ofs9:
         label
         jump ofs3
         ofs1:
         getlocal1
         setlocal3
         pushbyte 0
         getlocal3
         ifstrictne ofs10
         pushbyte 0
         jump ofs11
         ofs10:
         pushbyte 1
         getlocal3
         ifstrictne ofs12
         pushbyte 1
         jump ofs11
         ofs12:
         pushbyte 2
         getlocal3
         ifstrictne ofs13
         pushbyte 2
         jump ofs11
         ofs13:
         pushbyte 3
         getlocal3
         ifstrictne ofs14
         pushbyte 3
         jump ofs11
         ofs14:
         pushbyte 4
         getlocal3
         ifstrictne ofs15
         pushbyte 4
         jump ofs11
         ofs15:
         pushbyte 5
         getlocal3
         ifstrictne ofs16
         pushbyte 5
         jump ofs11
         ofs16:
         jump ofs17
         pushbyte -1
         jump ofs17
         ofs17:
         pushbyte -1
         ofs11:
         kill 3
         lookupswitch ofs9, [ofs2, ofs4, ofs5, ofs6, ofs7, ofs8]
         ofs3:
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function setArea(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setArea")
         flag FINAL
         dispid 24
         method
         name "PlayState:setArea"
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "_loc2_", 1, 579
         jump ofs0
         ofs1:
         label
         getlex QName(PackageNamespace(""),"Music")
         callpropvoid QName(PackageNamespace(""),"playTown"), 0
         jump ofs2
         ofs3:
         label
         getlex QName(PackageNamespace(""),"Music")
         callpropvoid QName(PackageNamespace(""),"playArea1"), 0
         jump ofs2
         ofs4:
         label
         getlex QName(PackageNamespace(""),"Music")
         callpropvoid QName(PackageNamespace(""),"playArea2"), 0
         jump ofs2
         ofs5:
         label
         getlex QName(PackageNamespace(""),"Music")
         callpropvoid QName(PackageNamespace(""),"playArea3"), 0
         jump ofs2
         ofs6:
         label
         getlex QName(PackageNamespace(""),"Music")
         callpropvoid QName(PackageNamespace(""),"playArea4"), 0
         jump ofs2
         ofs7:
         label
         getlex QName(PackageNamespace(""),"Music")
         callpropvoid QName(PackageNamespace(""),"playIsis"), 0
         jump ofs2
         ofs8:
         label
         getlex QName(PackageNamespace(""),"Music")
         callpropvoid QName(PackageNamespace(""),"playIsis"), 0
         jump ofs2
         ofs9:
         label
         getlex QName(PackageNamespace(""),"Music")
         callpropvoid QName(PackageNamespace(""),"playBoss1"), 0
         ofs10:
         label
         jump ofs2
         ofs0:
         getlocal1
         setlocal3
         pushbyte 0
         getlocal3
         ifstrictne ofs11
         pushbyte 0
         jump ofs12
         ofs11:
         pushbyte 1
         getlocal3
         ifstrictne ofs13
         pushbyte 1
         jump ofs12
         ofs13:
         pushbyte 2
         getlocal3
         ifstrictne ofs14
         pushbyte 2
         jump ofs12
         ofs14:
         pushbyte 3
         getlocal3
         ifstrictne ofs15
         pushbyte 3
         jump ofs12
         ofs15:
         pushbyte 4
         getlocal3
         ifstrictne ofs16
         pushbyte 4
         jump ofs12
         ofs16:
         pushbyte 5
         getlocal3
         ifstrictne ofs17
         pushbyte 5
         jump ofs12
         ofs17:
         pushbyte 6
         getlocal3
         ifstrictne ofs18
         pushbyte 6
         jump ofs12
         ofs18:
         pushbyte 7
         getlocal3
         ifstrictne ofs19
         pushbyte 7
         jump ofs12
         ofs19:
         jump ofs20
         pushbyte -1
         jump ofs20
         ofs20:
         pushbyte -1
         ofs12:
         kill 3
         lookupswitch ofs10, [ofs1, ofs3, ofs4, ofs5, ofs6, ofs7, ofs8, ofs9]
         ofs2:
         getlocal1
         pushbyte 6
         ifne ofs21
         getlex QName(PackageNamespace(""),"player")
         pushtrue
         setproperty QName(PackageNamespace(""),"hasSeenIsis")
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockPilgrim"), 0
         findpropstrict QName(PackageNamespace(""),"isBossDead")
         pushbyte 4
         callproperty QName(PackageNamespace(""),"isBossDead"), 1
         dup
         convert_b
         iffalse ofs22
         pop
         getlex QName(PackageNamespace(""),"hasGoodEnding")
         not
         ofs22:
         dup
         iffalse ofs23
         pop
         getlex QName(PackageNamespace(""),"player")
         callproperty QName(PackageNamespace(""),"getHelixFragments"), 0
         pushbyte 30
         equals
         ofs23:
         iffalse ofs21
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"value")
         findpropstrict QName(PackageNamespace(""),"triggerEnding")
         callpropvoid QName(PackageNamespace(""),"triggerEnding"), 0
         ofs21:
         getlex QName(PackageNamespace(""),"area")
         getlocal1
         ifne ofs24
         returnvoid
         ofs24:
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"hasSeenIsis")
         dup
         iffalse ofs25
         pop
         getlocal1
         pushbyte 5
         equals
         ofs25:
         iffalse ofs26
         returnvoid
         ofs26:
         findpropstrict QName(PackageNamespace(""),"area")
         getlocal1
         setproperty QName(PackageNamespace(""),"area")
         pushstring "SNAIL COUNTRY"
         pushstring "MACULATA OCEAN"
         pushstring "BEDLAM RIFT"
         pushstring "MT. CONCHIOLIN"
         pushstring "EPITONIUM FORTRESS"
         pushstring "CROSSROAD CAVERN"
         pushstring "SHRINE OF IRIS"
         pushstring "BOSS RUSH"
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         getlex QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"areaName")
         getlocal2
         getlex QName(PackageNamespace(""),"area")
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         callpropvoid QName(PackageNamespace(""),"setArea"), 1
         getlex QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"radar")
         callpropvoid QName(PackageNamespace(""),"setNumber"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function showBossName(param1:int, param2:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"showBossName")
         flag FINAL
         dispid 25
         method
         name "PlayState:showBossName"
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "_loc3_", 2, 586
         debug 1, "_loc4_", 3, 587
         pushstring "there is no boss #0"
         pushstring "SHELLBREAKER"
         pushstring "STOMPY"
         pushstring "SPACE BOX"
         pushstring "MOON SNAIL"
         newarray 5
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         getlocal3
         getlocal1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         getlocal2
         not
         not
         iffalse ofs0
         pushstring " DEFEATED!"
         jump ofs1
         ofs0:
         pushstring ""
         ofs1:
         add
         coerce_a
         setlocal 4
         getlocal2
         dup
         iffalse ofs2
         pop
         getlocal1
         pushbyte 4
         equals
         ofs2:
         iffalse ofs3
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_insaneMode")
         iffalse ofs4
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         equals
         dup
         iftrue ofs5
         pop
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         greaterthan
         ofs5:
         iffalse ofs6
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"value")
         getlocal 4
         pushstring "\nNEW BEST TIME - INSANE MODE "
         getlex QName(PackageNamespace(""),"GameTimeDisplay")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"formatExact"), 1
         add
         add
         coerce_a
         setlocal 4
         getlex QName(PackageNamespace(""),"player")
         pushtrue
         setproperty QName(PackageNamespace(""),"hasWonInsaneMode")
         ofs6:
         jump ofs3
         ofs4:
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_hardMode")
         iffalse ofs7
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestHardTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         equals
         dup
         iftrue ofs8
         pop
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestHardTime")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         greaterthan
         ofs8:
         iffalse ofs9
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestHardTime")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"value")
         getlocal 4
         pushstring "\nNEW BEST TIME - SLUG MODE "
         getlex QName(PackageNamespace(""),"GameTimeDisplay")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestHardTime")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"formatExact"), 1
         add
         add
         coerce_a
         setlocal 4
         ofs9:
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         equals
         dup
         iftrue ofs10
         pop
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         greaterthan
         ofs10:
         dup
         iffalse ofs11
         pop
         getlex QName(PackageNamespace(""),"player")
         callproperty QName(PackageNamespace(""),"getPercentComplete"), 0
         pushbyte 100
         equals
         ofs11:
         iffalse ofs12
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"value")
         getlocal 4
         pushstring "\nNEW BEST 100% TIME - "
         getlex QName(PackageNamespace(""),"GameTimeDisplay")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"formatExact"), 1
         add
         add
         coerce_a
         setlocal 4
         ofs12:
         jump ofs3
         ofs7:
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_easyMode")
         iffalse ofs13
         getlex QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"areaName")
         getlocal3
         getlocal1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         getlocal2
         not
         not
         iffalse ofs14
         pushstring " DEFEATED!"
         jump ofs15
         ofs14:
         pushstring ""
         ofs15:
         add
         callpropvoid QName(PackageNamespace(""),"setArea"), 1
         jump ofs3
         ofs13:
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestMainTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         equals
         dup
         iftrue ofs16
         pop
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestMainTime")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         greaterthan
         ofs16:
         iffalse ofs17
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestMainTime")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"value")
         getlocal 4
         pushstring "\nNEW BEST TIME - NORMAL MODE "
         getlex QName(PackageNamespace(""),"GameTimeDisplay")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestMainTime")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"formatExact"), 1
         add
         add
         coerce_a
         setlocal 4
         ofs17:
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         equals
         dup
         iftrue ofs18
         pop
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         greaterthan
         ofs18:
         dup
         iffalse ofs19
         pop
         getlex QName(PackageNamespace(""),"player")
         callproperty QName(PackageNamespace(""),"getPercentComplete"), 0
         pushbyte 100
         equals
         ofs19:
         iffalse ofs20
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"value")
         getlocal 4
         pushstring "\nNEW BEST TIME - 100% "
         getlex QName(PackageNamespace(""),"GameTimeDisplay")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"formatExact"), 1
         add
         add
         coerce_a
         setlocal 4
         ofs20:
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"hasWonGame")
         not
         iffalse ofs3
         getlocal 4
         pushstring "\nBOSS RUSH UNLOCKED!"
         add
         coerce_a
         setlocal 4
         getlex QName(PackageNamespace(""),"player")
         pushtrue
         setproperty QName(PackageNamespace(""),"hasWonGame")
         ofs3:
         getlex QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"areaName")
         getlocal 4
         callpropvoid QName(PackageNamespace(""),"setArea"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function showBossRushName(param1:int, param2:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"showBossRushName")
         flag FINAL
         dispid 26
         method
         name "PlayState:showBossRushName"
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "_loc3_", 2, 640
         pushstring "there is no boss #0"
         pushstring "SUPER SHELLBREAKER"
         pushstring "VIS VIRES"
         pushstring "TIME CUBE"
         pushstring "SUN SNAIL"
         newarray 5
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         getlex QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"areaName")
         getlocal3
         getlocal1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         getlocal2
         not
         not
         iffalse ofs0
         pushstring " DEFEATED!"
         jump ofs1
         ofs0:
         pushstring ""
         ofs1:
         add
         callpropvoid QName(PackageNamespace(""),"setArea"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function bossRushComplete() : void
      {
         trait method QName(PackageNamespace(""),"bossRushComplete")
         flag FINAL
         dispid 27
         method
         name "PlayState:bossRushComplete"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         debug 1, "_loc1_", 0, 647
         getlex QName(PackageNamespace(""),"player")
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 60
         subtract
         setproperty QName(PackageNamespace(""),"x")
         getglobalscope
         getslot 1
         getproperty QName(PackageNamespace(""),"saveData")
         coerce QName(PackageNamespace(""),"SaveData")
         setlocal1
         getlocal1
         callpropvoid QName(PackageNamespace(""),"loadAll"), 0
         getlocal1
         pushstring "hasWonBossRush"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         not
         iffalse ofs0
         getlocal1
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         deleteproperty Multiname("hasWonBossRush",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWonBossRush"
         pushstring ">true</hasWonBossRush>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")]), 1
         getlex QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"areaName")
         pushstring "BOSS RUSH COMPLETE - "
         getlex QName(PackageNamespace(""),"bossRushTimer")
         callproperty QName(PackageNamespace(""),"getTimeExact"), 0
         add
         pushstring "\nSLUG MODE UNLOCKED!"
         add
         callpropvoid QName(PackageNamespace(""),"setArea"), 1
         getlex QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"areaName")
         pushbyte 5
         callpropvoid QName(PackageNamespace(""),"increaseTimer"), 1
         jump ofs1
         ofs0:
         getlex QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"areaName")
         pushstring "BOSS RUSH COMPLETE - "
         getlex QName(PackageNamespace(""),"bossRushTimer")
         callproperty QName(PackageNamespace(""),"getTimeExact"), 0
         add
         callpropvoid QName(PackageNamespace(""),"setArea"), 1
         ofs1:
         getlocal1
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         getproperty Multiname("bestBossRushTime",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         pushbyte 0
         equals
         dup
         iftrue ofs2
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         getproperty Multiname("bestBossRushTime",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         getglobalscope
         getslot 1
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         getproperty QName(PackageNamespace(""),"now")
         getproperty QName(PackageNamespace(""),"value")
         greaterthan
         ofs2:
         iffalse ofs3
         getlocal1
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         getglobalscope
         getslot 1
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         getproperty QName(PackageNamespace(""),"now")
         getproperty QName(PackageNamespace(""),"value")
         setproperty Multiname("bestBossRushTime",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         ofs3:
         getlocal1
         callpropvoid QName(PackageNamespace(""),"saveAll"), 0
         getglobalscope
         getslot 1
         pushtrue
         setproperty QName(PackageNamespace(""),"isBossRushComplete")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method QName(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name "PlayState:destroy"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"aiTriggerPool")
         pushnull
         setproperty QName(PackageNamespace(""),"aiTriggerPool")
         findpropstrict QName(PackageNamespace(""),"boss2")
         pushnull
         setproperty QName(PackageNamespace(""),"boss2")
         findpropstrict QName(PackageNamespace(""),"boss2rush")
         pushnull
         setproperty QName(PackageNamespace(""),"boss2rush")
         findpropstrict QName(PackageNamespace(""),"boss4BulletGroups")
         pushnull
         setproperty QName(PackageNamespace(""),"boss4BulletGroups")
         findpropstrict QName(PackageNamespace(""),"boss4SecondFormBulletGroups")
         pushnull
         setproperty QName(PackageNamespace(""),"boss4SecondFormBulletGroups")
         findpropstrict QName(PackageNamespace(""),"bossBgLayer")
         pushnull
         setproperty QName(PackageNamespace(""),"bossBgLayer")
         findpropstrict QName(PackageNamespace(""),"bossRushTimer")
         pushnull
         setproperty QName(PackageNamespace(""),"bossRushTimer")
         findpropstrict QName(PackageNamespace(""),"bossesKilled")
         pushnull
         setproperty QName(PackageNamespace(""),"bossesKilled")
         findpropstrict QName(PackageNamespace(""),"controlHelp")
         pushnull
         setproperty QName(PackageNamespace(""),"controlHelp")
         findpropstrict QName(PackageNamespace(""),"dialogue")
         pushnull
         setproperty QName(PackageNamespace(""),"dialogue")
         findpropstrict QName(PackageNamespace(""),"doors")
         pushnull
         setproperty QName(PackageNamespace(""),"doors")
         findpropstrict QName(PackageNamespace(""),"emitters")
         pushnull
         setproperty QName(PackageNamespace(""),"emitters")
         findpropstrict QName(PackageNamespace(""),"enemies")
         pushnull
         setproperty QName(PackageNamespace(""),"enemies")
         findpropstrict QName(PackageNamespace(""),"enemiesNoCollide")
         pushnull
         setproperty QName(PackageNamespace(""),"enemiesNoCollide")
         findpropstrict QName(PackageNamespace(""),"bubbles")
         pushnull
         setproperty QName(PackageNamespace(""),"bubbles")
         findpropstrict QName(PackageNamespace(""),"damageNumberPool")
         pushnull
         setproperty QName(PackageNamespace(""),"damageNumberPool")
         findpropstrict QName(PackageNamespace(""),"enemyBulletPool")
         pushnull
         setproperty QName(PackageNamespace(""),"enemyBulletPool")
         findpropstrict QName(PackageNamespace(""),"explosionPool")
         pushnull
         setproperty QName(PackageNamespace(""),"explosionPool")
         findpropstrict QName(PackageNamespace(""),"itemRateHud")
         pushnull
         setproperty QName(PackageNamespace(""),"itemRateHud")
         findpropstrict QName(PackageNamespace(""),"hud")
         pushnull
         setproperty QName(PackageNamespace(""),"hud")
         findpropstrict QName(PackageNamespace(""),"items")
         pushnull
         setproperty QName(PackageNamespace(""),"items")
         findpropstrict QName(PackageNamespace(""),"mainMenu")
         pushnull
         setproperty QName(PackageNamespace(""),"mainMenu")
         findpropstrict QName(PackageNamespace(""),"miniMap")
         pushnull
         setproperty QName(PackageNamespace(""),"miniMap")
         findpropstrict QName(PackageNamespace(""),"npcs")
         pushnull
         setproperty QName(PackageNamespace(""),"npcs")
         findpropstrict QName(PackageNamespace(""),"player")
         pushnull
         setproperty QName(PackageNamespace(""),"player")
         findpropstrict QName(PackageNamespace(""),"playerBulletGroups")
         pushnull
         setproperty QName(PackageNamespace(""),"playerBulletGroups")
         findpropstrict QName(PackageNamespace(""),"saveData")
         pushnull
         setproperty QName(PackageNamespace(""),"saveData")
         findpropstrict QName(PackageNamespace(""),"savingText")
         pushnull
         setproperty QName(PackageNamespace(""),"savingText")
         findpropstrict QName(PackageNamespace(""),"solidItems")
         pushnull
         setproperty QName(PackageNamespace(""),"solidItems")
         findpropstrict QName(PackageNamespace(""),"sprites")
         pushnull
         setproperty QName(PackageNamespace(""),"sprites")
         findpropstrict QName(PackageNamespace(""),"starLayer")
         pushnull
         setproperty QName(PackageNamespace(""),"starLayer")
         findpropstrict QName(PackageNamespace(""),"snowLayer")
         pushnull
         setproperty QName(PackageNamespace(""),"snowLayer")
         findpropstrict QName(PackageNamespace(""),"menuHideable")
         pushnull
         setproperty QName(PackageNamespace(""),"menuHideable")
         findpropstrict QName(PackageNamespace(""),"gameTimeDisplay")
         pushnull
         setproperty QName(PackageNamespace(""),"gameTimeDisplay")
         findpropstrict QName(PackageNamespace(""),"zzz")
         pushnull
         setproperty QName(PackageNamespace(""),"zzz")
         findpropstrict QName(PackageNamespace(""),"bossRush")
         pushfalse
         setproperty QName(PackageNamespace(""),"bossRush")
         findpropstrict QName(PackageNamespace(""),"isBossRushComplete")
         pushfalse
         setproperty QName(PackageNamespace(""),"isBossRushComplete")
         getlex QName(PackageNamespace(""),"config")
         iffalse ofs0
         getlex QName(PackageNamespace(""),"config")
         callpropvoid QName(PackageNamespace(""),"destroy"), 0
         ofs0:
         getlex QName(PackageNamespace(""),"uniqueBlocks")
         iffalse ofs1
         getlex QName(PackageNamespace(""),"uniqueBlocks")
         callpropvoid QName(PackageNamespace(""),"destroy"), 0
         ofs1:
         getlex QName(PackageNamespace(""),"worldMap")
         iffalse ofs2
         getlex QName(PackageNamespace(""),"worldMap")
         callpropvoid QName(PackageNamespace(""),"destroy"), 0
         ofs2:
         getlex QName(PackageNamespace(""),"fixBlocks")
         iffalse ofs3
         getlex QName(PackageNamespace(""),"fixBlocks")
         callpropvoid QName(PackageNamespace(""),"destroy"), 0
         ofs3:
         findpropstrict QName(PackageNamespace(""),"config")
         pushnull
         setproperty QName(PackageNamespace(""),"config")
         findpropstrict QName(PackageNamespace(""),"uniqueBlocks")
         pushnull
         setproperty QName(PackageNamespace(""),"uniqueBlocks")
         findpropstrict QName(PackageNamespace(""),"worldMap")
         pushnull
         setproperty QName(PackageNamespace(""),"worldMap")
         findpropstrict QName(PackageNamespace(""),"fixBlocks")
         pushnull
         setproperty QName(PackageNamespace(""),"fixBlocks")
         getlocal0
         callsupervoid QName(PackageNamespace(""),"destroy"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function create() : void
      {
         trait method QName(PackageNamespace(""),"create")
         flag OVERRIDE
         dispid 0
         method
         name "PlayState:create"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"This")
         getlocal0
         setproperty QName(PackageNamespace(""),"This")
         findpropstrict QName(PackageNamespace(""),"goToMainMenu")
         callpropvoid QName(PackageNamespace(""),"goToMainMenu"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name "PlayState:update"
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 1
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         getlex QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_SPLASH")
         ifne ofs0
         getlex QName(PackageNamespace(""),"splashLayer")
         not
         iffalse ofs1
         findpropstrict QName(PackageNamespace(""),"splashLayer")
         findpropstrict QName(PackageNamespace(""),"SplashLayer")
         constructprop QName(PackageNamespace(""),"SplashLayer"), 0
         setproperty QName(PackageNamespace(""),"splashLayer")
         findpropstrict QName(PackageNamespace(""),"add")
         getlex QName(PackageNamespace(""),"splashLayer")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         jump ofs2
         ofs1:
         getlex QName(PackageNamespace(""),"splashLayer")
         getproperty QName(PackageNamespace(""),"dead")
         iffalse ofs2
         findpropstrict QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_MENU")
         setproperty QName(PackageNamespace(""),"realState")
         findpropstrict QName(PackageNamespace(""),"splashLayer")
         pushnull
         setproperty QName(PackageNamespace(""),"splashLayer")
         getlex QName(PackageNamespace(""),"Preloader")
         getproperty QName(PackageNamespace(""),"bg")
         pushfalse
         setproperty Multiname("visible",[PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         ofs2:
         returnvoid
         ofs0:
         getlex QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_MENU")
         ifne ofs3
         getlex QName(PackageNamespace(""),"menuHideable")
         iffalse ofs4
         getlex QName(PackageNamespace(""),"menuHideable")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         ofs4:
         getlex QName(PackageNamespace(""),"mainMenu")
         dup
         convert_b
         iffalse ofs5
         pop
         getlex QName(PackageNamespace(""),"mainMenu")
         getproperty QName(PackageNamespace(""),"endingShow")
         ofs5:
         iffalse ofs6
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"mouse")
         callpropvoid QName(PackageNamespace(""),"hide"), 0
         jump ofs7
         ofs6:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"mouse")
         callpropvoid QName(PackageNamespace(""),"show"), 0
         ofs7:
         getlex QName(PackageNamespace(""),"startedGame")
         not
         iffalse ofs8
         findpropstrict QName(PackageNamespace(""),"addTitleScreen")
         callpropvoid QName(PackageNamespace(""),"addTitleScreen"), 0
         ofs8:
         getlex QName(PackageNamespace(""),"mainMenu")
         not
         dup
         iftrue ofs9
         pop
         getlex QName(PackageNamespace(""),"mainMenu")
         getproperty QName(PackageNamespace(""),"active")
         not
         ofs9:
         iffalse ofs10
         findpropstrict QName(PackageNamespace(""),"mainMenu")
         findpropstrict QName(PackageNamespace(""),"MainMenu")
         constructprop QName(PackageNamespace(""),"MainMenu"), 0
         setproperty QName(PackageNamespace(""),"mainMenu")
         findpropstrict QName(PackageNamespace(""),"add")
         getlex QName(PackageNamespace(""),"mainMenu")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         ofs10:
         jump ofs11
         ofs3:
         getlex QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_ENDING")
         ifne ofs12
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"mouse")
         callpropvoid QName(PackageNamespace(""),"hide"), 0
         getlex QName(PackageNamespace(""),"ending")
         not
         dup
         iftrue ofs13
         pop
         getlex QName(PackageNamespace(""),"ending")
         getproperty QName(PackageNamespace(""),"active")
         not
         ofs13:
         iffalse ofs14
         findpropstrict QName(PackageNamespace(""),"ending")
         findpropstrict QName(PackageNamespace(""),"Ending")
         constructprop QName(PackageNamespace(""),"Ending"), 0
         setproperty QName(PackageNamespace(""),"ending")
         findpropstrict QName(PackageNamespace(""),"add")
         getlex QName(PackageNamespace(""),"ending")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         ofs14:
         jump ofs11
         ofs12:
         getlex QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_INTRO")
         ifne ofs15
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"mouse")
         callpropvoid QName(PackageNamespace(""),"hide"), 0
         getlex QName(PackageNamespace(""),"intro")
         not
         dup
         iftrue ofs16
         pop
         getlex QName(PackageNamespace(""),"intro")
         getproperty QName(PackageNamespace(""),"active")
         not
         ofs16:
         iffalse ofs17
         findpropstrict QName(PackageNamespace(""),"intro")
         findpropstrict QName(PackageNamespace(""),"Intro")
         constructprop QName(PackageNamespace(""),"Intro"), 0
         setproperty QName(PackageNamespace(""),"intro")
         findpropstrict QName(PackageNamespace(""),"add")
         getlex QName(PackageNamespace(""),"intro")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         ofs17:
         jump ofs11
         ofs15:
         getlex QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_SUBSCREEN")
         ifne ofs18
         getlex QName(PackageNamespace(""),"dialogue")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"areaName")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"radar")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         jump ofs11
         ofs18:
         getlex QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_GAME")
         ifne ofs11
         getlex QName(PackageNamespace(""),"menuHideable")
         pushtrue
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"areaName")
         pushtrue
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"radar")
         pushtrue
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace(""),"dialogue")
         pushtrue
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"mouse")
         callpropvoid QName(PackageNamespace(""),"hide"), 0
         getlex QName(PackageNamespace(""),"mainMenu")
         iffalse ofs19
         getlex QName(PackageNamespace(""),"mainMenu")
         pushfalse
         setproperty QName(PackageNamespace(""),"exists")
         getlex QName(PackageNamespace(""),"mainMenu")
         pushfalse
         setproperty QName(PackageNamespace(""),"active")
         getlex QName(PackageNamespace(""),"mainMenu")
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         findpropstrict QName(PackageNamespace(""),"mainMenu")
         pushnull
         setproperty QName(PackageNamespace(""),"mainMenu")
         ofs19:
         getlex QName(PackageNamespace(""),"ending")
         iffalse ofs20
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"fade")
         callpropvoid QName(PackageNamespace(""),"stop"), 0
         getlex QName(PackageNamespace(""),"ending")
         pushfalse
         setproperty QName(PackageNamespace(""),"exists")
         getlex QName(PackageNamespace(""),"ending")
         pushfalse
         setproperty QName(PackageNamespace(""),"active")
         getlex QName(PackageNamespace(""),"ending")
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         findpropstrict QName(PackageNamespace(""),"ending")
         pushnull
         setproperty QName(PackageNamespace(""),"ending")
         ofs20:
         getlex QName(PackageNamespace(""),"intro")
         iffalse ofs21
         getlex QName(PackageNamespace(""),"intro")
         pushfalse
         setproperty QName(PackageNamespace(""),"exists")
         getlex QName(PackageNamespace(""),"intro")
         pushfalse
         setproperty QName(PackageNamespace(""),"active")
         getlex QName(PackageNamespace(""),"intro")
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         findpropstrict QName(PackageNamespace(""),"intro")
         pushnull
         setproperty QName(PackageNamespace(""),"intro")
         ofs21:
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"bgmap")
         getlex QName(PackageNamespace(""),"playerBulletGroups")
         getproperty QName(PackageNamespace(""),"groups")
         pushbyte 0
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         callpropvoid QName(PackageNamespace(""),"collide"), 2
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"bgmap")
         getlex QName(PackageNamespace(""),"enemyBulletPool")
         getproperty QName(PackageNamespace(""),"groups")
         pushbyte 1
         getproperty MultinameL([PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageInternalNs(""),StaticProtectedNs("org.flixel:FlxState"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(":PlayState"),ProtectedNamespace(":PlayState"),StaticProtectedNs(":PlayState"),PrivateNamespace("PlayState.as$15")])
         callpropvoid QName(PackageNamespace(""),"collide"), 2
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"noCollide")
         not
         iffalse ofs22
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"bgmap")
         getlex QName(PackageNamespace(""),"player")
         callpropvoid QName(PackageNamespace(""),"collide"), 2
         ofs22:
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"bgmap")
         getlex QName(PackageNamespace(""),"npcs")
         callpropvoid QName(PackageNamespace(""),"collide"), 2
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"bgmap")
         getlex QName(PackageNamespace(""),"solidItems")
         callpropvoid QName(PackageNamespace(""),"collide"), 2
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"noCollide")
         not
         iffalse ofs23
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"player")
         getlex QName(PackageNamespace(""),"items")
         getlocal0
         getproperty QName(PackageNamespace(""),"overlapPlayerItem")
         callpropvoid QName(PackageNamespace(""),"overlap"), 3
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"player")
         getlex QName(PackageNamespace(""),"npcs")
         getlocal0
         getproperty QName(PackageNamespace(""),"overlapPlayerNpc")
         callpropvoid QName(PackageNamespace(""),"overlap"), 3
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"player")
         getlex QName(PackageNamespace(""),"enemies")
         getlocal0
         getproperty QName(PackageNamespace(""),"overlapPlayerEnemies")
         callpropvoid QName(PackageNamespace(""),"overlap"), 3
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"player")
         getlex QName(PackageNamespace(""),"enemiesNoCollide")
         getlocal0
         getproperty QName(PackageNamespace(""),"overlapPlayerEnemies")
         callpropvoid QName(PackageNamespace(""),"overlap"), 3
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"player")
         getlex QName(PackageNamespace(""),"solidItems")
         callpropvoid QName(PackageNamespace(""),"collide"), 2
         ofs23:
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"enemies")
         getlex QName(PackageNamespace(""),"solidItems")
         callpropvoid QName(PackageNamespace(""),"collide"), 2
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"enemyBulletPool")
         getlex QName(PackageNamespace(""),"player")
         getlocal0
         getproperty QName(PackageNamespace(""),"overlapEnemyBulletPlayer")
         callpropvoid QName(PackageNamespace(""),"overlap"), 3
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"playerBulletGroups")
         getlex QName(PackageNamespace(""),"enemiesNoCollide")
         getlocal0
         getproperty QName(PackageNamespace(""),"overlapBulletEnemies")
         callpropvoid QName(PackageNamespace(""),"overlap"), 3
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"playerBulletGroups")
         getlex QName(PackageNamespace(""),"enemies")
         getlocal0
         getproperty QName(PackageNamespace(""),"overlapBulletEnemies")
         callpropvoid QName(PackageNamespace(""),"overlap"), 3
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"playerBulletGroups")
         getlex QName(PackageNamespace(""),"solidItems")
         getlocal0
         getproperty QName(PackageNamespace(""),"overlapBulletItems")
         callpropvoid QName(PackageNamespace(""),"overlap"), 3
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"aiTriggerPool")
         getlex QName(PackageNamespace(""),"enemies")
         getlocal0
         getproperty QName(PackageNamespace(""),"overlapAiTriggersEnemies")
         callpropvoid QName(PackageNamespace(""),"overlap"), 3
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"aiTriggerPool")
         getlex QName(PackageNamespace(""),"enemiesNoCollide")
         getlocal0
         getproperty QName(PackageNamespace(""),"overlapAiTriggersEnemies")
         callpropvoid QName(PackageNamespace(""),"overlap"), 3
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"aiTriggerPool")
         getlex QName(PackageNamespace(""),"bubbles")
         getlocal0
         getproperty QName(PackageNamespace(""),"overlapAiTriggersEnemies")
         callpropvoid QName(PackageNamespace(""),"overlap"), 3
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"aiTriggerPool")
         getlex QName(PackageNamespace(""),"solidItems")
         getlocal0
         getproperty QName(PackageNamespace(""),"overlapAiTriggersSolidItems")
         callpropvoid QName(PackageNamespace(""),"overlap"), 3
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"bgmap")
         getlex QName(PackageNamespace(""),"enemies")
         callpropvoid QName(PackageNamespace(""),"collide"), 2
         getlex QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"dead")
         not
         iffalse ofs24
         getlex QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"player")
         callpropvoid QName(PackageNamespace(""),"checkRoomBounds"), 1
         ofs24:
         getlex QName(PackageNamespace(""),"player")
         callproperty QName(PackageNamespace(""),"pressedJump"), 0
         iffalse ofs25
         findpropstrict QName(PackageNamespace(""),"hasJumped")
         pushtrue
         setproperty QName(PackageNamespace(""),"hasJumped")
         ofs25:
         getlex QName(PackageNamespace(""),"bossRush")
         dup
         iffalse ofs26
         pop
         getlex QName(PackageNamespace(""),"isBossRushComplete")
         ofs26:
         iffalse ofs27
         findpropstrict QName(PackageNamespace(""),"bossRushCompleteTimeout")
         getlex QName(PackageNamespace(""),"bossRushCompleteTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         setproperty QName(PackageNamespace(""),"bossRushCompleteTimeout")
         getlex QName(PackageNamespace(""),"bossRushCompleteTimeout")
         pushdouble 0.4
         lessequals
         dup
         iffalse ofs28
         pop
         getlex QName(PackageNamespace(""),"bossRushFade")
         not
         ofs28:
         iffalse ofs29
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"fade")
         pushint -16777216
         pushdouble 0.34
         callpropvoid QName(PackageNamespace(""),"start"), 2
         findpropstrict QName(PackageNamespace(""),"bossRushFade")
         pushtrue
         setproperty QName(PackageNamespace(""),"bossRushFade")
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockTheGauntlet"), 0
         ofs29:
         getlex QName(PackageNamespace(""),"bossRushCompleteTimeout")
         pushbyte 0
         ifnle ofs27
         findpropstrict QName(PackageNamespace(""),"startedGame")
         pushfalse
         setproperty QName(PackageNamespace(""),"startedGame")
         findpropstrict QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_MENU")
         setproperty QName(PackageNamespace(""),"realState")
         findpropstrict QName(PackageNamespace(""),"bossRushFade")
         pushfalse
         setproperty QName(PackageNamespace(""),"bossRushFade")
         findpropstrict QName(PackageNamespace(""),"isBossRushComplete")
         pushfalse
         setproperty QName(PackageNamespace(""),"isBossRushComplete")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"fade")
         callpropvoid QName(PackageNamespace(""),"stop"), 0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"flash")
         pushint -16777216
         pushdouble 0.34
         callpropvoid QName(PackageNamespace(""),"start"), 2
         findpropstrict QName(PackageNamespace(""),"bossRush")
         pushfalse
         setproperty QName(PackageNamespace(""),"bossRush")
         ofs27:
         getlex QName(PackageNamespace(""),"bossRush")
         not
         dup
         iffalse ofs30
         pop
         getlex QName(PackageNamespace(""),"isGameComplete")
         ofs30:
         iffalse ofs31
         findpropstrict QName(PackageNamespace(""),"gameCompleteTimeout")
         getlex QName(PackageNamespace(""),"gameCompleteTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         setproperty QName(PackageNamespace(""),"gameCompleteTimeout")
         getlex QName(PackageNamespace(""),"gameCompleteTimeout")
         pushdouble 2.8
         lessequals
         dup
         iffalse ofs32
         pop
         getlex QName(PackageNamespace(""),"gameFade")
         not
         ofs32:
         iffalse ofs33
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockVictory"), 0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"music")
         getlex QName(PackageNamespace(""),"gameCompleteTimeout")
         callpropvoid QName(PackageNamespace(""),"fadeOut"), 1
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"fade")
         pushint -16777216
         getlex QName(PackageNamespace(""),"gameCompleteTimeout")
         callpropvoid QName(PackageNamespace(""),"start"), 2
         findpropstrict QName(PackageNamespace(""),"gameFade")
         pushtrue
         setproperty QName(PackageNamespace(""),"gameFade")
         ofs33:
         getlex QName(PackageNamespace(""),"gameCompleteTimeout")
         pushbyte 0
         ifnle ofs31
         findpropstrict QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"STATE_ENDING")
         setproperty QName(PackageNamespace(""),"realState")
         findpropstrict QName(PackageNamespace(""),"gameFade")
         pushfalse
         setproperty QName(PackageNamespace(""),"gameFade")
         findpropstrict QName(PackageNamespace(""),"isGameComplete")
         pushfalse
         setproperty QName(PackageNamespace(""),"isGameComplete")
         ofs31:
         getlex QName(PackageNamespace(""),"fxStompActive")
         iffalse ofs11
         findpropstrict QName(PackageNamespace(""),"fxStompTimeout")
         getlex QName(PackageNamespace(""),"fxStompTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         setproperty QName(PackageNamespace(""),"fxStompTimeout")
         getlex QName(PackageNamespace(""),"fxStompTimeout")
         pushbyte 0
         ifnle ofs11
         findpropstrict QName(PackageNamespace(""),"fxStompTimeout")
         getlex QName(PackageNamespace(""),"fxStompTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         callproperty QName(PackageNamespace(""),"random"), 0
         pushbyte 6
         multiply
         add
         setproperty QName(PackageNamespace(""),"fxStompTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"quake")
         pushdouble 0.005
         callpropvoid QName(PackageNamespace(""),"start"), 1
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playStomp"), 0
         ofs11:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function overlapPlayerNpc(param1:FlxObject, param2:FlxObject) : void
      {
         trait method QName(PackageNamespace(""),"overlapPlayerNpc")
         dispid 0
         method
         name "PlayState:overlapPlayerNpc"
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "_loc3_", 2, 917
         debug 1, "_loc4_", 3, 918
         pushnull
         coerce QName(PackageNamespace(""),"Player")
         setlocal3
         pushnull
         coerce QName(PackageNamespace(""),"Npc")
         setlocal 4
         getlocal1
         getlex QName(PackageNamespace(""),"Player")
         istypelate
         dup
         iffalse ofs0
         pop
         getlocal2
         getlex QName(PackageNamespace(""),"Npc")
         istypelate
         ofs0:
         iffalse ofs1
         getlocal1
         getlex QName(PackageNamespace(""),"Player")
         astypelate
         coerce QName(PackageNamespace(""),"Player")
         setlocal3
         getlocal2
         getlex QName(PackageNamespace(""),"Npc")
         astypelate
         coerce QName(PackageNamespace(""),"Npc")
         dup
         setlocal 4
         getlocal3
         callpropvoid QName(PackageNamespace(""),"touch"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function overlapPlayerItem(param1:FlxObject, param2:FlxObject) : void
      {
         trait method QName(PackageNamespace(""),"overlapPlayerItem")
         dispid 0
         method
         name "PlayState:overlapPlayerItem"
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "_loc3_", 2, 928
         debug 1, "_loc4_", 3, 929
         pushnull
         coerce QName(PackageNamespace(""),"Player")
         setlocal3
         pushnull
         coerce QName(PackageNamespace(""),"Item")
         setlocal 4
         getlocal1
         getlex QName(PackageNamespace(""),"Player")
         istypelate
         dup
         iffalse ofs0
         pop
         getlocal2
         getlex QName(PackageNamespace(""),"Item")
         istypelate
         ofs0:
         iffalse ofs1
         getlocal1
         getlex QName(PackageNamespace(""),"Player")
         astypelate
         coerce QName(PackageNamespace(""),"Player")
         setlocal3
         getlocal2
         getlex QName(PackageNamespace(""),"Item")
         astypelate
         coerce QName(PackageNamespace(""),"Item")
         dup
         setlocal 4
         getlocal3
         callpropvoid QName(PackageNamespace(""),"touch"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function overlapBulletEnemies(param1:FlxObject, param2:FlxObject) : void
      {
         trait method QName(PackageNamespace(""),"overlapBulletEnemies")
         dispid 0
         method
         name "PlayState:overlapBulletEnemies"
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "_loc3_", 2, 939
         debug 1, "_loc4_", 3, 940
         pushnull
         coerce QName(PackageNamespace(""),"PlayerBullet")
         setlocal3
         pushnull
         coerce QName(PackageNamespace(""),"Enemy")
         setlocal 4
         getlocal1
         getlex QName(PackageNamespace(""),"PlayerBullet")
         istypelate
         dup
         iffalse ofs0
         pop
         getlocal2
         getlex QName(PackageNamespace(""),"Enemy")
         istypelate
         ofs0:
         iffalse ofs1
         getlocal1
         getlex QName(PackageNamespace(""),"PlayerBullet")
         astypelate
         coerce QName(PackageNamespace(""),"PlayerBullet")
         setlocal3
         getlocal2
         getlex QName(PackageNamespace(""),"Enemy")
         astypelate
         coerce QName(PackageNamespace(""),"Enemy")
         setlocal 4
         getlocal3
         getlocal 4
         callpropvoid QName(PackageNamespace(""),"hitEnemy"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function overlapEnemyBulletPlayer(param1:FlxObject, param2:FlxObject) : void
      {
         trait method QName(PackageNamespace(""),"overlapEnemyBulletPlayer")
         dispid 0
         method
         name "PlayState:overlapEnemyBulletPlayer"
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "_loc3_", 2, 951
         debug 1, "_loc4_", 3, 952
         pushnull
         coerce QName(PackageNamespace(""),"EnemyBullet")
         setlocal3
         pushnull
         coerce QName(PackageNamespace(""),"Player")
         setlocal 4
         getlocal1
         getlex QName(PackageNamespace(""),"EnemyBullet")
         istypelate
         dup
         iffalse ofs0
         pop
         getlocal2
         getlex QName(PackageNamespace(""),"Player")
         istypelate
         ofs0:
         iffalse ofs1
         getlocal1
         getlex QName(PackageNamespace(""),"EnemyBullet")
         astypelate
         coerce QName(PackageNamespace(""),"EnemyBullet")
         setlocal3
         getlocal2
         getlex QName(PackageNamespace(""),"Player")
         astypelate
         coerce QName(PackageNamespace(""),"Player")
         setlocal 4
         getlocal3
         getlocal 4
         callpropvoid QName(PackageNamespace(""),"hitPlayer"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function overlapPlayerEnemies(param1:FlxObject, param2:FlxObject) : void
      {
         trait method QName(PackageNamespace(""),"overlapPlayerEnemies")
         dispid 0
         method
         name "PlayState:overlapPlayerEnemies"
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "_loc3_", 2, 963
         debug 1, "_loc4_", 3, 964
         pushnull
         coerce QName(PackageNamespace(""),"Player")
         setlocal3
         pushnull
         coerce QName(PackageNamespace(""),"Enemy")
         setlocal 4
         getlocal1
         getlex QName(PackageNamespace(""),"Player")
         istypelate
         dup
         iffalse ofs0
         pop
         getlocal2
         getlex QName(PackageNamespace(""),"Enemy")
         istypelate
         ofs0:
         iffalse ofs1
         getlocal1
         getlex QName(PackageNamespace(""),"Player")
         astypelate
         coerce QName(PackageNamespace(""),"Player")
         setlocal3
         getlocal2
         getlex QName(PackageNamespace(""),"Enemy")
         astypelate
         coerce QName(PackageNamespace(""),"Enemy")
         dup
         setlocal 4
         getlocal3
         callpropvoid QName(PackageNamespace(""),"touch"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function overlapBulletItems(param1:FlxObject, param2:FlxObject) : void
      {
         trait method QName(PackageNamespace(""),"overlapBulletItems")
         dispid 0
         method
         name "PlayState:overlapBulletItems"
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "_loc3_", 2, 974
         debug 1, "_loc4_", 3, 975
         pushnull
         coerce QName(PackageNamespace(""),"PlayerBullet")
         setlocal3
         pushnull
         coerce QName(PackageNamespace(""),"Item")
         setlocal 4
         getlocal1
         getlex QName(PackageNamespace(""),"PlayerBullet")
         istypelate
         dup
         iffalse ofs0
         pop
         getlocal2
         getlex QName(PackageNamespace(""),"Item")
         istypelate
         ofs0:
         iffalse ofs1
         getlocal1
         getlex QName(PackageNamespace(""),"PlayerBullet")
         astypelate
         coerce QName(PackageNamespace(""),"PlayerBullet")
         setlocal3
         getlocal2
         getlex QName(PackageNamespace(""),"Item")
         astypelate
         coerce QName(PackageNamespace(""),"Item")
         setlocal 4
         getlocal3
         getlocal 4
         callpropvoid QName(PackageNamespace(""),"hitItem"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function overlapAiTriggersEnemies(param1:FlxObject, param2:FlxObject) : void
      {
         trait method QName(PackageNamespace(""),"overlapAiTriggersEnemies")
         dispid 0
         method
         name "PlayState:overlapAiTriggersEnemies"
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "_loc3_", 2, 986
         debug 1, "_loc4_", 3, 987
         pushnull
         coerce QName(PackageNamespace(""),"AiTrigger")
         setlocal3
         pushnull
         coerce QName(PackageNamespace(""),"Enemy")
         setlocal 4
         getlocal1
         getlex QName(PackageNamespace(""),"AiTrigger")
         istypelate
         dup
         iffalse ofs0
         pop
         getlocal2
         getlex QName(PackageNamespace(""),"Enemy")
         istypelate
         ofs0:
         iffalse ofs1
         getlocal1
         getlex QName(PackageNamespace(""),"AiTrigger")
         astypelate
         coerce QName(PackageNamespace(""),"AiTrigger")
         setlocal3
         getlocal2
         getlex QName(PackageNamespace(""),"Enemy")
         astypelate
         coerce QName(PackageNamespace(""),"Enemy")
         dup
         setlocal 4
         getlocal3
         callproperty QName(PackageNamespace(""),"getNumber"), 0
         callpropvoid QName(PackageNamespace(""),"triggerAi"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function overlapAiTriggersSolidItems(param1:FlxObject, param2:FlxObject) : void
      {
         trait method QName(PackageNamespace(""),"overlapAiTriggersSolidItems")
         dispid 0
         method
         name "PlayState:overlapAiTriggersSolidItems"
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         debug 1, "param1", 0, 0
         debug 1, "param2", 1, 0
         debug 1, "_loc3_", 2, 997
         debug 1, "_loc4_", 3, 998
         pushnull
         coerce QName(PackageNamespace(""),"AiTrigger")
         setlocal3
         pushnull
         coerce QName(PackageNamespace(""),"Item")
         setlocal 4
         getlocal1
         getlex QName(PackageNamespace(""),"AiTrigger")
         istypelate
         dup
         iffalse ofs0
         pop
         getlocal2
         getlex QName(PackageNamespace(""),"Item")
         istypelate
         ofs0:
         iffalse ofs1
         getlocal1
         getlex QName(PackageNamespace(""),"AiTrigger")
         astypelate
         coerce QName(PackageNamespace(""),"AiTrigger")
         setlocal3
         getlocal2
         getlex QName(PackageNamespace(""),"Item")
         astypelate
         coerce QName(PackageNamespace(""),"Item")
         dup
         setlocal 4
         getlocal3
         callproperty QName(PackageNamespace(""),"getNumber"), 0
         callpropvoid QName(PackageNamespace(""),"triggerAi"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
