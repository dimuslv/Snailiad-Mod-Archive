
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("UniqueItem",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace(""),"Item")
   pushscope
   getlex QName(PackageNamespace(""),"Item")
   newclass #UniqueItem
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"UniqueItem")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   
   public class UniqueItem extends Item
   {
      
      private static const HOLD_TIMEOUT:int = 2.0;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#UniqueItem"),"HOLD_TIMEOUT")
         pushbyte 2
         initproperty QName(PrivateNamespace(null,"#UniqueItem"),"HOLD_TIMEOUT")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _origX:int;
      
      private var _origY:int;
      
      private var gotten:Boolean = false;
      
      private var disappearTime:Number = 0;
      
      public function UniqueItem(param1:int, param2:int, param3:Boolean = false)
      {
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         pushfalse
         constructsuper 3
         findproperty QName(PackageNamespace(""),"x")
         getlocal1
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal2
         initproperty QName(PackageNamespace(""),"y")
         getlocal3
         iftrue ofs0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         getlocal1
         getlocal2
         callpropvoid QName(PackageNamespace(""),"setSpecialItem"), 2
         ofs0:
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         initproperty QName(PrivateNamespace(null,"#UniqueItem"),"_origX")
         getlocal0
         getlex QName(PackageNamespace(""),"y")
         initproperty QName(PrivateNamespace(null,"#UniqueItem"),"_origY")
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#UniqueItem"),"gotten")
         findproperty QName(PackageNamespace(""),"active")
         pushtrue
         initproperty QName(PackageNamespace(""),"active")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UniqueItem"),"gotten")
         iffalse ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UniqueItem"),"_origX")
         pushbyte 16
         divide
         convert_i
         setlocal2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UniqueItem"),"_origY")
         pushbyte 16
         divide
         convert_i
         setlocal3
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"spmap")
         getlocal2
         getlocal3
         pushbyte 0
         callpropvoid Multiname("setTile",[PrivateNamespace(null,"#UniqueItem"),PackageNamespace(""),PrivateNamespace(null,"#UniqueItem/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("UniqueItem"),StaticProtectedNs("UniqueItem"),StaticProtectedNs("Item"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 3
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UniqueItem"),"_origX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UniqueItem"),"_origY")
         callpropvoid QName(PackageNamespace(""),"setSpecialItemGotten"), 2
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         iftrue ofs1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"uniqueBlocks")
         getlocal2
         getlocal3
         callpropvoid QName(PackageNamespace(""),"rememberBlock"), 2
         ofs1:
         findproperty QName(PackageNamespace(""),"solid")
         pushfalse
         initproperty QName(PackageNamespace(""),"solid")
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UniqueItem"),"gotten")
         getlocal0
         getlex QName(PrivateNamespace(null,"#UniqueItem"),"HOLD_TIMEOUT")
         initproperty QName(PrivateNamespace(null,"#UniqueItem"),"disappearTime")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         iffalse ofs2
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playPickup4"), 0
         jump ofs3
         ofs2:
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playItemJingle"), 0
         ofs3:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         callpropvoid QName(PackageNamespace(""),"saveNoCoords"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UniqueItem"),"gotten")
         iffalse ofs1
         jump ofs2
         ofs3:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         subtract
         initproperty QName(PackageNamespace(""),"y")
         jump ofs4
         ofs5:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"height")
         add
         initproperty QName(PackageNamespace(""),"y")
         jump ofs4
         ofs6:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"width")
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         initproperty QName(PackageNamespace(""),"y")
         jump ofs4
         ofs7:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         initproperty QName(PackageNamespace(""),"y")
         jump ofs4
         ofs8:
         label
         jump ofs4
         ofs2:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal1
         getlex QName(PackageNamespace(""),"Player")
         getproperty QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs9
         pushbyte 0
         jump ofs10
         ofs9:
         getlex QName(PackageNamespace(""),"Player")
         getproperty QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs11
         pushbyte 1
         jump ofs10
         ofs11:
         getlex QName(PackageNamespace(""),"Player")
         getproperty QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs12
         pushbyte 2
         jump ofs10
         ofs12:
         getlex QName(PackageNamespace(""),"Player")
         getproperty QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs13
         pushbyte 3
         jump ofs10
         ofs13:
         jump ofs14
         pushbyte 4
         jump ofs14
         ofs14:
         pushbyte 4
         ofs10:
         kill 1
         lookupswitch ofs8, [ofs3, ofs5, ofs6, ofs7, ofs8]
         ofs4:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UniqueItem"),"disappearTime")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#UniqueItem"),"disappearTime")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UniqueItem"),"disappearTime")
         pushbyte 0
         ifnlt ofs15
         findpropstrict QName(PackageNamespace(""),"kill")
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         ofs15:
         jump ofs16
         ofs1:
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"maxX")
         greaterthan
         dup
         iftrue ofs17
         pop
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         add
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"minX")
         lessthan
         ofs17:
         dup
         iftrue ofs18
         pop
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"maxY")
         greaterthan
         ofs18:
         dup
         iftrue ofs19
         pop
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         add
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getproperty QName(PackageNamespace(""),"minY")
         lessthan
         ofs19:
         iffalse ofs16
         findpropstrict QName(PackageNamespace(""),"kill")
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         ofs16:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
