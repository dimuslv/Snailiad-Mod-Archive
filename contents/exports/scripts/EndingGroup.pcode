
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 7
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("EndingGroup",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxGroup")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxGroup")
   newclass #EndingGroup
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"EndingGroup")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   import org.flixel.FlxGroup;
   
   public class EndingGroup extends FlxGroup
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var picture:EndingPicture;
      
      public var bg:EndingBg;
      
      public var elapsed:Number = 0;
      
      public function EndingGroup(param1:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         getlocal0
         findpropstrict QName(PackageNamespace(""),"EndingPicture")
         getlocal1
         constructprop QName(PackageNamespace(""),"EndingPicture"), 1
         initproperty QName(PackageNamespace(""),"picture")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"EndingBg")
         constructprop QName(PackageNamespace(""),"EndingBg"), 0
         initproperty QName(PackageNamespace(""),"bg")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"updatePositions"), 0
         findpropstrict QName(PackageNamespace(""),"add")
         getlocal0
         getproperty QName(PackageNamespace(""),"bg")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         findpropstrict QName(PackageNamespace(""),"add")
         getlocal0
         getproperty QName(PackageNamespace(""),"picture")
         callpropvoid QName(PackageNamespace(""),"add"), 1
         findproperty QName(PackageNamespace(""),"active")
         pushtrue
         initproperty QName(PackageNamespace(""),"active")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method QName(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         callsupervoid QName(PackageNamespace(""),"destroy"), 0
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"picture")
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"bg")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function updatePositions() : void
      {
         trait method QName(PackageNamespace(""),"updatePositions")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         pushbyte 0
         setlocal1
         pushbyte -30
         getlocal0
         getproperty QName(PackageNamespace(""),"elapsed")
         pushbyte 10
         multiply
         add
         convert_i
         setlocal1
         getlocal1
         pushbyte 0
         ifngt ofs0
         pushbyte 0
         setlocal1
         ofs0:
         pushbyte 30
         getlocal0
         getproperty QName(PackageNamespace(""),"elapsed")
         pushbyte 10
         multiply
         subtract
         convert_i
         setlocal2
         getlocal2
         pushbyte 0
         ifnlt ofs1
         pushbyte 0
         setlocal2
         ofs1:
         getlocal0
         getproperty QName(PackageNamespace(""),"bg")
         getlocal2
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"picture")
         getlocal1
         setproperty QName(PackageNamespace(""),"x")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"elapsed")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         add
         initproperty QName(PackageNamespace(""),"elapsed")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"updatePositions"), 0
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
