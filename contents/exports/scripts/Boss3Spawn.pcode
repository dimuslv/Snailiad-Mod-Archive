
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("Boss3Spawn",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   newclass #Boss3Spawn
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"Boss3Spawn")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   import org.flixel.FlxObject;
   
   public class Boss3Spawn extends Enemy
   {
      
      private static const IMG_WIDTH:int = 64;
      
      private static const IMG_HEIGHT:int = 64;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 0;
      
      private static const MAX_HP:int = 250;
      
      private static const DEFENSE:int = 9;
      
      private static const OFFENSE:int = 4;
      
      private static const MODE_TIMEOUT:Number = 0.6;
      
      private static const MODE_WAIT:int = 1;
      
      private static const MODE_UP:int = 2;
      
      private static const MODE_DOWN:int = 3;
      
      private static const MODE_LEFT:int = 4;
      
      private static const MODE_RIGHT:int = 5;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"IMG_WIDTH")
         pushbyte 64
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"IMG_WIDTH")
         findproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"IMG_HEIGHT")
         pushbyte 64
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"IMG_HEIGHT")
         findproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"IMG_OFS_X")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"IMG_OFS_X")
         findproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"IMG_OFS_Y")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"IMG_OFS_Y")
         findproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"MAX_HP")
         pushshort 250
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"MAX_HP")
         findproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"DEFENSE")
         pushbyte 9
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"DEFENSE")
         findproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"OFFENSE")
         pushbyte 4
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"OFFENSE")
         findproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_TIMEOUT")
         pushdouble 0.6
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_TIMEOUT")
         findproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_WAIT")
         pushbyte 1
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_WAIT")
         findproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_UP")
         pushbyte 2
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_UP")
         findproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_DOWN")
         pushbyte 3
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_DOWN")
         findproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_LEFT")
         pushbyte 4
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_LEFT")
         findproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_RIGHT")
         pushbyte 5
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_RIGHT")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _modeTimeout:Number = 0.6;
      
      private var _lastMode:int = 1;
      
      private var _mode:int = 1;
      
      private var _attackMode:int = 0;
      
      private var ACCEL:Number = 400;
      
      public function Boss3Spawn(param1:int, param2:int, param3:int, param4:Boolean)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 5
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MAX_HP")
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"DEFENSE")
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"OFFENSE")
         constructsuper 5
         getlocal0
         getlocal3
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_attackMode")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_attackMode")
         pushbyte 1
         ifne ofs0
         getlocal0
         pushshort 500
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"ACCEL")
         ofs0:
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"Boss3Spawn")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         getlocal 4
         iffalse ofs1
         getlocal0
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_UP")
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_lastMode")
         jump ofs2
         ofs1:
         getlocal0
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_LEFT")
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_lastMode")
         ofs2:
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "start0"
         pushbyte 0
         pushbyte 1
         pushbyte 2
         pushbyte 3
         newarray 4
         pushbyte 20
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "start1"
         pushbyte 4
         pushbyte 5
         pushbyte 6
         pushbyte 7
         newarray 4
         pushbyte 20
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "stay1"
         pushbyte 7
         newarray 1
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 2
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "start"
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_attackMode")
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function stomp() : void
      {
         trait method QName(PackageNamespace(""),"stomp")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         callproperty QName(PackageNamespace(""),"abs"), 1
         pushbyte 100
         greaterthan
         dup
         iftrue ofs0
         pop
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         callproperty QName(PackageNamespace(""),"abs"), 1
         pushbyte 100
         greaterthan
         ofs0:
         iffalse ofs1
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"quake")
         pushdouble 0.02
         callpropvoid QName(PackageNamespace(""),"start"), 1
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playStomp"), 0
         ofs1:
         getlex QName(PackageNamespace(""),"acceleration")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"acceleration")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_mode")
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_lastMode")
         getlocal0
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_WAIT")
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_mode")
         getlocal0
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_TIMEOUT")
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_modeTimeout")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function makeBlue() : void
      {
         trait method QName(PackageNamespace(""),"makeBlue")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "stay1"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         getlocal0
         pushshort 500
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"ACCEL")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitSide(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitSide")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         callpropvoid QName(PackageNamespace(""),"stomp"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitBottom(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitBottom")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         callpropvoid QName(PackageNamespace(""),"stomp"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitTop(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitTop")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         callpropvoid QName(PackageNamespace(""),"stomp"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"touch"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function attackUp() : void
      {
         trait method QName(PackageNamespace(""),"attackUp")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_mode")
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_lastMode")
         getlocal0
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_UP")
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_mode")
         getlex QName(PackageNamespace(""),"acceleration")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"ACCEL")
         negate
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function attackDown() : void
      {
         trait method QName(PackageNamespace(""),"attackDown")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_mode")
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_lastMode")
         getlocal0
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_DOWN")
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_mode")
         getlex QName(PackageNamespace(""),"acceleration")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"ACCEL")
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function attackLeft() : void
      {
         trait method QName(PackageNamespace(""),"attackLeft")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_mode")
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_lastMode")
         getlocal0
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_LEFT")
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_mode")
         getlex QName(PackageNamespace(""),"acceleration")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"ACCEL")
         negate
         setproperty QName(PackageNamespace(""),"x")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function attackRight() : void
      {
         trait method QName(PackageNamespace(""),"attackRight")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_mode")
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_lastMode")
         getlocal0
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_RIGHT")
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_mode")
         getlex QName(PackageNamespace(""),"acceleration")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"ACCEL")
         setproperty QName(PackageNamespace(""),"x")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkMode() : void
      {
         trait method QName(PackageNamespace(""),"checkMode")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_modeTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_modeTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_mode")
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_WAIT")
         equals
         dup
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_modeTimeout")
         pushbyte 0
         lessthan
         ofs0:
         iffalse ofs1
         jump ofs2
         ofs3:
         label
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         ifnlt ofs4
         getlocal0
         callpropvoid QName(PackageNamespace(""),"attackUp"), 0
         jump ofs5
         ofs4:
         getlocal0
         callpropvoid QName(PackageNamespace(""),"attackDown"), 0
         ofs5:
         jump ofs1
         ofs6:
         label
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         ifnlt ofs7
         getlocal0
         callpropvoid QName(PackageNamespace(""),"attackLeft"), 0
         jump ofs8
         ofs7:
         getlocal0
         callpropvoid QName(PackageNamespace(""),"attackRight"), 0
         ofs8:
         jump ofs1
         ofs9:
         label
         jump ofs1
         ofs2:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Boss3Spawn"),"_lastMode")
         setlocal1
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_WAIT")
         getlocal1
         ifstrictne ofs10
         pushbyte 0
         jump ofs11
         ofs10:
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_RIGHT")
         getlocal1
         ifstrictne ofs12
         pushbyte 1
         jump ofs11
         ofs12:
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_LEFT")
         getlocal1
         ifstrictne ofs13
         pushbyte 2
         jump ofs11
         ofs13:
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_UP")
         getlocal1
         ifstrictne ofs14
         pushbyte 3
         jump ofs11
         ofs14:
         getlex QName(PrivateNamespace(null,"#Boss3Spawn"),"MODE_DOWN")
         getlocal1
         ifstrictne ofs15
         pushbyte 4
         jump ofs11
         ofs15:
         jump ofs16
         pushbyte 5
         jump ofs16
         ofs16:
         pushbyte 5
         ofs11:
         kill 1
         lookupswitch ofs9, [ofs3, ofs3, ofs3, ofs6, ofs6, ofs9]
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkMode"), 0
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function kill() : void
      {
         trait method QName(PackageNamespace(""),"kill")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         callsupervoid QName(PackageNamespace(""),"kill"), 0
         findproperty QName(PackageNamespace(""),"dead")
         pushtrue
         initproperty QName(PackageNamespace(""),"dead")
         findproperty QName(PackageNamespace(""),"exists")
         pushfalse
         initproperty QName(PackageNamespace(""),"exists")
         findproperty QName(PackageNamespace(""),"active")
         pushfalse
         initproperty QName(PackageNamespace(""),"active")
         findproperty QName(PackageNamespace(""),"visible")
         pushfalse
         initproperty QName(PackageNamespace(""),"visible")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hurt(param1:Number) : void
      {
         trait method QName(PackageNamespace(""),"hurt")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"hurt"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
