
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("StyleManager",[PackageNamespace("mx.styles")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #StyleManager
   popscope
   initproperty QName(PackageNamespace("mx.styles"),"StyleManager")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.styles
{
   import flash.events.IEventDispatcher;
   import flash.system.ApplicationDomain;
   import flash.system.SecurityDomain;
   import mx.core.IFlexModuleFactory;
   import mx.core.Singleton;
   import mx.core.mx_internal;
   import mx.managers.SystemManagerGlobals;
   
   use namespace mx_internal;
   
   public class StyleManager
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      public static const NOT_A_COLOR:uint = 4.294967295E9;
      
      private static var implClassDependency:StyleManagerImpl;
      
      private static var _impl:IStyleManager2;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         findproperty QName(PackageNamespace(""),"NOT_A_COLOR")
         pushdouble 4.294967295E9
         initproperty QName(PackageNamespace(""),"NOT_A_COLOR")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function StyleManager()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private static function get impl() : IStyleManager2
      {
         trait getter QName(PrivateNamespace(null,"#StyleManager"),"impl")
         flag FINAL
         dispid 3
         method
         name null
         returns QName(PackageNamespace("mx.styles"),"IStyleManager2")
         
         body
         maxstack 4
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"_impl")
         iftrue ofs0
         findproperty QName(PrivateNamespace(null,"#StyleManager"),"_impl")
         findpropstrict QName(PackageNamespace("mx.styles"),"IStyleManager2")
         getlex QName(PackageNamespace("mx.core"),"Singleton")
         pushstring "mx.styles::IStyleManager2"
         callproperty QName(PackageNamespace(""),"getInstance"), 1
         callproperty QName(PackageNamespace("mx.styles"),"IStyleManager2"), 1
         setproperty QName(PrivateNamespace(null,"#StyleManager"),"_impl")
         ofs0:
         getlex QName(PrivateNamespace(null,"#StyleManager"),"_impl")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getStyleManager(param1:IFlexModuleFactory) : IStyleManager2
      {
         trait method QName(PackageNamespace(""),"getStyleManager")
         flag FINAL
         dispid 4
         method
         name null
         param QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         returns QName(PackageNamespace("mx.styles"),"IStyleManager2")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         iftrue ofs0
         getlex QName(PackageNamespace("mx.managers"),"SystemManagerGlobals")
         getproperty QName(PackageNamespace(""),"topLevelSystemManagers")
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"#StyleManager"),PackageNamespace(""),PackageNamespace("mx.styles"),PrivateNamespace(null,"#StyleManager/1"),PackageInternalNs("mx.styles"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.styles:StyleManager"),StaticProtectedNs("mx.styles:StyleManager"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         setlocal1
         ofs0:
         findpropstrict QName(PackageNamespace("mx.styles"),"IStyleManager2")
         getlocal1
         pushstring "mx.styles::IStyleManager2"
         callproperty QName(Namespace("mx.core:IFlexModuleFactory"),"getImplementation"), 1
         callproperty QName(PackageNamespace("mx.styles"),"IStyleManager2"), 1
         coerce QName(PackageNamespace("mx.styles"),"IStyleManager2")
         setlocal2
         getlocal2
         pushnull
         ifne ofs1
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         coerce QName(PackageNamespace("mx.styles"),"IStyleManager2")
         setlocal2
         ofs1:
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal static function get stylesRoot() : Object
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"stylesRoot")
         flag FINAL
         dispid 5
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getproperty QName(Namespace("mx.styles:IStyleManager"),"stylesRoot")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal static function set stylesRoot(param1:Object) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"stylesRoot")
         flag FINAL
         dispid 6
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         setproperty QName(Namespace("mx.styles:IStyleManager"),"stylesRoot")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal static function get inheritingStyles() : Object
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"inheritingStyles")
         flag FINAL
         dispid 7
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getproperty QName(Namespace("mx.styles:IStyleManager"),"inheritingStyles")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal static function set inheritingStyles(param1:Object) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"inheritingStyles")
         flag FINAL
         dispid 8
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         setproperty QName(Namespace("mx.styles:IStyleManager"),"inheritingStyles")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal static function get typeHierarchyCache() : Object
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"typeHierarchyCache")
         flag FINAL
         dispid 9
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getproperty QName(Namespace("mx.styles:IStyleManager2"),"typeHierarchyCache")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal static function set typeHierarchyCache(param1:Object) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"typeHierarchyCache")
         flag FINAL
         dispid 10
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         setproperty QName(Namespace("mx.styles:IStyleManager2"),"typeHierarchyCache")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal static function get typeSelectorCache() : Object
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"typeSelectorCache")
         flag FINAL
         dispid 11
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getproperty QName(Namespace("mx.styles:IStyleManager"),"typeSelectorCache")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal static function set typeSelectorCache(param1:Object) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"typeSelectorCache")
         flag FINAL
         dispid 12
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         setproperty QName(Namespace("mx.styles:IStyleManager"),"typeSelectorCache")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal static function initProtoChainRoots() : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"initProtoChainRoots")
         flag FINAL
         dispid 13
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         callpropvoid QName(Namespace("mx.styles:IStyleManager"),"initProtoChainRoots"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get selectors() : Array
      {
         trait getter QName(PackageNamespace(""),"selectors")
         flag FINAL
         dispid 14
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getproperty QName(Namespace("mx.styles:IStyleManager2"),"selectors")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getStyleDeclaration(param1:String) : CSSStyleDeclaration
      {
         trait method QName(PackageNamespace(""),"getStyleDeclaration")
         flag FINAL
         dispid 15
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         callproperty QName(Namespace("mx.styles:IStyleManager"),"getStyleDeclaration"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function setStyleDeclaration(param1:String, param2:CSSStyleDeclaration, param3:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setStyleDeclaration")
         flag FINAL
         dispid 16
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration")
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         getlocal2
         getlocal3
         callpropvoid QName(Namespace("mx.styles:IStyleManager"),"setStyleDeclaration"), 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function clearStyleDeclaration(param1:String, param2:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"clearStyleDeclaration")
         flag FINAL
         dispid 17
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         getlocal2
         callpropvoid QName(Namespace("mx.styles:IStyleManager"),"clearStyleDeclaration"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal static function styleDeclarationsChanged() : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"styleDeclarationsChanged")
         flag FINAL
         dispid 18
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         callpropvoid QName(Namespace("mx.styles:IStyleManager"),"styleDeclarationsChanged"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function registerInheritingStyle(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"registerInheritingStyle")
         flag FINAL
         dispid 19
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         callpropvoid QName(Namespace("mx.styles:IStyleManager"),"registerInheritingStyle"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function isInheritingStyle(param1:String) : Boolean
      {
         trait method QName(PackageNamespace(""),"isInheritingStyle")
         flag FINAL
         dispid 20
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         callproperty QName(Namespace("mx.styles:IStyleManager"),"isInheritingStyle"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function isInheritingTextFormatStyle(param1:String) : Boolean
      {
         trait method QName(PackageNamespace(""),"isInheritingTextFormatStyle")
         flag FINAL
         dispid 21
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         callproperty QName(Namespace("mx.styles:IStyleManager"),"isInheritingTextFormatStyle"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function registerSizeInvalidatingStyle(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"registerSizeInvalidatingStyle")
         flag FINAL
         dispid 22
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         callpropvoid QName(Namespace("mx.styles:IStyleManager"),"registerSizeInvalidatingStyle"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function isSizeInvalidatingStyle(param1:String) : Boolean
      {
         trait method QName(PackageNamespace(""),"isSizeInvalidatingStyle")
         flag FINAL
         dispid 23
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         callproperty QName(Namespace("mx.styles:IStyleManager"),"isSizeInvalidatingStyle"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function registerParentSizeInvalidatingStyle(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"registerParentSizeInvalidatingStyle")
         flag FINAL
         dispid 24
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         callpropvoid QName(Namespace("mx.styles:IStyleManager"),"registerParentSizeInvalidatingStyle"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function isParentSizeInvalidatingStyle(param1:String) : Boolean
      {
         trait method QName(PackageNamespace(""),"isParentSizeInvalidatingStyle")
         flag FINAL
         dispid 25
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         callproperty QName(Namespace("mx.styles:IStyleManager"),"isParentSizeInvalidatingStyle"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function registerParentDisplayListInvalidatingStyle(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"registerParentDisplayListInvalidatingStyle")
         flag FINAL
         dispid 26
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         callpropvoid QName(Namespace("mx.styles:IStyleManager"),"registerParentDisplayListInvalidatingStyle"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function isParentDisplayListInvalidatingStyle(param1:String) : Boolean
      {
         trait method QName(PackageNamespace(""),"isParentDisplayListInvalidatingStyle")
         flag FINAL
         dispid 27
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         callproperty QName(Namespace("mx.styles:IStyleManager"),"isParentDisplayListInvalidatingStyle"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function registerColorName(param1:String, param2:uint) : void
      {
         trait method QName(PackageNamespace(""),"registerColorName")
         flag FINAL
         dispid 28
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         getlocal2
         callpropvoid QName(Namespace("mx.styles:IStyleManager"),"registerColorName"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function isColorName(param1:String) : Boolean
      {
         trait method QName(PackageNamespace(""),"isColorName")
         flag FINAL
         dispid 29
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         callproperty QName(Namespace("mx.styles:IStyleManager"),"isColorName"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getColorName(param1:Object) : uint
      {
         trait method QName(PackageNamespace(""),"getColorName")
         flag FINAL
         dispid 30
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         callproperty QName(Namespace("mx.styles:IStyleManager"),"getColorName"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getColorNames(param1:Array) : void
      {
         trait method QName(PackageNamespace(""),"getColorNames")
         flag FINAL
         dispid 31
         method
         name null
         param QName(PackageNamespace(""),"Array")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         callpropvoid QName(Namespace("mx.styles:IStyleManager"),"getColorNames"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function isValidStyleValue(param1:*) : Boolean
      {
         trait method QName(PackageNamespace(""),"isValidStyleValue")
         flag FINAL
         dispid 32
         method
         name null
         param null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         callproperty QName(Namespace("mx.styles:IStyleManager"),"isValidStyleValue"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function loadStyleDeclarations(param1:String, param2:Boolean = true, param3:Boolean = false, param4:ApplicationDomain = null, param5:SecurityDomain = null) : IEventDispatcher
      {
         trait method QName(PackageNamespace(""),"loadStyleDeclarations")
         flag FINAL
         dispid 33
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace("flash.system"),"ApplicationDomain")
         param QName(PackageNamespace("flash.system"),"SecurityDomain")
         optional True()
         optional False()
         optional Null()
         optional Null()
         returns QName(PackageNamespace("flash.events"),"IEventDispatcher")
         
         body
         maxstack 5
         localcount 6
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         getlocal2
         getlocal 4
         getlocal 5
         callproperty QName(Namespace("mx.styles:IStyleManager2"),"loadStyleDeclarations2"), 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function unloadStyleDeclarations(param1:String, param2:Boolean = true) : void
      {
         trait method QName(PackageNamespace(""),"unloadStyleDeclarations")
         flag FINAL
         dispid 34
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#StyleManager"),"impl")
         getlocal1
         getlocal2
         callpropvoid QName(Namespace("mx.styles:IStyleManager"),"unloadStyleDeclarations"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
