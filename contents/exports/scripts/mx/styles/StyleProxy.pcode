
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("StyleProxy",[PackageNamespace("mx.styles")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #StyleProxy
   popscope
   initproperty QName(PackageNamespace("mx.styles"),"StyleProxy")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.styles
{
   import mx.core.mx_internal;
   
   use namespace mx_internal;
   
   public class StyleProxy implements IAdvancedStyleClient
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _filterMap:Object;
      
      private var _source:IStyleClient;
      
      private var _advancedSource:IAdvancedStyleClient;
      
      public function StyleProxy(param1:IStyleClient, param2:Object)
      {
         method
         name null
         param QName(PackageNamespace("mx.styles"),"IStyleClient")
         param QName(PackageNamespace(""),"Object")
         returns null
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         getlocal0
         getlocal2
         initproperty QName(PackageNamespace(""),"filterMap")
         getlocal0
         getlocal1
         initproperty QName(PackageNamespace(""),"source")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get filterMap() : Object
      {
         trait getter QName(PackageNamespace(""),"filterMap")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_filterMap")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set filterMap(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"filterMap")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#StyleProxy"),"_filterMap")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get source() : IStyleClient
      {
         trait getter QName(PackageNamespace(""),"source")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.styles"),"IStyleClient")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set source(param1:IStyleClient) : void
      {
         trait setter QName(PackageNamespace(""),"source")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.styles"),"IStyleClient")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getlocal0
         getlocal1
         getlex QName(PackageNamespace("mx.styles"),"IAdvancedStyleClient")
         astypelate
         initproperty QName(PrivateNamespace(null,"#StyleProxy"),"_advancedSource")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get className() : String
      {
         trait getter QName(PackageNamespace(""),"className")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getproperty QName(Namespace("mx.styles:IStyleClient"),"className")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get inheritingStyles() : Object
      {
         trait getter QName(PackageNamespace(""),"inheritingStyles")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getproperty QName(Namespace("mx.styles:IStyleClient"),"inheritingStyles")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set inheritingStyles(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"inheritingStyles")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get nonInheritingStyles() : Object
      {
         trait getter QName(PackageNamespace(""),"nonInheritingStyles")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set nonInheritingStyles(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"nonInheritingStyles")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get styleDeclaration() : CSSStyleDeclaration
      {
         trait getter QName(PackageNamespace(""),"styleDeclaration")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getproperty QName(Namespace("mx.styles:IStyleClient"),"styleDeclaration")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set styleDeclaration(param1:CSSStyleDeclaration) : void
      {
         trait setter QName(PackageNamespace(""),"styleDeclaration")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getlocal0
         getproperty QName(PackageNamespace(""),"styleDeclaration")
         setproperty QName(Namespace("mx.styles:IStyleClient"),"styleDeclaration")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get styleName() : Object
      {
         trait getter QName(PackageNamespace(""),"styleName")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getproperty QName(Namespace("mx.styles:ISimpleStyleClient"),"styleName")
         getlex QName(PackageNamespace("mx.styles"),"IStyleClient")
         istypelate
         iffalse ofs0
         findpropstrict QName(PackageNamespace("mx.styles"),"StyleProxy")
         findpropstrict QName(PackageNamespace("mx.styles"),"IStyleClient")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getproperty QName(Namespace("mx.styles:ISimpleStyleClient"),"styleName")
         callproperty QName(PackageNamespace("mx.styles"),"IStyleClient"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"filterMap")
         constructprop QName(PackageNamespace("mx.styles"),"StyleProxy"), 2
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getproperty QName(Namespace("mx.styles:ISimpleStyleClient"),"styleName")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set styleName(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"styleName")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getlocal1
         setproperty QName(Namespace("mx.styles:ISimpleStyleClient"),"styleName")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get id() : String
      {
         trait getter QName(PackageNamespace(""),"id")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_advancedSource")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_advancedSource")
         getproperty QName(Namespace("mx.styles:IAdvancedStyleClient"),"id")
         coerce_s
         jump ofs1
         ofs0:
         pushnull
         coerce_s
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get styleParent() : IAdvancedStyleClient
      {
         trait getter QName(PackageNamespace(""),"styleParent")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.styles"),"IAdvancedStyleClient")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_advancedSource")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_advancedSource")
         getproperty QName(Namespace("mx.styles:IAdvancedStyleClient"),"styleParent")
         coerce QName(PackageNamespace("mx.styles"),"IAdvancedStyleClient")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("mx.styles"),"IAdvancedStyleClient")
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function styleChanged(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"styleChanged")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getlocal1
         callproperty QName(Namespace("mx.styles:ISimpleStyleClient"),"styleChanged"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getStyle(param1:String) : *
      {
         trait method QName(PackageNamespace(""),"getStyle")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns null
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getlocal1
         callproperty QName(Namespace("mx.styles:IStyleClient"),"getStyle"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setStyle(param1:String, param2:*) : void
      {
         trait method QName(PackageNamespace(""),"setStyle")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getlocal1
         getlocal2
         callpropvoid QName(Namespace("mx.styles:IStyleClient"),"setStyle"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function clearStyle(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"clearStyle")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getlocal1
         callpropvoid QName(Namespace("mx.styles:IStyleClient"),"clearStyle"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getClassStyleDeclarations() : Array
      {
         trait method QName(PackageNamespace(""),"getClassStyleDeclarations")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         callproperty QName(Namespace("mx.styles:IStyleClient"),"getClassStyleDeclarations"), 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function notifyStyleChangeInChildren(param1:String, param2:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"notifyStyleChangeInChildren")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getlocal1
         getlocal2
         callproperty QName(Namespace("mx.styles:IStyleClient"),"notifyStyleChangeInChildren"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function regenerateStyleCache(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"regenerateStyleCache")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getlocal1
         callpropvoid QName(Namespace("mx.styles:IStyleClient"),"regenerateStyleCache"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function registerEffects(param1:Array) : void
      {
         trait method QName(PackageNamespace(""),"registerEffects")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Array")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_source")
         getlocal1
         callproperty QName(Namespace("mx.styles:IStyleClient"),"registerEffects"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function stylesInitialized() : void
      {
         trait method QName(PackageNamespace(""),"stylesInitialized")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_advancedSource")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_advancedSource")
         callpropvoid QName(Namespace("mx.styles:IAdvancedStyleClient"),"stylesInitialized"), 0
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function matchesCSSState(param1:String) : Boolean
      {
         trait method QName(PackageNamespace(""),"matchesCSSState")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_advancedSource")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_advancedSource")
         getlocal1
         callproperty QName(Namespace("mx.styles:IAdvancedStyleClient"),"matchesCSSState"), 1
         convert_b
         jump ofs1
         ofs0:
         pushfalse
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function matchesCSSType(param1:String) : Boolean
      {
         trait method QName(PackageNamespace(""),"matchesCSSType")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_advancedSource")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#StyleProxy"),"_advancedSource")
         getlocal1
         callproperty QName(Namespace("mx.styles:IAdvancedStyleClient"),"matchesCSSType"), 1
         convert_b
         jump ofs1
         ofs0:
         pushfalse
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
