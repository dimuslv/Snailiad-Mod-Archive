
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("ObjectUtil",[PackageNamespace("mx.utils")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #ObjectUtil
   popscope
   initproperty QName(PackageNamespace("mx.utils"),"ObjectUtil")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.utils
{
   import flash.utils.ByteArray;
   import flash.utils.Dictionary;
   import flash.utils.getQualifiedClassName;
   import flash.xml.XMLNode;
   import mx.collections.IList;
   import mx.core.mx_internal;
   
   use namespace mx_internal;
   
   public class ObjectUtil
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      private static var defaultToStringExcludes:Array;
      
      private static var refCount:int = 0;
      
      private static var CLASS_INFO_CACHE:Object;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         findproperty QName(PrivateNamespace(null,"#ObjectUtil"),"defaultToStringExcludes")
         pushstring "password"
         pushstring "credentials"
         newarray 2
         setproperty QName(PrivateNamespace(null,"#ObjectUtil"),"defaultToStringExcludes")
         findproperty QName(PrivateNamespace(null,"#ObjectUtil"),"refCount")
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"#ObjectUtil"),"refCount")
         findproperty QName(PrivateNamespace(null,"#ObjectUtil"),"CLASS_INFO_CACHE")
         newobject 0
         setproperty QName(PrivateNamespace(null,"#ObjectUtil"),"CLASS_INFO_CACHE")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function ObjectUtil()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function compare(param1:Object, param2:Object, param3:int = -1) : int
      {
         trait method QName(PackageNamespace(""),"compare")
         flag FINAL
         dispid 3
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"int")
         optional Integer(-1)
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 7
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"internalCompare")
         getlocal1
         getlocal2
         pushbyte 0
         getlocal3
         findpropstrict QName(PackageNamespace("flash.utils"),"Dictionary")
         pushtrue
         constructprop QName(PackageNamespace("flash.utils"),"Dictionary"), 1
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"internalCompare"), 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function copy(param1:Object) : Object
      {
         trait method QName(PackageNamespace(""),"copy")
         flag FINAL
         dispid 4
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("flash.utils"),"ByteArray")
         constructprop QName(PackageNamespace("flash.utils"),"ByteArray"), 0
         coerce QName(PackageNamespace("flash.utils"),"ByteArray")
         setlocal2
         getlocal2
         getlocal1
         callpropvoid QName(PackageNamespace(""),"writeObject"), 1
         getlocal2
         pushbyte 0
         setproperty QName(PackageNamespace(""),"position")
         getlocal2
         callproperty QName(PackageNamespace(""),"readObject"), 0
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         getlocal3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function clone(param1:Object) : Object
      {
         trait method QName(PackageNamespace(""),"clone")
         flag FINAL
         dispid 5
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"copy")
         getlocal1
         callproperty QName(PackageNamespace(""),"copy"), 1
         coerce QName(PackageNamespace(""),"Object")
         setlocal2
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"cloneInternal")
         getlocal2
         getlocal1
         callpropvoid QName(PrivateNamespace(null,"#ObjectUtil"),"cloneInternal"), 2
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function cloneInternal(param1:Object, param2:Object) : void
      {
         trait method QName(PrivateNamespace(null,"#ObjectUtil"),"cloneInternal")
         flag FINAL
         dispid 6
         method
         name null
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 8
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal 4
         pushundefined
         coerce_a
         setlocal 5
         getlocal1
         getlocal2
         getproperty Multiname("uid",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         setproperty Multiname("uid",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         findpropstrict QName(PackageNamespace(""),"getClassInfo")
         getlocal2
         callproperty QName(PackageNamespace(""),"getClassInfo"), 1
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         pushbyte 0
         setlocal 6
         getlocal3
         getproperty Multiname("properties",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce_a
         setlocal 7
         jump ofs0
         ofs1:
         label
         getlocal 7
         getlocal 6
         nextvalue
         coerce_a
         setlocal 5
         getlocal2
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         dup
         setlocal 4
         convert_b
         dup
         iffalse ofs2
         pop
         getlocal 4
         pushstring "uid"
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"hasOwnProperty"), 1
         convert_b
         ofs2:
         iffalse ofs0
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"cloneInternal")
         getlocal1
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         getlocal 4
         callpropvoid QName(PrivateNamespace(null,"#ObjectUtil"),"cloneInternal"), 2
         ofs0:
         hasnext2 7, 6
         iftrue ofs1
         kill 7
         kill 6
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function isSimple(param1:Object) : Boolean
      {
         trait method QName(PackageNamespace(""),"isSimple")
         flag FINAL
         dispid 7
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         typeof
         setlocal2
         jump ofs0
         ofs1:
         label
         pushtrue
         returnvalue
         ofs2:
         label
         getlocal1
         getlex QName(PackageNamespace(""),"Date")
         istypelate
         dup
         iftrue ofs3
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"Array")
         istypelate
         ofs3:
         returnvalue
         ofs4:
         label
         jump ofs5
         ofs0:
         getlocal2
         setlocal3
         pushstring "number"
         getlocal3
         ifstrictne ofs6
         pushbyte 0
         jump ofs7
         ofs6:
         pushstring "string"
         getlocal3
         ifstrictne ofs8
         pushbyte 1
         jump ofs7
         ofs8:
         pushstring "boolean"
         getlocal3
         ifstrictne ofs9
         pushbyte 2
         jump ofs7
         ofs9:
         pushstring "object"
         getlocal3
         ifstrictne ofs10
         pushbyte 3
         jump ofs7
         ofs10:
         jump ofs11
         pushbyte 4
         jump ofs11
         ofs11:
         pushbyte 4
         ofs7:
         kill 3
         lookupswitch ofs4, [ofs1, ofs1, ofs1, ofs2, ofs4]
         ofs5:
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function numericCompare(param1:Number, param2:Number) : int
      {
         trait method QName(PackageNamespace(""),"numericCompare")
         flag FINAL
         dispid 8
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         convert_b
         dup
         iffalse ofs0
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal2
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         convert_b
         ofs0:
         iffalse ofs1
         pushbyte 0
         returnvalue
         ofs1:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iffalse ofs2
         pushbyte 1
         returnvalue
         ofs2:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal2
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iffalse ofs3
         pushbyte -1
         returnvalue
         ofs3:
         getlocal1
         getlocal2
         ifnlt ofs4
         pushbyte -1
         returnvalue
         ofs4:
         getlocal1
         getlocal2
         ifngt ofs5
         pushbyte 1
         returnvalue
         ofs5:
         pushbyte 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function stringCompare(param1:String, param2:String, param3:Boolean = false) : int
      {
         trait method QName(PackageNamespace(""),"stringCompare")
         flag FINAL
         dispid 9
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         pushnull
         equals
         dup
         iffalse ofs0
         pop
         getlocal2
         pushnull
         equals
         ofs0:
         iffalse ofs1
         pushbyte 0
         returnvalue
         ofs1:
         getlocal1
         pushnull
         ifne ofs2
         pushbyte 1
         returnvalue
         ofs2:
         getlocal2
         pushnull
         ifne ofs3
         pushbyte -1
         returnvalue
         ofs3:
         getlocal3
         iffalse ofs4
         getlocal1
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toLocaleLowerCase"), 0
         coerce_s
         setlocal1
         getlocal2
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toLocaleLowerCase"), 0
         coerce_s
         setlocal2
         ofs4:
         getlocal1
         getlocal2
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"localeCompare"), 1
         convert_i
         dup
         setlocal 4
         pushbyte -1
         ifnlt ofs5
         pushbyte -1
         setlocal 4
         jump ofs6
         ofs5:
         getlocal 4
         pushbyte 1
         ifngt ofs6
         pushbyte 1
         setlocal 4
         ofs6:
         getlocal 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function dateCompare(param1:Date, param2:Date) : int
      {
         trait method QName(PackageNamespace(""),"dateCompare")
         flag FINAL
         dispid 10
         method
         name null
         param QName(PackageNamespace(""),"Date")
         param QName(PackageNamespace(""),"Date")
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         pushnull
         equals
         dup
         iffalse ofs0
         pop
         getlocal2
         pushnull
         equals
         ofs0:
         iffalse ofs1
         pushbyte 0
         returnvalue
         ofs1:
         getlocal1
         pushnull
         ifne ofs2
         pushbyte 1
         returnvalue
         ofs2:
         getlocal2
         pushnull
         ifne ofs3
         pushbyte -1
         returnvalue
         ofs3:
         getlocal1
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"getTime"), 0
         convert_d
         setlocal3
         getlocal2
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"getTime"), 0
         convert_d
         setlocal 4
         getlocal3
         getlocal 4
         ifnlt ofs4
         pushbyte -1
         returnvalue
         ofs4:
         getlocal3
         getlocal 4
         ifngt ofs5
         pushbyte 1
         returnvalue
         ofs5:
         pushbyte 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function toString(param1:Object, param2:Array = null, param3:Array = null) : String
      {
         trait method QName(PackageNamespace(""),"toString")
         flag FINAL
         dispid 11
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Array")
         param QName(PackageNamespace(""),"Array")
         optional Null()
         optional Null()
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 6
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal3
         pushnull
         ifne ofs0
         getlex QName(PrivateNamespace(null,"#ObjectUtil"),"defaultToStringExcludes")
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         ofs0:
         findproperty QName(PrivateNamespace(null,"#ObjectUtil"),"refCount")
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"#ObjectUtil"),"refCount")
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"internalToString")
         getlocal1
         pushbyte 0
         pushnull
         getlocal2
         getlocal3
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"internalToString"), 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function internalToString(param1:Object, param2:int = 0, param3:Dictionary = null, param4:Array = null, param5:Array = null) : String
      {
         trait method QName(PrivateNamespace(null,"#ObjectUtil"),"internalToString")
         flag FINAL
         dispid 12
         method
         name null
         flag HAS_OPTIONAL
         flag NEED_ACTIVATION
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace("flash.utils"),"Dictionary")
         param QName(PackageNamespace(""),"Array")
         param QName(PackageNamespace(""),"Array")
         optional Integer(0)
         optional Null()
         optional Null()
         optional Null()
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 8
         localcount 9
         initscopedepth 4
         maxscopedepth 11
         trait slot QName(PackageInternalNs("mx.utils"),"value")
         slotid 1
         type QName(PackageNamespace(""),"Object")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"indent")
         slotid 2
         type QName(PackageNamespace(""),"int")
         value Integer(0)
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"refs")
         slotid 3
         type QName(PackageNamespace("flash.utils"),"Dictionary")
         value Null()
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"namespaceURIs")
         slotid 4
         type QName(PackageNamespace(""),"Array")
         value Null()
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"exclude")
         slotid 5
         type QName(PackageNamespace(""),"Array")
         value Null()
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"str")
         slotid 6
         type QName(PackageNamespace(""),"String")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"type")
         slotid 7
         type QName(PackageNamespace(""),"String")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"classInfo")
         slotid 8
         type QName(PackageNamespace(""),"Object")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"properties")
         slotid 9
         type QName(PackageNamespace(""),"Array")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"isArray")
         slotid 10
         type QName(PackageNamespace(""),"Boolean")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"isDict")
         slotid 11
         type QName(PackageNamespace(""),"Boolean")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"prop")
         slotid 12
         type null
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"j")
         slotid 13
         type QName(PackageNamespace(""),"int")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"id")
         slotid 14
         type QName(PackageNamespace(""),"Object")
         end ; trait
         
         code
         getlocal0
         pushscope
         newactivation
         dup
         setlocal 6
         pushscope
         getscopeobject 1
         pushnull
         coerce_s
         setslot 6
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setslot 8
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setslot 9
         getscopeobject 1
         pushfalse
         setslot 10
         getscopeobject 1
         pushfalse
         setslot 11
         getscopeobject 1
         pushundefined
         coerce_a
         setslot 12
         getscopeobject 1
         pushbyte 0
         setslot 13
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setslot 14
         getscopeobject 1
         getlocal1
         setslot 1
         getscopeobject 1
         getlocal2
         setslot 2
         getscopeobject 1
         getlocal3
         setslot 3
         getscopeobject 1
         getlocal 4
         setslot 4
         getscopeobject 1
         getlocal 5
         setslot 5
         getscopeobject 1
         getscopeobject 1
         getslot 1
         pushnull
         equals
         iffalse ofs0
         pushstring "null"
         jump ofs1
         ofs0:
         getscopeobject 1
         getslot 1
         typeof
         ofs1:
         coerce_s
         setslot 7
         jump ofs2
         ofs3:
         label
         getscopeobject 1
         getslot 1
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         returnvalue
         ofs4:
         label
         pushstring "\""
         getscopeobject 1
         getslot 1
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         add
         pushstring "\""
         add
         returnvalue
         ofs5:
         label
         getscopeobject 1
         getslot 1
         getlex QName(PackageNamespace(""),"Date")
         istypelate
         iffalse ofs6
         getscopeobject 1
         getslot 1
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         returnvalue
         ofs6:
         getscopeobject 1
         getslot 1
         getlex QName(PackageNamespace("flash.xml"),"XMLNode")
         istypelate
         iffalse ofs7
         getscopeobject 1
         getslot 1
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         returnvalue
         ofs7:
         getscopeobject 1
         getslot 1
         getlex QName(PackageNamespace(""),"Class")
         istypelate
         iffalse ofs8
         pushstring "("
         findpropstrict QName(PackageNamespace("flash.utils"),"getQualifiedClassName")
         getscopeobject 1
         getslot 1
         callproperty QName(PackageNamespace("flash.utils"),"getQualifiedClassName"), 1
         add
         pushstring ")"
         add
         returnvalue
         ofs8:
         getscopeobject 1
         findpropstrict QName(PackageNamespace(""),"getClassInfo")
         getscopeobject 1
         getslot 1
         getscopeobject 1
         getslot 5
         pushstring "includeReadOnly"
         pushtrue
         pushstring "uris"
         getscopeobject 1
         getslot 4
         newobject 2
         callproperty QName(PackageNamespace(""),"getClassInfo"), 3
         coerce QName(PackageNamespace(""),"Object")
         setslot 8
         getscopeobject 1
         getscopeobject 1
         getslot 8
         getproperty Multiname("properties",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Array")
         setslot 9
         getscopeobject 1
         pushstring "("
         getscopeobject 1
         getslot 8
         getproperty Multiname("name",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         add
         pushstring ")"
         add
         setslot 6
         getscopeobject 1
         getslot 3
         pushnull
         ifne ofs9
         getscopeobject 1
         findpropstrict QName(PackageNamespace("flash.utils"),"Dictionary")
         pushtrue
         constructprop QName(PackageNamespace("flash.utils"),"Dictionary"), 1
         coerce QName(PackageNamespace("flash.utils"),"Dictionary")
         setslot 3
         ofs9:
         getscopeobject 1
         getscopeobject 1
         getslot 3
         getscopeobject 1
         getslot 1
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         setslot 14
         getscopeobject 1
         getslot 14
         pushnull
         ifeq ofs10
         getscopeobject 1
         getscopeobject 1
         getslot 6
         pushstring "#"
         findpropstrict QName(PackageNamespace(""),"int")
         getscopeobject 1
         getslot 14
         callproperty QName(PackageNamespace(""),"int"), 1
         add
         add
         coerce_s
         setslot 6
         getscopeobject 1
         getslot 6
         returnvalue
         ofs10:
         jump ofs11
         ofs12:
         getlocal0
         pushscope
         getlocal 6
         pushscope
         newcatch 0
         dup
         setlocal 7
         dup
         pushscope
         swap
         setslot 1
         findpropstrict QName(PackageNamespace(""),"String")
         getscopeobject 1
         getslot 1
         callproperty QName(PackageNamespace(""),"String"), 1
         returnvalue
         popscope
         kill 7
         ofs11:
         getscopeobject 1
         getslot 1
         pushnull
         ifeq ofs13
         getscopeobject 1
         getscopeobject 1
         getslot 6
         pushstring "#"
         getlex QName(PrivateNamespace(null,"#ObjectUtil"),"refCount")
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         add
         coerce_s
         setslot 6
         getscopeobject 1
         getslot 3
         getscopeobject 1
         getslot 1
         getlex QName(PrivateNamespace(null,"#ObjectUtil"),"refCount")
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"refCount")
         dup
         setlocal 7
         getproperty QName(PrivateNamespace(null,"#ObjectUtil"),"refCount")
         increment_i
         setlocal 8
         getlocal 7
         getlocal 8
         setproperty QName(PrivateNamespace(null,"#ObjectUtil"),"refCount")
         kill 8
         kill 7
         ofs13:
         getscopeobject 1
         getscopeobject 1
         getslot 1
         getlex QName(PackageNamespace(""),"Array")
         istypelate
         setslot 10
         getscopeobject 1
         getscopeobject 1
         getslot 1
         getlex QName(PackageNamespace("flash.utils"),"Dictionary")
         istypelate
         setslot 11
         getscopeobject 1
         getscopeobject 1
         getslot 2
         pushbyte 2
         add
         convert_i
         setslot 2
         getscopeobject 1
         pushbyte 0
         setslot 13
         jump ofs14
         ofs15:
         label
         getscopeobject 1
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"newline")
         getscopeobject 1
         getslot 6
         getscopeobject 1
         getslot 2
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"newline"), 2
         coerce_s
         setslot 6
         getscopeobject 1
         getscopeobject 1
         getslot 9
         getscopeobject 1
         getslot 13
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce_a
         setslot 12
         getscopeobject 1
         getslot 10
         iffalse ofs16
         getscopeobject 1
         getscopeobject 1
         getslot 6
         pushstring "["
         add
         setslot 6
         jump ofs17
         ofs16:
         getscopeobject 1
         getslot 11
         iffalse ofs17
         getscopeobject 1
         getscopeobject 1
         getslot 6
         pushstring "{"
         add
         setslot 6
         ofs17:
         getscopeobject 1
         getslot 11
         iffalse ofs18
         getscopeobject 1
         getscopeobject 1
         getslot 6
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"internalToString")
         getscopeobject 1
         getslot 12
         getscopeobject 1
         getslot 2
         getscopeobject 1
         getslot 3
         getscopeobject 1
         getslot 4
         getscopeobject 1
         getslot 5
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"internalToString"), 5
         add
         coerce_s
         setslot 6
         jump ofs19
         ofs18:
         getscopeobject 1
         getscopeobject 1
         getslot 6
         getscopeobject 1
         getslot 12
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         add
         coerce_s
         setslot 6
         ofs19:
         getscopeobject 1
         getslot 10
         iffalse ofs20
         getscopeobject 1
         getscopeobject 1
         getslot 6
         pushstring "] "
         add
         setslot 6
         jump ofs21
         ofs20:
         getscopeobject 1
         getslot 11
         iffalse ofs22
         getscopeobject 1
         getscopeobject 1
         getslot 6
         pushstring "} = "
         add
         setslot 6
         jump ofs21
         ofs22:
         getscopeobject 1
         getscopeobject 1
         getslot 6
         pushstring " = "
         add
         setslot 6
         ofs21:
         getscopeobject 1
         getscopeobject 1
         getslot 6
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"internalToString")
         getscopeobject 1
         getslot 1
         getscopeobject 1
         getslot 12
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         getscopeobject 1
         getslot 2
         getscopeobject 1
         getslot 3
         getscopeobject 1
         getslot 4
         getscopeobject 1
         getslot 5
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"internalToString"), 5
         add
         coerce_s
         setslot 6
         ofs23:
         jump ofs24
         ofs25:
         getlocal0
         pushscope
         getlocal 6
         pushscope
         newcatch 1
         dup
         setlocal 7
         dup
         pushscope
         swap
         setslot 1
         getscopeobject 1
         getscopeobject 1
         getslot 6
         pushstring "?"
         add
         setslot 6
         popscope
         kill 7
         ofs24:
         getscopeobject 1
         getslot 13
         increment_i
         getscopeobject 1
         swap
         setslot 13
         ofs14:
         getscopeobject 1
         getslot 13
         getscopeobject 1
         getslot 9
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs15
         getscopeobject 1
         getscopeobject 1
         getslot 2
         pushbyte 2
         subtract
         convert_i
         setslot 2
         getscopeobject 1
         getslot 6
         returnvalue
         ofs26:
         label
         getscopeobject 1
         getslot 1
         callproperty Multiname("toXMLString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         returnvalue
         ofs27:
         label
         pushstring "("
         getscopeobject 1
         getslot 7
         add
         pushstring ")"
         add
         returnvalue
         jump ofs2
         ofs2:
         getscopeobject 1
         getslot 7
         setlocal 7
         pushstring "boolean"
         getlocal 7
         ifstrictne ofs28
         pushbyte 0
         jump ofs29
         ofs28:
         pushstring "number"
         getlocal 7
         ifstrictne ofs30
         pushbyte 1
         jump ofs29
         ofs30:
         pushstring "string"
         getlocal 7
         ifstrictne ofs31
         pushbyte 2
         jump ofs29
         ofs31:
         pushstring "object"
         getlocal 7
         ifstrictne ofs32
         pushbyte 3
         jump ofs29
         ofs32:
         pushstring "xml"
         getlocal 7
         ifstrictne ofs33
         pushbyte 4
         jump ofs29
         ofs33:
         jump ofs34
         pushbyte 5
         jump ofs34
         ofs34:
         pushbyte 5
         ofs29:
         kill 7
         lookupswitch ofs27, [ofs3, ofs3, ofs4, ofs5, ofs26, ofs27]
         end ; code
         try from ofs9 to ofs10 target ofs12 type QName(PackageNamespace(""),"Error") name QName(PackageNamespace(""),"e") end
         try from ofs21 to ofs23 target ofs25 type QName(PackageNamespace(""),"Error") name QName(PackageNamespace(""),"e") end
         end ; body
         end ; method
      }
      
      private static function newline(param1:String, param2:int = 0) : String
      {
         trait method QName(PrivateNamespace(null,"#ObjectUtil"),"newline")
         flag FINAL
         dispid 13
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"int")
         optional Integer(0)
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         coerce_s
         setlocal3
         getlocal3
         pushstring "\n"
         add
         setlocal3
         pushbyte 0
         setlocal 4
         jump ofs0
         ofs1:
         label
         getlocal3
         pushstring " "
         add
         setlocal3
         inclocal_i 4
         ofs0:
         getlocal 4
         getlocal2
         iflt ofs1
         getlocal3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function internalCompare(param1:Object, param2:Object, param3:int, param4:int, param5:Dictionary) : int
      {
         trait method QName(PrivateNamespace(null,"#ObjectUtil"),"internalCompare")
         flag FINAL
         dispid 14
         method
         name null
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace("flash.utils"),"Dictionary")
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 6
         localcount 20
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushbyte 0
         setlocal 9
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal 10
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal 11
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal 12
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal 13
         pushfalse
         setlocal 14
         pushnull
         coerce QName(PackageNamespace(""),"QName")
         setlocal 15
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal 16
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal 17
         pushbyte 0
         setlocal 18
         getlocal1
         pushnull
         equals
         dup
         iffalse ofs0
         pop
         getlocal2
         pushnull
         equals
         ofs0:
         iffalse ofs1
         pushbyte 0
         returnvalue
         ofs1:
         getlocal1
         pushnull
         ifne ofs2
         pushbyte 1
         returnvalue
         ofs2:
         getlocal2
         pushnull
         ifne ofs3
         pushbyte -1
         returnvalue
         ofs3:
         getlocal1
         getlex QName(PackageNamespace("mx.utils"),"ObjectProxy")
         istypelate
         iffalse ofs4
         findpropstrict QName(PackageNamespace("mx.utils"),"ObjectProxy")
         getlocal1
         callproperty QName(PackageNamespace("mx.utils"),"ObjectProxy"), 1
         getlex QName(PackageNamespace("mx.utils"),"object_proxy")
         coerce QName(PackageNamespace(""),"Namespace")
         getproperty RTQName("object")
         coerce QName(PackageNamespace(""),"Object")
         setlocal1
         ofs4:
         getlocal2
         getlex QName(PackageNamespace("mx.utils"),"ObjectProxy")
         istypelate
         iffalse ofs5
         findpropstrict QName(PackageNamespace("mx.utils"),"ObjectProxy")
         getlocal2
         callproperty QName(PackageNamespace("mx.utils"),"ObjectProxy"), 1
         getlex QName(PackageNamespace("mx.utils"),"object_proxy")
         coerce QName(PackageNamespace(""),"Namespace")
         getproperty RTQName("object")
         coerce QName(PackageNamespace(""),"Object")
         setlocal2
         ofs5:
         getlocal1
         typeof
         setlocal 6
         getlocal2
         typeof
         setlocal 7
         pushbyte 0
         setlocal 8
         getlocal 6
         getlocal 7
         ifne ofs6
         jump ofs7
         ofs8:
         label
         findpropstrict QName(PackageNamespace(""),"numericCompare")
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal1
         callproperty QName(PackageNamespace(""),"Number"), 1
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal2
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"numericCompare"), 2
         convert_i
         setlocal 8
         jump ofs9
         ofs10:
         label
         findpropstrict QName(PackageNamespace(""),"numericCompare")
         getlocal1
         getlex QName(PackageNamespace(""),"Number")
         astypelate
         getlocal2
         getlex QName(PackageNamespace(""),"Number")
         astypelate
         callproperty QName(PackageNamespace(""),"numericCompare"), 2
         convert_i
         setlocal 8
         jump ofs9
         ofs11:
         label
         findpropstrict QName(PackageNamespace(""),"stringCompare")
         getlocal1
         getlex QName(PackageNamespace(""),"String")
         astypelate
         getlocal2
         getlex QName(PackageNamespace(""),"String")
         astypelate
         callproperty QName(PackageNamespace(""),"stringCompare"), 2
         convert_i
         setlocal 8
         jump ofs9
         ofs12:
         label
         getlocal 4
         pushbyte 0
         greaterthan
         iffalse ofs13
         getlocal 4
         decrement
         convert_i
         jump ofs14
         ofs13:
         getlocal 4
         convert_i
         ofs14:
         convert_i
         setlocal 9
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"getRef")
         getlocal1
         getlocal 5
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"getRef"), 2
         coerce QName(PackageNamespace(""),"Object")
         setlocal 10
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"getRef")
         getlocal2
         getlocal 5
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"getRef"), 2
         coerce QName(PackageNamespace(""),"Object")
         setlocal 11
         getlocal 10
         getlocal 11
         ifne ofs15
         pushbyte 0
         returnvalue
         ofs15:
         getlocal 5
         getlocal 11
         getlocal 10
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte -1
         equals
         not
         dup
         iffalse ofs16
         pop
         getlocal3
         getlocal 4
         greaterthan
         ofs16:
         iffalse ofs17
         findpropstrict QName(PackageNamespace(""),"stringCompare")
         getlocal1
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         getlocal2
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         callproperty QName(PackageNamespace(""),"stringCompare"), 2
         convert_i
         setlocal 8
         jump ofs18
         ofs17:
         getlocal1
         getlex QName(PackageNamespace(""),"Array")
         istypelate
         dup
         iffalse ofs19
         pop
         getlocal2
         getlex QName(PackageNamespace(""),"Array")
         istypelate
         ofs19:
         iffalse ofs20
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"arrayCompare")
         getlocal1
         getlex QName(PackageNamespace(""),"Array")
         astypelate
         getlocal2
         getlex QName(PackageNamespace(""),"Array")
         astypelate
         getlocal3
         getlocal 4
         getlocal 5
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"arrayCompare"), 5
         convert_i
         setlocal 8
         jump ofs18
         ofs20:
         getlocal1
         getlex QName(PackageNamespace(""),"Date")
         istypelate
         dup
         iffalse ofs21
         pop
         getlocal2
         getlex QName(PackageNamespace(""),"Date")
         istypelate
         ofs21:
         iffalse ofs22
         findpropstrict QName(PackageNamespace(""),"dateCompare")
         getlocal1
         getlex QName(PackageNamespace(""),"Date")
         astypelate
         getlocal2
         getlex QName(PackageNamespace(""),"Date")
         astypelate
         callproperty QName(PackageNamespace(""),"dateCompare"), 2
         convert_i
         setlocal 8
         jump ofs18
         ofs22:
         getlocal1
         getlex QName(PackageNamespace("mx.collections"),"IList")
         istypelate
         dup
         iffalse ofs23
         pop
         getlocal2
         getlex QName(PackageNamespace("mx.collections"),"IList")
         istypelate
         ofs23:
         iffalse ofs24
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"listCompare")
         getlocal1
         getlex QName(PackageNamespace("mx.collections"),"IList")
         astypelate
         getlocal2
         getlex QName(PackageNamespace("mx.collections"),"IList")
         astypelate
         getlocal3
         getlocal 4
         getlocal 5
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"listCompare"), 5
         convert_i
         setlocal 8
         jump ofs18
         ofs24:
         getlocal1
         getlex QName(PackageNamespace("flash.utils"),"ByteArray")
         istypelate
         dup
         iffalse ofs25
         pop
         getlocal2
         getlex QName(PackageNamespace("flash.utils"),"ByteArray")
         istypelate
         ofs25:
         iffalse ofs26
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"byteArrayCompare")
         getlocal1
         getlex QName(PackageNamespace("flash.utils"),"ByteArray")
         astypelate
         getlocal2
         getlex QName(PackageNamespace("flash.utils"),"ByteArray")
         astypelate
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"byteArrayCompare"), 2
         convert_i
         setlocal 8
         jump ofs18
         ofs26:
         findpropstrict QName(PackageNamespace("flash.utils"),"getQualifiedClassName")
         getlocal1
         callproperty QName(PackageNamespace("flash.utils"),"getQualifiedClassName"), 1
         findpropstrict QName(PackageNamespace("flash.utils"),"getQualifiedClassName")
         getlocal2
         callproperty QName(PackageNamespace("flash.utils"),"getQualifiedClassName"), 1
         ifne ofs27
         findpropstrict QName(PackageNamespace(""),"getClassInfo")
         getlocal1
         callproperty QName(PackageNamespace(""),"getClassInfo"), 1
         getproperty Multiname("properties",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Array")
         setlocal 12
         findpropstrict QName(PackageNamespace(""),"isDynamicObject")
         getlocal1
         callproperty QName(PackageNamespace(""),"isDynamicObject"), 1
         convert_b
         dup
         setlocal 14
         iffalse ofs28
         findpropstrict QName(PackageNamespace(""),"getClassInfo")
         getlocal2
         callproperty QName(PackageNamespace(""),"getClassInfo"), 1
         getproperty Multiname("properties",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Array")
         setlocal 13
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"arrayCompare")
         getlocal 12
         getlocal 13
         getlocal3
         getlocal 9
         getlocal 5
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"arrayCompare"), 5
         convert_i
         dup
         setlocal 8
         pushbyte 0
         ifeq ofs28
         getlocal 8
         returnvalue
         ofs28:
         pushbyte 0
         setlocal 18
         jump ofs29
         ofs30:
         label
         getlocal 12
         getlocal 18
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"QName")
         setlocal 15
         getlocal1
         getlocal 15
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         setlocal 16
         getlocal2
         getlocal 15
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         setlocal 17
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"internalCompare")
         getlocal 16
         getlocal 17
         getlocal3
         pushbyte 1
         add
         getlocal 9
         getlocal 5
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"internalCompare"), 5
         convert_i
         dup
         setlocal 8
         pushbyte 0
         ifeq ofs31
         getlocal 8
         returnvalue
         ofs31:
         inclocal_i 18
         ofs29:
         getlocal 18
         getlocal 12
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs30
         jump ofs18
         ofs27:
         pushbyte 1
         returnvalue
         ofs18:
         jump ofs9
         ofs32:
         label
         jump ofs9
         ofs7:
         getlocal 6
         setlocal 19
         pushstring "boolean"
         getlocal 19
         ifstrictne ofs33
         pushbyte 0
         jump ofs34
         ofs33:
         pushstring "number"
         getlocal 19
         ifstrictne ofs35
         pushbyte 1
         jump ofs34
         ofs35:
         pushstring "string"
         getlocal 19
         ifstrictne ofs36
         pushbyte 2
         jump ofs34
         ofs36:
         pushstring "object"
         getlocal 19
         ifstrictne ofs37
         pushbyte 3
         jump ofs34
         ofs37:
         jump ofs38
         pushbyte 4
         jump ofs38
         ofs38:
         pushbyte 4
         ofs34:
         kill 19
         lookupswitch ofs32, [ofs8, ofs10, ofs11, ofs12, ofs32]
         ofs9:
         jump ofs39
         ofs6:
         findpropstrict QName(PackageNamespace(""),"stringCompare")
         getlocal 6
         getlocal 7
         callproperty QName(PackageNamespace(""),"stringCompare"), 2
         returnvalue
         ofs39:
         getlocal 8
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getClassInfo(param1:Object, param2:Array = null, param3:Object = null) : Object
      {
         trait method QName(PackageNamespace(""),"getClassInfo")
         flag FINAL
         dispid 15
         method
         name null
         flag HAS_OPTIONAL
         flag NEED_ACTIVATION
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Array")
         param QName(PackageNamespace(""),"Object")
         optional Null()
         optional Null()
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 7
         localcount 10
         initscopedepth 4
         maxscopedepth 9
         trait slot QName(PackageInternalNs("mx.utils"),"obj")
         slotid 1
         type QName(PackageNamespace(""),"Object")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"excludes")
         slotid 2
         type QName(PackageNamespace(""),"Array")
         value Null()
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"options")
         slotid 3
         type QName(PackageNamespace(""),"Object")
         value Null()
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"n")
         slotid 4
         type QName(PackageNamespace(""),"int")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"i")
         slotid 5
         type QName(PackageNamespace(""),"int")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"result")
         slotid 6
         type QName(PackageNamespace(""),"Object")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"propertyNames")
         slotid 7
         type QName(PackageNamespace(""),"Array")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"cacheKey")
         slotid 8
         type QName(PackageNamespace(""),"String")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"className")
         slotid 9
         type QName(PackageNamespace(""),"String")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"classAlias")
         slotid 10
         type QName(PackageNamespace(""),"String")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"properties")
         slotid 11
         type QName(PackageNamespace(""),"XMLList")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"prop")
         slotid 12
         type QName(PackageNamespace(""),"XML")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"dynamic")
         slotid 13
         type QName(PackageNamespace(""),"Boolean")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"metadataInfo")
         slotid 14
         type QName(PackageNamespace(""),"Object")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"excludeObject")
         slotid 15
         type QName(PackageNamespace(""),"Object")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"isArray")
         slotid 16
         type QName(PackageNamespace(""),"Boolean")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"isDict")
         slotid 17
         type QName(PackageNamespace(""),"Boolean")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"classInfo")
         slotid 18
         type QName(PackageNamespace(""),"XML")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"numericIndex")
         slotid 19
         type QName(PackageNamespace(""),"Boolean")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"key")
         slotid 20
         type null
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"p")
         slotid 21
         type QName(PackageNamespace(""),"String")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"pi")
         slotid 22
         type QName(PackageNamespace(""),"Number")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"uris")
         slotid 23
         type QName(PackageNamespace(""),"Array")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"uri")
         slotid 24
         type QName(PackageNamespace(""),"String")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"qName")
         slotid 25
         type QName(PackageNamespace(""),"QName")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"j")
         slotid 26
         type QName(PackageNamespace(""),"int")
         end ; trait
         
         code
         getlocal0
         pushscope
         newactivation
         dup
         setlocal 4
         pushscope
         getscopeobject 1
         pushbyte 0
         setslot 4
         getscopeobject 1
         pushbyte 0
         setslot 5
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setslot 6
         getscopeobject 1
         pushnull
         coerce_s
         setslot 8
         getscopeobject 1
         pushnull
         coerce_s
         setslot 9
         getscopeobject 1
         pushnull
         coerce_s
         setslot 10
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"XMLList")
         setslot 11
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"XML")
         setslot 12
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setslot 14
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"XML")
         setslot 18
         getscopeobject 1
         pushfalse
         setslot 19
         getscopeobject 1
         pushundefined
         coerce_a
         setslot 20
         getscopeobject 1
         pushnull
         coerce_s
         setslot 21
         getscopeobject 1
         pushnan
         setslot 22
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setslot 23
         getscopeobject 1
         pushnull
         coerce_s
         setslot 24
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"QName")
         setslot 25
         getscopeobject 1
         pushbyte 0
         setslot 26
         getscopeobject 1
         getlocal1
         setslot 1
         getscopeobject 1
         getlocal2
         setslot 2
         getscopeobject 1
         getlocal3
         setslot 3
         getscopeobject 1
         getslot 1
         getlex QName(PackageNamespace("mx.utils"),"ObjectProxy")
         istypelate
         iffalse ofs0
         getscopeobject 1
         findpropstrict QName(PackageNamespace("mx.utils"),"ObjectProxy")
         getscopeobject 1
         getslot 1
         callproperty QName(PackageNamespace("mx.utils"),"ObjectProxy"), 1
         getlex QName(PackageNamespace("mx.utils"),"object_proxy")
         coerce QName(PackageNamespace(""),"Namespace")
         getproperty RTQName("object")
         coerce QName(PackageNamespace(""),"Object")
         setslot 1
         ofs0:
         getscopeobject 1
         getslot 3
         pushnull
         ifne ofs1
         getscopeobject 1
         pushstring "includeReadOnly"
         pushtrue
         pushstring "uris"
         pushnull
         pushstring "includeTransient"
         pushtrue
         newobject 3
         coerce QName(PackageNamespace(""),"Object")
         setslot 3
         ofs1:
         getscopeobject 1
         newarray 0
         coerce QName(PackageNamespace(""),"Array")
         setslot 7
         getscopeobject 1
         pushfalse
         setslot 13
         getscopeobject 1
         getslot 1
         typeof
         pushstring "xml"
         ifne ofs2
         getscopeobject 1
         pushstring "XML"
         setslot 9
         getscopeobject 1
         getscopeobject 1
         getslot 1
         callproperty Multiname("text",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         coerce QName(PackageNamespace(""),"XMLList")
         setslot 11
         getscopeobject 1
         getslot 11
         callproperty Multiname("length",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         iffalse ofs3
         getscopeobject 1
         getslot 7
         pushstring "*"
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         ofs3:
         getscopeobject 1
         getscopeobject 1
         getslot 1
         callproperty Multiname("attributes",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         coerce QName(PackageNamespace(""),"XMLList")
         setslot 11
         jump ofs4
         ofs2:
         getscopeobject 1
         getlex QName(PackageNamespace("mx.utils"),"DescribeTypeCache")
         getscopeobject 1
         getslot 1
         callproperty QName(PackageNamespace(""),"describeType"), 1
         getproperty QName(PackageNamespace(""),"typeDescription")
         coerce QName(PackageNamespace(""),"XML")
         setslot 18
         getscopeobject 1
         getscopeobject 1
         getslot 18
         getproperty MultinameA("name",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         coerce_s
         setslot 9
         getscopeobject 1
         getscopeobject 1
         getslot 18
         getproperty MultinameA("alias",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         coerce_s
         setslot 10
         getscopeobject 1
         getscopeobject 1
         getslot 18
         getproperty MultinameA("isDynamic",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         pushstring "true"
         equals
         setslot 13
         getscopeobject 1
         getslot 3
         getproperty Multiname("includeReadOnly",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         iffalse ofs5
         getscopeobject 1
         pushbyte 0
         setlocal 6
         getscopeobject 1
         getslot 18
         getdescendants Multiname("accessor",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         checkfilter
         coerce_a
         setlocal 7
         getlex QName(PackageNamespace(""),"XMLList")
         pushstring ""
         construct 1
         setlocal 5
         jump ofs6
         ofs7:
         label
         getlocal 7
         getlocal 6
         nextvalue
         dup
         setlocal 8
         dup
         setlocal 9
         pushwith
         getlex MultinameA("access",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         pushstring "writeonly"
         ifeq ofs8
         getlocal 5
         getlocal 6
         getlocal 8
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         ofs8:
         popscope
         kill 9
         kill 8
         ofs6:
         hasnext2 7, 6
         iftrue ofs7
         kill 7
         kill 6
         getlocal 5
         kill 5
         getscopeobject 1
         getslot 18
         getdescendants Multiname("variable",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         add
         coerce QName(PackageNamespace(""),"XMLList")
         setslot 11
         jump ofs9
         ofs5:
         getscopeobject 1
         pushbyte 0
         setlocal 6
         getscopeobject 1
         getslot 18
         getdescendants Multiname("accessor",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         checkfilter
         coerce_a
         setlocal 7
         getlex QName(PackageNamespace(""),"XMLList")
         pushstring ""
         construct 1
         setlocal 5
         jump ofs10
         ofs11:
         label
         getlocal 7
         getlocal 6
         nextvalue
         dup
         setlocal 8
         dup
         setlocal 9
         pushwith
         getlex MultinameA("access",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         pushstring "readwrite"
         equals
         iffalse ofs12
         getlocal 5
         getlocal 6
         getlocal 8
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         ofs12:
         popscope
         kill 9
         kill 8
         ofs10:
         hasnext2 7, 6
         iftrue ofs11
         kill 7
         kill 6
         getlocal 5
         kill 5
         getscopeobject 1
         getslot 18
         getdescendants Multiname("variable",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         add
         coerce QName(PackageNamespace(""),"XMLList")
         setslot 11
         ofs9:
         getscopeobject 1
         pushfalse
         setslot 19
         ofs4:
         getscopeobject 1
         getslot 13
         iftrue ofs13
         getscopeobject 1
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"getCacheKey")
         getscopeobject 1
         getslot 1
         getscopeobject 1
         getslot 2
         getscopeobject 1
         getslot 3
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"getCacheKey"), 3
         coerce_s
         setslot 8
         getscopeobject 1
         getlex QName(PrivateNamespace(null,"#ObjectUtil"),"CLASS_INFO_CACHE")
         getscopeobject 1
         getslot 8
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         setslot 6
         getscopeobject 1
         getslot 6
         pushnull
         ifeq ofs13
         getscopeobject 1
         getslot 6
         returnvalue
         ofs13:
         getscopeobject 1
         newobject 0
         coerce QName(PackageNamespace(""),"Object")
         setslot 6
         getscopeobject 1
         getslot 6
         pushstring "name"
         getscopeobject 1
         getslot 9
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         getscopeobject 1
         getslot 6
         pushstring "alias"
         getscopeobject 1
         getslot 10
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         getscopeobject 1
         getslot 6
         pushstring "properties"
         getscopeobject 1
         getslot 7
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         getscopeobject 1
         getslot 6
         pushstring "dynamic"
         getscopeobject 1
         getslot 13
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         getscopeobject 1
         getslot 6
         pushstring "metadata"
         getscopeobject 1
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"recordMetadata")
         getscopeobject 1
         getslot 11
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"recordMetadata"), 1
         dup
         setlocal 5
         coerce QName(PackageNamespace(""),"Object")
         setslot 14
         getlocal 5
         kill 5
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         getscopeobject 1
         newobject 0
         coerce QName(PackageNamespace(""),"Object")
         setslot 15
         getscopeobject 1
         getslot 2
         iffalse ofs14
         getscopeobject 1
         getscopeobject 1
         getslot 2
         getproperty QName(PackageNamespace(""),"length")
         convert_i
         setslot 4
         getscopeobject 1
         pushbyte 0
         setslot 5
         jump ofs15
         ofs16:
         label
         getscopeobject 1
         getslot 15
         getscopeobject 1
         getslot 2
         getscopeobject 1
         getslot 5
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         pushbyte 1
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         getscopeobject 1
         getslot 5
         increment_i
         getscopeobject 1
         swap
         setslot 5
         ofs15:
         getscopeobject 1
         getslot 5
         getscopeobject 1
         getslot 4
         iflt ofs16
         ofs14:
         getscopeobject 1
         getscopeobject 1
         getslot 9
         pushstring "Array"
         equals
         setslot 16
         getscopeobject 1
         getscopeobject 1
         getslot 9
         pushstring "flash.utils::Dictionary"
         equals
         setslot 17
         getscopeobject 1
         getslot 17
         iffalse ofs17
         pushbyte 0
         setlocal 5
         getscopeobject 1
         getslot 1
         coerce_a
         setlocal 6
         jump ofs18
         ofs19:
         label
         getscopeobject 1
         getlocal 6
         getlocal 5
         nextname
         coerce_a
         setslot 20
         getscopeobject 1
         getslot 7
         getscopeobject 1
         getslot 20
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         ofs18:
         hasnext2 6, 5
         iftrue ofs19
         kill 6
         kill 5
         jump ofs20
         ofs17:
         getscopeobject 1
         getslot 13
         iffalse ofs20
         pushbyte 0
         setlocal 5
         getscopeobject 1
         getslot 1
         coerce_a
         setlocal 6
         jump ofs21
         ofs22:
         label
         getscopeobject 1
         getlocal 6
         getlocal 5
         nextname
         coerce_s
         setslot 21
         getscopeobject 1
         getslot 15
         getscopeobject 1
         getslot 21
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         pushbyte 1
         ifeq ofs21
         getscopeobject 1
         getslot 16
         iffalse ofs23
         getscopeobject 1
         findpropstrict QName(PackageNamespace(""),"parseInt")
         getscopeobject 1
         getslot 21
         callproperty QName(PackageNamespace(""),"parseInt"), 1
         convert_d
         setslot 22
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getscopeobject 1
         getslot 22
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iffalse ofs24
         getscopeobject 1
         getslot 7
         findpropstrict QName(PackageNamespace(""),"QName")
         pushstring ""
         getscopeobject 1
         getslot 21
         constructprop QName(PackageNamespace(""),"QName"), 2
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         jump ofs25
         ofs24:
         getscopeobject 1
         getslot 7
         getscopeobject 1
         getslot 22
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         ofs25:
         jump ofs21
         ofs23:
         getscopeobject 1
         getslot 7
         findpropstrict QName(PackageNamespace(""),"QName")
         pushstring ""
         getscopeobject 1
         getslot 21
         constructprop QName(PackageNamespace(""),"QName"), 2
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         ofs21:
         hasnext2 6, 5
         iftrue ofs22
         kill 6
         kill 5
         getscopeobject 1
         getscopeobject 1
         getslot 16
         convert_b
         dup
         iffalse ofs26
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         findpropstrict QName(PackageNamespace(""),"Number")
         getscopeobject 1
         getslot 21
         callproperty QName(PackageNamespace(""),"Number"), 1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs26:
         convert_b
         setslot 19
         ofs20:
         getscopeobject 1
         getslot 16
         convert_b
         dup
         iftrue ofs27
         pop
         getscopeobject 1
         getslot 17
         convert_b
         ofs27:
         dup
         iftrue ofs28
         pop
         getscopeobject 1
         getslot 9
         pushstring "Object"
         equals
         ofs28:
         iffalse ofs29
         jump ofs30
         ofs29:
         getscopeobject 1
         getslot 9
         pushstring "XML"
         ifne ofs31
         getscopeobject 1
         getscopeobject 1
         getslot 11
         callproperty Multiname("length",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         convert_i
         setslot 4
         getscopeobject 1
         pushbyte 0
         setslot 5
         jump ofs32
         ofs33:
         label
         getscopeobject 1
         getscopeobject 1
         getslot 11
         getscopeobject 1
         getslot 5
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         callproperty Multiname("name",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         coerce_s
         setslot 21
         getscopeobject 1
         getslot 15
         getscopeobject 1
         getslot 21
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         pushbyte 1
         ifeq ofs34
         getscopeobject 1
         getslot 7
         findpropstrict QName(PackageNamespace(""),"QName")
         pushstring ""
         pushstring "@"
         getscopeobject 1
         getslot 21
         add
         constructprop QName(PackageNamespace(""),"QName"), 2
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         ofs34:
         getscopeobject 1
         getslot 5
         increment_i
         getscopeobject 1
         swap
         setslot 5
         ofs32:
         getscopeobject 1
         getslot 5
         getscopeobject 1
         getslot 4
         iflt ofs33
         jump ofs30
         ofs31:
         getscopeobject 1
         getscopeobject 1
         getslot 11
         callproperty Multiname("length",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         convert_i
         setslot 4
         getscopeobject 1
         getscopeobject 1
         getslot 3
         getproperty Multiname("uris",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Array")
         setslot 23
         getscopeobject 1
         pushbyte 0
         setslot 5
         jump ofs35
         ofs36:
         label
         getscopeobject 1
         getscopeobject 1
         getslot 11
         getscopeobject 1
         getslot 5
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"XML")
         setslot 12
         getscopeobject 1
         getscopeobject 1
         getslot 12
         getproperty MultinameA("name",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         coerce_s
         setslot 21
         getscopeobject 1
         getscopeobject 1
         getslot 12
         getproperty MultinameA("uri",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         coerce_s
         setslot 24
         getscopeobject 1
         getslot 15
         getscopeobject 1
         getslot 21
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         pushbyte 1
         ifne ofs37
         jump ofs38
         ofs37:
         getscopeobject 1
         getslot 3
         getproperty Multiname("includeTransient",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         not
         dup
         iffalse ofs39
         pop
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"internalHasMetadata")
         getscopeobject 1
         getslot 14
         getscopeobject 1
         getslot 21
         pushstring "Transient"
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"internalHasMetadata"), 3
         convert_b
         ofs39:
         iffalse ofs40
         jump ofs38
         ofs40:
         getscopeobject 1
         getslot 23
         pushnull
         ifeq ofs41
         getscopeobject 1
         getslot 23
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 1
         equals
         dup
         iffalse ofs42
         pop
         getscopeobject 1
         getslot 23
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         pushstring "*"
         equals
         ofs42:
         iffalse ofs43
         getscopeobject 1
         findpropstrict QName(PackageNamespace(""),"QName")
         getscopeobject 1
         getslot 24
         getscopeobject 1
         getslot 21
         constructprop QName(PackageNamespace(""),"QName"), 2
         coerce QName(PackageNamespace(""),"QName")
         setslot 25
         ofs44:
         getscopeobject 1
         getslot 1
         getscopeobject 1
         getslot 25
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         pop
         getscopeobject 1
         getslot 7
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 0
         ofs45:
         jump ofs46
         ofs47:
         getlocal0
         pushscope
         getlocal 4
         pushscope
         newcatch 0
         dup
         setlocal 5
         dup
         pushscope
         swap
         setslot 1
         popscope
         kill 5
         ofs46:
         jump ofs48
         ofs43:
         getscopeobject 1
         pushbyte 0
         setslot 26
         jump ofs49
         ofs50:
         label
         getscopeobject 1
         getscopeobject 1
         getslot 23
         getscopeobject 1
         getslot 26
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce_s
         setslot 24
         getscopeobject 1
         getslot 12
         getproperty MultinameA("uri",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         getscopeobject 1
         getslot 24
         ifne ofs51
         getscopeobject 1
         findpropstrict QName(PackageNamespace(""),"QName")
         getscopeobject 1
         getslot 24
         getscopeobject 1
         getslot 21
         constructprop QName(PackageNamespace(""),"QName"), 2
         coerce QName(PackageNamespace(""),"QName")
         setslot 25
         ofs52:
         getscopeobject 1
         getslot 1
         getscopeobject 1
         getslot 25
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         pop
         getscopeobject 1
         getslot 7
         getscopeobject 1
         getslot 25
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         ofs53:
         jump ofs51
         ofs54:
         getlocal0
         pushscope
         getlocal 4
         pushscope
         newcatch 1
         dup
         setlocal 5
         dup
         pushscope
         swap
         setslot 1
         popscope
         kill 5
         ofs51:
         getscopeobject 1
         getslot 26
         increment_i
         getscopeobject 1
         swap
         setslot 26
         ofs49:
         getscopeobject 1
         getslot 26
         getscopeobject 1
         getslot 23
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs50
         ofs48:
         jump ofs38
         ofs41:
         getscopeobject 1
         getslot 24
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         ifne ofs38
         getscopeobject 1
         findpropstrict QName(PackageNamespace(""),"QName")
         getscopeobject 1
         getslot 24
         getscopeobject 1
         getslot 21
         constructprop QName(PackageNamespace(""),"QName"), 2
         coerce QName(PackageNamespace(""),"QName")
         setslot 25
         ofs55:
         getscopeobject 1
         getslot 1
         getscopeobject 1
         getslot 25
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         pop
         getscopeobject 1
         getslot 7
         getscopeobject 1
         getslot 25
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         ofs56:
         jump ofs38
         ofs57:
         getlocal0
         pushscope
         getlocal 4
         pushscope
         newcatch 2
         dup
         setlocal 5
         dup
         pushscope
         swap
         setslot 1
         popscope
         kill 5
         ofs38:
         getscopeobject 1
         getslot 5
         increment_i
         getscopeobject 1
         swap
         setslot 5
         ofs35:
         getscopeobject 1
         getslot 5
         getscopeobject 1
         getslot 4
         iflt ofs36
         ofs30:
         getscopeobject 1
         getslot 7
         getlex QName(PackageNamespace(""),"Array")
         getproperty QName(PackageNamespace(""),"CASEINSENSITIVE")
         getscopeobject 1
         getslot 19
         iffalse ofs58
         getlex QName(PackageNamespace(""),"Array")
         getproperty QName(PackageNamespace(""),"NUMERIC")
         coerce_a
         jump ofs59
         ofs58:
         pushbyte 0
         coerce_a
         ofs59:
         bitor
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"sort"), 1
         getscopeobject 1
         getslot 17
         iftrue ofs60
         getscopeobject 1
         pushbyte 0
         setslot 5
         jump ofs61
         ofs62:
         label
         getscopeobject 1
         getslot 7
         getscopeobject 1
         getslot 5
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         getscopeobject 1
         getslot 7
         getscopeobject 1
         getslot 5
         pushbyte 1
         add
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         ifne ofs63
         getscopeobject 1
         getslot 7
         getscopeobject 1
         getslot 5
         pushbyte 1
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"splice"), 2
         getscopeobject 1
         getslot 5
         decrement_i
         getscopeobject 1
         swap
         setslot 5
         ofs63:
         getscopeobject 1
         getslot 5
         increment_i
         getscopeobject 1
         swap
         setslot 5
         ofs61:
         getscopeobject 1
         getslot 5
         getscopeobject 1
         getslot 7
         getproperty QName(PackageNamespace(""),"length")
         decrement
         iflt ofs62
         ofs60:
         getscopeobject 1
         getslot 13
         iftrue ofs64
         getscopeobject 1
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"getCacheKey")
         getscopeobject 1
         getslot 1
         getscopeobject 1
         getslot 2
         getscopeobject 1
         getslot 3
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"getCacheKey"), 3
         coerce_s
         setslot 8
         getlex QName(PrivateNamespace(null,"#ObjectUtil"),"CLASS_INFO_CACHE")
         getscopeobject 1
         getslot 8
         getscopeobject 1
         getslot 6
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         ofs64:
         getscopeobject 1
         getslot 6
         returnvalue
         end ; code
         try from ofs44 to ofs45 target ofs47 type QName(PackageNamespace(""),"Error") name QName(PackageNamespace(""),"e") end
         try from ofs52 to ofs53 target ofs54 type QName(PackageNamespace(""),"Error") name QName(PackageNamespace(""),"e") end
         try from ofs55 to ofs56 target ofs57 type QName(PackageNamespace(""),"Error") name QName(PackageNamespace(""),"e") end
         end ; body
         end ; method
      }
      
      public static function hasMetadata(param1:Object, param2:String, param3:String, param4:Array = null, param5:Object = null) : Boolean
      {
         trait method QName(PackageNamespace(""),"hasMetadata")
         flag FINAL
         dispid 16
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Array")
         param QName(PackageNamespace(""),"Object")
         optional Null()
         optional Null()
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 4
         localcount 8
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"getClassInfo")
         getlocal1
         getlocal 4
         getlocal 5
         callproperty QName(PackageNamespace(""),"getClassInfo"), 3
         coerce QName(PackageNamespace(""),"Object")
         dup
         setlocal 6
         pushstring "metadata"
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         setlocal 7
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"internalHasMetadata")
         getlocal 7
         getlocal2
         getlocal3
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"internalHasMetadata"), 3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function isDynamicObject(param1:Object) : Boolean
      {
         trait method QName(PackageNamespace(""),"isDynamicObject")
         flag FINAL
         dispid 17
         method
         name null
         flag NEED_ACTIVATION
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 4
         maxscopedepth 9
         trait slot QName(PackageInternalNs("mx.utils"),"obj")
         slotid 1
         type QName(PackageNamespace(""),"Object")
         end ; trait
         
         code
         getlocal0
         pushscope
         newactivation
         dup
         setlocal2
         pushscope
         getscopeobject 1
         getlocal1
         setslot 1
         ofs0:
         getscopeobject 1
         getslot 1
         pushstring "wootHackwoot"
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         pop
         ofs1:
         jump ofs2
         ofs3:
         getlocal0
         pushscope
         getlocal2
         pushscope
         newcatch 0
         dup
         setlocal3
         dup
         pushscope
         swap
         setslot 1
         pushfalse
         returnvalue
         popscope
         kill 3
         ofs2:
         pushtrue
         returnvalue
         end ; code
         try from ofs0 to ofs1 target ofs3 type QName(PackageNamespace(""),"Error") name QName(PackageNamespace(""),"e") end
         end ; body
         end ; method
      }
      
      private static function internalHasMetadata(param1:Object, param2:String, param3:String) : Boolean
      {
         trait method QName(PrivateNamespace(null,"#ObjectUtil"),"internalHasMetadata")
         flag FINAL
         dispid 18
         method
         name null
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal 4
         getlocal1
         pushnull
         ifeq ofs0
         getlocal1
         getlocal2
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         dup
         setlocal 4
         pushnull
         ifeq ofs0
         getlocal 4
         getlocal3
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         pushnull
         ifeq ofs0
         pushtrue
         returnvalue
         ofs0:
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function recordMetadata(param1:XMLList) : Object
      {
         trait method QName(PrivateNamespace(null,"#ObjectUtil"),"recordMetadata")
         flag FINAL
         dispid 19
         method
         name null
         flag NEED_ACTIVATION
         param QName(PackageNamespace(""),"XMLList")
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 3
         localcount 9
         initscopedepth 4
         maxscopedepth 9
         trait slot QName(PackageInternalNs("mx.utils"),"properties")
         slotid 1
         type QName(PackageNamespace(""),"XMLList")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"result")
         slotid 2
         type QName(PackageNamespace(""),"Object")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"prop")
         slotid 3
         type QName(PackageNamespace(""),"XML")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"propName")
         slotid 4
         type QName(PackageNamespace(""),"String")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"metadataList")
         slotid 5
         type QName(PackageNamespace(""),"XMLList")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"metadata")
         slotid 6
         type QName(PackageNamespace(""),"Object")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"md")
         slotid 7
         type QName(PackageNamespace(""),"XML")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"mdName")
         slotid 8
         type QName(PackageNamespace(""),"String")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"argsList")
         slotid 9
         type QName(PackageNamespace(""),"XMLList")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"value")
         slotid 10
         type QName(PackageNamespace(""),"Object")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"arg")
         slotid 11
         type QName(PackageNamespace(""),"XML")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"existing")
         slotid 12
         type QName(PackageNamespace(""),"Object")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"argKey")
         slotid 13
         type QName(PackageNamespace(""),"String")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"argValue")
         slotid 14
         type QName(PackageNamespace(""),"String")
         end ; trait
         trait slot QName(PackageInternalNs("mx.utils"),"existingArray")
         slotid 15
         type QName(PackageNamespace(""),"Array")
         end ; trait
         
         code
         getlocal0
         pushscope
         newactivation
         dup
         setlocal2
         pushscope
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"XML")
         setslot 3
         getscopeobject 1
         pushnull
         coerce_s
         setslot 4
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"XMLList")
         setslot 5
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setslot 6
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"XML")
         setslot 7
         getscopeobject 1
         pushnull
         coerce_s
         setslot 8
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"XMLList")
         setslot 9
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setslot 10
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"XML")
         setslot 11
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setslot 12
         getscopeobject 1
         pushnull
         coerce_s
         setslot 13
         getscopeobject 1
         pushnull
         coerce_s
         setslot 14
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setslot 15
         getscopeobject 1
         getlocal1
         setslot 1
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setslot 2
         ofs0:
         pushbyte 0
         setlocal3
         getscopeobject 1
         getslot 1
         coerce_a
         setlocal 4
         jump ofs1
         ofs2:
         label
         getscopeobject 1
         getlocal 4
         getlocal3
         nextvalue
         coerce QName(PackageNamespace(""),"XML")
         setslot 3
         getscopeobject 1
         getscopeobject 1
         getslot 3
         pushstring "name"
         callproperty Multiname("attribute",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 1
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         coerce_s
         setslot 4
         getscopeobject 1
         getscopeobject 1
         getslot 3
         getproperty Multiname("metadata",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"XMLList")
         setslot 5
         getscopeobject 1
         getslot 5
         callproperty Multiname("length",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         pushbyte 0
         ifngt ofs1
         getscopeobject 1
         getslot 2
         pushnull
         ifne ofs3
         getscopeobject 1
         newobject 0
         coerce QName(PackageNamespace(""),"Object")
         setslot 2
         ofs3:
         getscopeobject 1
         newobject 0
         coerce QName(PackageNamespace(""),"Object")
         setslot 6
         getscopeobject 1
         getslot 2
         getscopeobject 1
         getslot 4
         getscopeobject 1
         getslot 6
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         pushbyte 0
         setlocal 5
         getscopeobject 1
         getslot 5
         coerce_a
         setlocal 6
         jump ofs4
         ofs5:
         label
         getscopeobject 1
         getlocal 6
         getlocal 5
         nextvalue
         coerce QName(PackageNamespace(""),"XML")
         setslot 7
         getscopeobject 1
         getscopeobject 1
         getslot 7
         pushstring "name"
         callproperty Multiname("attribute",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 1
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         coerce_s
         setslot 8
         getscopeobject 1
         getscopeobject 1
         getslot 7
         getproperty Multiname("arg",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"XMLList")
         setslot 9
         getscopeobject 1
         newobject 0
         coerce QName(PackageNamespace(""),"Object")
         setslot 10
         pushbyte 0
         setlocal 7
         getscopeobject 1
         getslot 9
         coerce_a
         setlocal 8
         jump ofs6
         ofs7:
         label
         getscopeobject 1
         getlocal 8
         getlocal 7
         nextvalue
         coerce QName(PackageNamespace(""),"XML")
         setslot 11
         getscopeobject 1
         getscopeobject 1
         getslot 11
         pushstring "key"
         callproperty Multiname("attribute",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 1
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         coerce_s
         setslot 13
         getscopeobject 1
         getslot 13
         pushnull
         ifeq ofs6
         getscopeobject 1
         getscopeobject 1
         getslot 11
         pushstring "value"
         callproperty Multiname("attribute",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 1
         callproperty Multiname("toString",[PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")]), 0
         coerce_s
         setslot 14
         getscopeobject 1
         getslot 10
         getscopeobject 1
         getslot 13
         getscopeobject 1
         getslot 14
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         ofs6:
         hasnext2 8, 7
         iftrue ofs7
         kill 8
         kill 7
         getscopeobject 1
         getscopeobject 1
         getslot 6
         getscopeobject 1
         getslot 8
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         setslot 12
         getscopeobject 1
         getslot 12
         pushnull
         ifeq ofs8
         getscopeobject 1
         getslot 12
         getlex QName(PackageNamespace(""),"Array")
         istypelate
         iffalse ofs9
         getscopeobject 1
         getscopeobject 1
         getslot 12
         getlex QName(PackageNamespace(""),"Array")
         astypelate
         coerce QName(PackageNamespace(""),"Array")
         setslot 15
         jump ofs10
         ofs9:
         getscopeobject 1
         getscopeobject 1
         getslot 12
         newarray 1
         coerce QName(PackageNamespace(""),"Array")
         setslot 15
         getscopeobject 1
         getslot 6
         getscopeobject 1
         getslot 8
         deleteproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         pop
         ofs10:
         getscopeobject 1
         getslot 15
         getscopeobject 1
         getslot 10
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         getscopeobject 1
         getscopeobject 1
         getslot 15
         coerce QName(PackageNamespace(""),"Object")
         setslot 12
         jump ofs11
         ofs8:
         getscopeobject 1
         getscopeobject 1
         getslot 10
         coerce QName(PackageNamespace(""),"Object")
         setslot 12
         ofs11:
         getscopeobject 1
         getslot 6
         getscopeobject 1
         getslot 8
         getscopeobject 1
         getslot 12
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         ofs4:
         hasnext2 6, 5
         iftrue ofs5
         kill 6
         kill 5
         ofs1:
         hasnext2 4, 3
         iftrue ofs2
         kill 4
         kill 3
         ofs12:
         jump ofs13
         ofs14:
         getlocal0
         pushscope
         getlocal2
         pushscope
         newcatch 0
         dup
         setlocal3
         dup
         pushscope
         swap
         setslot 1
         popscope
         kill 3
         ofs13:
         getscopeobject 1
         getslot 2
         returnvalue
         end ; code
         try from ofs0 to ofs12 target ofs14 type QName(PackageNamespace(""),"Error") name QName(PackageNamespace(""),"e") end
         end ; body
         end ; method
      }
      
      private static function getCacheKey(param1:Object, param2:Array = null, param3:Object = null) : String
      {
         trait method QName(PrivateNamespace(null,"#ObjectUtil"),"getCacheKey")
         flag FINAL
         dispid 20
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Array")
         param QName(PackageNamespace(""),"Object")
         optional Null()
         optional Null()
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 11
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_u
         setlocal 5
         pushnull
         coerce_s
         setlocal 6
         pushnull
         coerce_s
         setlocal 7
         pushnull
         coerce_s
         setlocal 8
         findpropstrict QName(PackageNamespace("flash.utils"),"getQualifiedClassName")
         getlocal1
         callproperty QName(PackageNamespace("flash.utils"),"getQualifiedClassName"), 1
         coerce_s
         setlocal 4
         getlocal2
         pushnull
         ifeq ofs0
         pushbyte 0
         convert_u
         setlocal 5
         jump ofs1
         ofs2:
         label
         getlocal2
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"String")
         astypelate
         coerce_s
         dup
         setlocal 6
         pushnull
         ifeq ofs3
         getlocal 4
         getlocal 6
         add
         coerce_s
         setlocal 4
         ofs3:
         getlocal 5
         increment
         convert_u
         setlocal 5
         ofs1:
         getlocal 5
         getlocal2
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs2
         ofs0:
         getlocal3
         pushnull
         ifeq ofs4
         pushbyte 0
         setlocal 9
         getlocal3
         coerce_a
         setlocal 10
         jump ofs5
         ofs6:
         label
         getlocal 10
         getlocal 9
         nextname
         coerce_s
         setlocal 7
         getlocal 4
         getlocal 7
         add
         coerce_s
         setlocal 4
         getlocal3
         getlocal 7
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"String")
         astypelate
         coerce_s
         dup
         setlocal 8
         pushnull
         ifeq ofs5
         getlocal 4
         getlocal 8
         add
         coerce_s
         setlocal 4
         ofs5:
         hasnext2 10, 9
         iftrue ofs6
         kill 10
         kill 9
         ofs4:
         getlocal 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function arrayCompare(param1:Array, param2:Array, param3:int, param4:int, param5:Dictionary) : int
      {
         trait method QName(PrivateNamespace(null,"#ObjectUtil"),"arrayCompare")
         flag FINAL
         dispid 21
         method
         name null
         param QName(PackageNamespace(""),"Array")
         param QName(PackageNamespace(""),"Array")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace("flash.utils"),"Dictionary")
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 6
         localcount 10
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal 7
         pushbyte 0
         setlocal 6
         getlocal1
         getproperty QName(PackageNamespace(""),"length")
         getlocal2
         getproperty QName(PackageNamespace(""),"length")
         ifeq ofs0
         getlocal1
         getproperty QName(PackageNamespace(""),"length")
         getlocal2
         getproperty QName(PackageNamespace(""),"length")
         ifnlt ofs1
         pushbyte -1
         setlocal 6
         jump ofs2
         ofs1:
         pushbyte 1
         setlocal 6
         ofs2:
         jump ofs3
         ofs0:
         pushbyte 0
         setlocal 8
         getlocal1
         coerce_a
         setlocal 9
         jump ofs4
         ofs5:
         label
         getlocal 9
         getlocal 8
         nextname
         coerce QName(PackageNamespace(""),"Object")
         setlocal 7
         getlocal2
         getlocal 7
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"hasOwnProperty"), 1
         iffalse ofs6
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"internalCompare")
         getlocal1
         getlocal 7
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         getlocal2
         getlocal 7
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         getlocal3
         getlocal 4
         getlocal 5
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"internalCompare"), 5
         convert_i
         dup
         setlocal 6
         pushbyte 0
         ifeq ofs7
         getlocal 6
         returnvalue
         ofs7:
         jump ofs4
         ofs6:
         pushbyte -1
         returnvalue
         ofs4:
         hasnext2 9, 8
         iftrue ofs5
         kill 9
         kill 8
         pushbyte 0
         setlocal 8
         getlocal2
         coerce_a
         setlocal 9
         jump ofs8
         ofs9:
         label
         getlocal 9
         getlocal 8
         nextname
         coerce QName(PackageNamespace(""),"Object")
         setlocal 7
         getlocal1
         getlocal 7
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"hasOwnProperty"), 1
         iftrue ofs8
         pushbyte 1
         returnvalue
         ofs8:
         hasnext2 9, 8
         iftrue ofs9
         kill 9
         kill 8
         ofs3:
         getlocal 6
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function byteArrayCompare(param1:ByteArray, param2:ByteArray) : int
      {
         trait method QName(PrivateNamespace(null,"#ObjectUtil"),"byteArrayCompare")
         flag FINAL
         dispid 22
         method
         name null
         param QName(PackageNamespace("flash.utils"),"ByteArray")
         param QName(PackageNamespace("flash.utils"),"ByteArray")
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushbyte 0
         setlocal 4
         pushbyte 0
         setlocal3
         getlocal1
         getlocal2
         ifne ofs0
         getlocal3
         returnvalue
         ofs0:
         getlocal1
         getproperty QName(PackageNamespace(""),"length")
         getlocal2
         getproperty QName(PackageNamespace(""),"length")
         ifeq ofs1
         getlocal1
         getproperty QName(PackageNamespace(""),"length")
         getlocal2
         getproperty QName(PackageNamespace(""),"length")
         ifnlt ofs2
         pushbyte -1
         setlocal3
         jump ofs3
         ofs2:
         pushbyte 1
         setlocal3
         ofs3:
         jump ofs4
         ofs1:
         pushbyte 0
         setlocal 4
         jump ofs5
         ofs6:
         label
         findpropstrict QName(PackageNamespace(""),"numericCompare")
         getlocal1
         getlocal 4
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         getlocal2
         getlocal 4
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"numericCompare"), 2
         convert_i
         setlocal3
         getlocal3
         pushbyte 0
         ifeq ofs7
         getlocal1
         getproperty QName(PackageNamespace(""),"length")
         convert_i
         setlocal 4
         ofs7:
         inclocal_i 4
         ofs5:
         getlocal 4
         getlocal1
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs6
         ofs4:
         getlocal3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function listCompare(param1:IList, param2:IList, param3:int, param4:int, param5:Dictionary) : int
      {
         trait method QName(PrivateNamespace(null,"#ObjectUtil"),"listCompare")
         flag FINAL
         dispid 23
         method
         name null
         param QName(PackageNamespace("mx.collections"),"IList")
         param QName(PackageNamespace("mx.collections"),"IList")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace("flash.utils"),"Dictionary")
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 6
         localcount 8
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushbyte 0
         setlocal 7
         pushbyte 0
         setlocal 6
         getlocal1
         getproperty QName(Namespace("mx.collections:IList"),"length")
         getlocal2
         getproperty QName(Namespace("mx.collections:IList"),"length")
         ifeq ofs0
         getlocal1
         getproperty QName(Namespace("mx.collections:IList"),"length")
         getlocal2
         getproperty QName(Namespace("mx.collections:IList"),"length")
         ifnlt ofs1
         pushbyte -1
         setlocal 6
         jump ofs2
         ofs1:
         pushbyte 1
         setlocal 6
         ofs2:
         jump ofs3
         ofs0:
         pushbyte 0
         setlocal 7
         jump ofs4
         ofs5:
         label
         findpropstrict QName(PrivateNamespace(null,"#ObjectUtil"),"internalCompare")
         getlocal1
         getlocal 7
         callproperty QName(Namespace("mx.collections:IList"),"getItemAt"), 1
         getlocal2
         getlocal 7
         callproperty QName(Namespace("mx.collections:IList"),"getItemAt"), 1
         getlocal3
         pushbyte 1
         add
         getlocal 4
         getlocal 5
         callproperty QName(PrivateNamespace(null,"#ObjectUtil"),"internalCompare"), 5
         convert_i
         dup
         setlocal 6
         pushbyte 0
         ifeq ofs6
         getlocal1
         getproperty QName(Namespace("mx.collections:IList"),"length")
         convert_i
         setlocal 7
         ofs6:
         inclocal_i 7
         ofs4:
         getlocal 7
         getlocal1
         getproperty QName(Namespace("mx.collections:IList"),"length")
         iflt ofs5
         ofs3:
         getlocal 6
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function getRef(param1:Object, param2:Dictionary) : Object
      {
         trait method QName(PrivateNamespace(null,"#ObjectUtil"),"getRef")
         flag FINAL
         dispid 24
         method
         name null
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace("flash.utils"),"Dictionary")
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal2
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         jump ofs0
         ofs1:
         label
         getlocal2
         getlocal3
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         ofs0:
         getlocal3
         convert_b
         dup
         iffalse ofs2
         pop
         getlocal3
         getlocal2
         getlocal3
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         equals
         not
         ofs2:
         iftrue ofs1
         getlocal3
         iftrue ofs3
         getlocal1
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         ofs3:
         getlocal3
         getlocal2
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         ifeq ofs4
         getlocal2
         getlocal1
         getlocal3
         setproperty MultinameL([PrivateNamespace(null,"#ObjectUtil"),PackageNamespace(""),PrivateNamespace(null,"#ObjectUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:ObjectUtil"),StaticProtectedNs("mx.utils:ObjectUtil"),StaticProtectedNs("Object")])
         ofs4:
         getlocal3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
