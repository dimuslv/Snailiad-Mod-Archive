
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 4
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("DescribeTypeCacheRecord",[PackageNamespace("mx.utils")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("flash.utils"),"Proxy")
   pushscope
   getlex QName(PackageNamespace("flash.utils"),"Proxy")
   newclass #DescribeTypeCacheRecord
   popscope
   popscope
   initproperty QName(PackageNamespace("mx.utils"),"DescribeTypeCacheRecord")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.utils
{
   import flash.utils.Proxy;
   import flash.utils.flash_proxy;
   
   public dynamic class DescribeTypeCacheRecord extends Proxy
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var cache:Object;
      
      public var typeDescription:XML;
      
      public var typeName:String;
      
      public function DescribeTypeCacheRecord()
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         newobject 0
         initproperty QName(PrivateNamespace(null,"#DescribeTypeCacheRecord"),"cache")
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override flash_proxy function getProperty(param1:*) : *
      {
         trait method QName(Namespace("http://www.adobe.com/2006/actionscript/flash/proxy"),"getProperty")
         flag OVERRIDE
         dispid 0
         method
         name null
         param null
         returns null
         
         body
         maxstack 3
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#DescribeTypeCacheRecord"),"cache")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"#DescribeTypeCacheRecord"),PrivateNamespace(null,"#DescribeTypeCacheRecord/1"),PackageNamespace(""),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),Namespace("http://www.adobe.com/2006/actionscript/flash/proxy"),ProtectedNamespace("mx.utils:DescribeTypeCacheRecord"),StaticProtectedNs("mx.utils:DescribeTypeCacheRecord"),StaticProtectedNs("flash.utils:Proxy"),StaticProtectedNs("Object")])
         coerce_a
         setlocal2
         getlocal2
         getlex QName(PackageNamespace(""),"undefined")
         ifstrictne ofs0
         getlex QName(PackageNamespace("mx.utils"),"DescribeTypeCache")
         getlocal1
         getlocal0
         callproperty QName(PackageInternalNs("mx.utils"),"extractValue"), 2
         coerce_a
         setlocal2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#DescribeTypeCacheRecord"),"cache")
         getlocal1
         getlocal2
         setproperty MultinameL([PrivateNamespace(null,"#DescribeTypeCacheRecord"),PrivateNamespace(null,"#DescribeTypeCacheRecord/1"),PackageNamespace(""),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),Namespace("http://www.adobe.com/2006/actionscript/flash/proxy"),ProtectedNamespace("mx.utils:DescribeTypeCacheRecord"),StaticProtectedNs("mx.utils:DescribeTypeCacheRecord"),StaticProtectedNs("flash.utils:Proxy"),StaticProtectedNs("Object")])
         ofs0:
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override flash_proxy function hasProperty(param1:*) : Boolean
      {
         trait method QName(Namespace("http://www.adobe.com/2006/actionscript/flash/proxy"),"hasProperty")
         flag OVERRIDE
         dispid 0
         method
         name null
         param null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#DescribeTypeCacheRecord"),"cache")
         in
         iffalse ofs0
         pushtrue
         returnvalue
         ofs0:
         getlex QName(PackageNamespace("mx.utils"),"DescribeTypeCache")
         getlocal1
         getlocal0
         callproperty QName(PackageInternalNs("mx.utils"),"extractValue"), 2
         coerce_a
         setlocal2
         getlocal2
         getlex QName(PackageNamespace(""),"undefined")
         ifstrictne ofs1
         pushfalse
         returnvalue
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#DescribeTypeCacheRecord"),"cache")
         getlocal1
         getlocal2
         setproperty MultinameL([PrivateNamespace(null,"#DescribeTypeCacheRecord"),PrivateNamespace(null,"#DescribeTypeCacheRecord/1"),PackageNamespace(""),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),Namespace("http://www.adobe.com/2006/actionscript/flash/proxy"),ProtectedNamespace("mx.utils:DescribeTypeCacheRecord"),StaticProtectedNs("mx.utils:DescribeTypeCacheRecord"),StaticProtectedNs("flash.utils:Proxy"),StaticProtectedNs("Object")])
         pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
