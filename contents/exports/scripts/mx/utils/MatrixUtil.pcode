
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("MatrixUtil",[PackageNamespace("mx.utils")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #MatrixUtil
   popscope
   initproperty QName(PackageNamespace("mx.utils"),"MatrixUtil")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.utils
{
   import flash.display.DisplayObject;
   import flash.geom.Matrix;
   import flash.geom.Matrix3D;
   import flash.geom.PerspectiveProjection;
   import flash.geom.Point;
   import flash.geom.Rectangle;
   import flash.geom.Utils3D;
   import flash.geom.Vector3D;
   import flash.system.ApplicationDomain;
   import mx.core.mx_internal;
   
   use namespace mx_internal;
   
   public final class MatrixUtil
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      private static const RADIANS_PER_DEGREES:Number = 0.017453292519943295;
      
      private static var staticPoint:Point;
      
      private static var fakeDollarParent:QName;
      
      private static var uiComponentClass:Class;
      
      private static var usesMarshalling:Object;
      
      private static var lastModuleFactory:Object;
      
      private static var computedMatrixProperty:QName;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         findproperty QName(PrivateNamespace(null,"#MatrixUtil"),"RADIANS_PER_DEGREES")
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         pushshort 180
         divide
         initproperty QName(PrivateNamespace(null,"#MatrixUtil"),"RADIANS_PER_DEGREES")
         findproperty QName(PrivateNamespace(null,"#MatrixUtil"),"staticPoint")
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 0
         setproperty QName(PrivateNamespace(null,"#MatrixUtil"),"staticPoint")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function MatrixUtil()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function clampRotation(param1:Number) : Number
      {
         trait method QName(PackageNamespace(""),"clampRotation")
         flag FINAL
         dispid 3
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         pushshort 180
         greaterthan
         dup
         iftrue ofs0
         pop
         getlocal1
         pushshort -180
         lessthan
         ofs0:
         iffalse ofs1
         getlocal1
         pushshort 360
         modulo
         convert_d
         setlocal1
         getlocal1
         pushshort 180
         ifngt ofs2
         getlocal1
         pushshort 360
         subtract
         convert_d
         setlocal1
         jump ofs1
         ofs2:
         getlocal1
         pushshort -180
         ifnlt ofs1
         getlocal1
         pushshort 360
         add
         convert_d
         setlocal1
         ofs1:
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function transformPoint(param1:Number, param2:Number, param3:Matrix) : Point
      {
         trait method QName(PackageNamespace(""),"transformPoint")
         flag FINAL
         dispid 4
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace("flash.geom"),"Matrix")
         returns QName(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal3
         iftrue ofs0
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"staticPoint")
         getlocal1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"staticPoint")
         getlocal2
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"staticPoint")
         returnvalue
         ofs0:
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"staticPoint")
         getlocal3
         getproperty QName(PackageNamespace(""),"a")
         getlocal1
         multiply
         getlocal3
         getproperty QName(PackageNamespace(""),"c")
         getlocal2
         multiply
         add
         getlocal3
         getproperty QName(PackageNamespace(""),"tx")
         add
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"staticPoint")
         getlocal3
         getproperty QName(PackageNamespace(""),"b")
         getlocal1
         multiply
         getlocal3
         getproperty QName(PackageNamespace(""),"d")
         getlocal2
         multiply
         add
         getlocal3
         getproperty QName(PackageNamespace(""),"ty")
         add
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"staticPoint")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function composeMatrix(param1:Number = 0, param2:Number = 0, param3:Number = 1, param4:Number = 1, param5:Number = 0, param6:Number = 0, param7:Number = 0) : Matrix
      {
         trait method QName(PackageNamespace(""),"composeMatrix")
         flag FINAL
         dispid 5
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         optional Integer(0)
         optional Integer(0)
         optional Integer(1)
         optional Integer(1)
         optional Integer(0)
         optional Integer(0)
         optional Integer(0)
         returns QName(PackageNamespace("flash.geom"),"Matrix")
         
         body
         maxstack 4
         localcount 9
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("flash.geom"),"Matrix")
         constructprop QName(PackageNamespace("flash.geom"),"Matrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         dup
         setlocal 8
         getlocal 6
         negate
         getlocal 7
         negate
         callpropvoid QName(PackageNamespace(""),"translate"), 2
         getlocal 8
         getlocal3
         getlocal 4
         callpropvoid QName(PackageNamespace(""),"scale"), 2
         getlocal 5
         pushbyte 0
         ifeq ofs0
         getlocal 8
         getlocal 5
         pushshort 180
         divide
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callpropvoid QName(PackageNamespace(""),"rotate"), 1
         ofs0:
         getlocal 8
         getlocal 6
         getlocal1
         add
         getlocal 7
         getlocal2
         add
         callpropvoid QName(PackageNamespace(""),"translate"), 2
         getlocal 8
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function decomposeMatrix(param1:Vector.<Number>, param2:Matrix, param3:Number = 0, param4:Number = 0) : void
      {
         trait method QName(PackageNamespace(""),"decomposeMatrix")
         flag FINAL
         dispid 6
         method
         name null
         flag HAS_OPTIONAL
         param TypeName(QName(PackageNamespace("__AS3__.vec"),"Vector")<QName(PackageNamespace(""),"Number")>)
         param QName(PackageNamespace("flash.geom"),"Matrix")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         optional Integer(0)
         optional Integer(0)
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 11
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal 5
         pushnan
         setlocal 6
         pushnan
         setlocal 7
         pushnan
         setlocal 8
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 10
         getlocal2
         getproperty QName(PackageNamespace(""),"a")
         convert_d
         setlocal 5
         getlocal2
         getproperty QName(PackageNamespace(""),"b")
         convert_d
         setlocal 6
         getlocal1
         pushbyte 3
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         getlocal 5
         multiply
         getlocal 6
         getlocal 6
         multiply
         add
         callproperty QName(PackageNamespace(""),"sqrt"), 1
         setproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal2
         getproperty QName(PackageNamespace(""),"c")
         convert_d
         setlocal 7
         getlocal2
         getproperty QName(PackageNamespace(""),"d")
         convert_d
         setlocal 8
         getlocal1
         pushbyte 4
         getlex QName(PackageNamespace(""),"Math")
         getlocal 7
         getlocal 7
         multiply
         getlocal 8
         getlocal 8
         multiply
         add
         callproperty QName(PackageNamespace(""),"sqrt"), 1
         setproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 5
         getlocal 8
         multiply
         getlocal 6
         getlocal 7
         multiply
         subtract
         convert_d
         dup
         setlocal 9
         pushbyte 0
         ifnlt ofs0
         getlocal1
         pushbyte 4
         getlocal1
         pushbyte 4
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         negate
         setproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 7
         negate
         convert_d
         setlocal 7
         getlocal 8
         negate
         convert_d
         setlocal 8
         ofs0:
         getlocal1
         pushbyte 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 6
         getlocal 5
         callproperty QName(PackageNamespace(""),"atan2"), 2
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"RADIANS_PER_DEGREES")
         divide
         setproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal3
         pushbyte 0
         equals
         not
         dup
         iftrue ofs1
         pop
         getlocal 4
         pushbyte 0
         equals
         not
         ofs1:
         iffalse ofs2
         getlocal2
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal3
         getlocal 4
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         callproperty QName(PackageNamespace(""),"transformPoint"), 1
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 10
         getlocal1
         pushbyte 0
         getlocal 10
         getproperty QName(PackageNamespace(""),"x")
         getlocal3
         subtract
         setproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal1
         pushbyte 1
         getlocal 10
         getproperty QName(PackageNamespace(""),"y")
         getlocal 4
         subtract
         setproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         jump ofs3
         ofs2:
         getlocal1
         pushbyte 0
         getlocal2
         getproperty QName(PackageNamespace(""),"tx")
         setproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal1
         pushbyte 1
         getlocal2
         getproperty QName(PackageNamespace(""),"ty")
         setproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         ofs3:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function rectUnion(param1:Number, param2:Number, param3:Number, param4:Number, param5:Rectangle) : Rectangle
      {
         trait method QName(PackageNamespace(""),"rectUnion")
         flag FINAL
         dispid 7
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace("flash.geom"),"Rectangle")
         returns QName(PackageNamespace("flash.geom"),"Rectangle")
         
         body
         maxstack 6
         localcount 10
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal 5
         iftrue ofs0
         findpropstrict QName(PackageNamespace("flash.geom"),"Rectangle")
         getlocal1
         getlocal2
         getlocal3
         getlocal1
         subtract
         getlocal 4
         getlocal2
         subtract
         constructprop QName(PackageNamespace("flash.geom"),"Rectangle"), 4
         returnvalue
         ofs0:
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         getproperty QName(PackageNamespace(""),"left")
         getlocal1
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 6
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         getproperty QName(PackageNamespace(""),"top")
         getlocal2
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 7
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         getproperty QName(PackageNamespace(""),"right")
         getlocal3
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 8
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         getproperty QName(PackageNamespace(""),"bottom")
         getlocal 4
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 9
         getlocal 5
         getlocal 6
         setproperty QName(PackageNamespace(""),"x")
         getlocal 5
         getlocal 7
         setproperty QName(PackageNamespace(""),"y")
         getlocal 5
         getlocal 8
         getlocal 6
         subtract
         setproperty QName(PackageNamespace(""),"width")
         getlocal 5
         getlocal 9
         getlocal 7
         subtract
         setproperty QName(PackageNamespace(""),"height")
         getlocal 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getEllipseBoundingBox(param1:Number, param2:Number, param3:Number, param4:Number, param5:Matrix, param6:Rectangle = null) : Rectangle
      {
         trait method QName(PackageNamespace(""),"getEllipseBoundingBox")
         flag FINAL
         dispid 8
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace("flash.geom"),"Matrix")
         param QName(PackageNamespace("flash.geom"),"Rectangle")
         optional Null()
         returns QName(PackageNamespace("flash.geom"),"Rectangle")
         
         body
         maxstack 7
         localcount 18
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal 11
         pushnan
         setlocal 12
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 17
         getlocal 5
         getproperty QName(PackageNamespace(""),"a")
         convert_d
         setlocal 7
         getlocal 5
         getproperty QName(PackageNamespace(""),"b")
         convert_d
         setlocal 8
         getlocal 5
         getproperty QName(PackageNamespace(""),"c")
         convert_d
         setlocal 9
         getlocal 5
         getproperty QName(PackageNamespace(""),"d")
         convert_d
         setlocal 10
         getlocal3
         pushbyte 0
         equals
         dup
         iffalse ofs0
         pop
         getlocal 4
         pushbyte 0
         equals
         ofs0:
         iffalse ofs1
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal1
         getlocal2
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 17
         getlocal 5
         getlocal 17
         callproperty QName(PackageNamespace(""),"transformPoint"), 1
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 17
         findpropstrict QName(PackageNamespace(""),"rectUnion")
         getlocal 17
         getproperty QName(PackageNamespace(""),"x")
         getlocal 17
         getproperty QName(PackageNamespace(""),"y")
         getlocal 17
         getproperty QName(PackageNamespace(""),"x")
         getlocal 17
         getproperty QName(PackageNamespace(""),"y")
         getlocal 6
         callproperty QName(PackageNamespace(""),"rectUnion"), 5
         returnvalue
         ofs1:
         getlocal 7
         getlocal3
         multiply
         pushbyte 0
         ifne ofs2
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         pushbyte 2
         divide
         convert_d
         setlocal 11
         jump ofs3
         ofs2:
         getlex QName(PackageNamespace(""),"Math")
         getlocal 9
         getlocal 4
         multiply
         getlocal 7
         getlocal3
         multiply
         divide
         callproperty QName(PackageNamespace(""),"atan"), 1
         convert_d
         setlocal 11
         ofs3:
         getlocal 8
         getlocal3
         multiply
         pushbyte 0
         ifne ofs4
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         pushbyte 2
         divide
         convert_d
         setlocal 12
         jump ofs5
         ofs4:
         getlex QName(PackageNamespace(""),"Math")
         getlocal 10
         getlocal 4
         multiply
         getlocal 8
         getlocal3
         multiply
         divide
         callproperty QName(PackageNamespace(""),"atan"), 1
         convert_d
         setlocal 12
         ofs5:
         getlocal 7
         getlex QName(PackageNamespace(""),"Math")
         getlocal 11
         callproperty QName(PackageNamespace(""),"cos"), 1
         multiply
         getlocal3
         multiply
         getlocal 9
         getlex QName(PackageNamespace(""),"Math")
         getlocal 11
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         getlocal 4
         multiply
         add
         convert_d
         dup
         setlocal 13
         negate
         convert_d
         setlocal 14
         getlocal 13
         getlocal 7
         getlocal1
         multiply
         getlocal 9
         getlocal2
         multiply
         add
         getlocal 5
         getproperty QName(PackageNamespace(""),"tx")
         add
         add
         convert_d
         setlocal 13
         getlocal 14
         getlocal 7
         getlocal1
         multiply
         getlocal 9
         getlocal2
         multiply
         add
         getlocal 5
         getproperty QName(PackageNamespace(""),"tx")
         add
         add
         convert_d
         setlocal 14
         getlocal 8
         getlex QName(PackageNamespace(""),"Math")
         getlocal 12
         callproperty QName(PackageNamespace(""),"cos"), 1
         multiply
         getlocal3
         multiply
         getlocal 10
         getlex QName(PackageNamespace(""),"Math")
         getlocal 12
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         getlocal 4
         multiply
         add
         convert_d
         dup
         setlocal 15
         negate
         convert_d
         setlocal 16
         getlocal 15
         getlocal 8
         getlocal1
         multiply
         getlocal 10
         getlocal2
         multiply
         add
         getlocal 5
         getproperty QName(PackageNamespace(""),"ty")
         add
         add
         convert_d
         setlocal 15
         getlocal 16
         getlocal 8
         getlocal1
         multiply
         getlocal 10
         getlocal2
         multiply
         add
         getlocal 5
         getproperty QName(PackageNamespace(""),"ty")
         add
         add
         convert_d
         setlocal 16
         findpropstrict QName(PackageNamespace(""),"rectUnion")
         getlex QName(PackageNamespace(""),"Math")
         getlocal 13
         getlocal 14
         callproperty QName(PackageNamespace(""),"min"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 15
         getlocal 16
         callproperty QName(PackageNamespace(""),"min"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 13
         getlocal 14
         callproperty QName(PackageNamespace(""),"max"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 15
         getlocal 16
         callproperty QName(PackageNamespace(""),"max"), 2
         getlocal 6
         callproperty QName(PackageNamespace(""),"rectUnion"), 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getQBezierSegmentBBox(param1:Number, param2:Number, param3:Number, param4:Number, param5:Number, param6:Number, param7:Number, param8:Number, param9:Matrix, param10:Rectangle) : Rectangle
      {
         trait method QName(PackageNamespace(""),"getQBezierSegmentBBox")
         flag FINAL
         dispid 9
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace("flash.geom"),"Matrix")
         param QName(PackageNamespace("flash.geom"),"Rectangle")
         returns QName(PackageNamespace("flash.geom"),"Rectangle")
         
         body
         maxstack 6
         localcount 22
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 11
         pushnan
         setlocal 18
         pushnan
         setlocal 19
         pushnan
         setlocal 20
         pushnan
         setlocal 21
         getlex QName(PackageNamespace("mx.utils"),"MatrixUtil")
         getlocal1
         getlocal 7
         multiply
         getlocal2
         getlocal 8
         multiply
         getlocal 9
         callproperty QName(PackageNamespace(""),"transformPoint"), 3
         coerce QName(PackageNamespace("flash.geom"),"Point")
         dup
         setlocal 11
         getproperty QName(PackageNamespace(""),"x")
         convert_d
         setlocal1
         getlocal 11
         getproperty QName(PackageNamespace(""),"y")
         convert_d
         setlocal2
         getlex QName(PackageNamespace("mx.utils"),"MatrixUtil")
         getlocal3
         getlocal 7
         multiply
         getlocal 4
         getlocal 8
         multiply
         getlocal 9
         callproperty QName(PackageNamespace(""),"transformPoint"), 3
         coerce QName(PackageNamespace("flash.geom"),"Point")
         dup
         setlocal 11
         getproperty QName(PackageNamespace(""),"x")
         convert_d
         setlocal3
         getlocal 11
         getproperty QName(PackageNamespace(""),"y")
         convert_d
         setlocal 4
         getlex QName(PackageNamespace("mx.utils"),"MatrixUtil")
         getlocal 5
         getlocal 7
         multiply
         getlocal 6
         getlocal 8
         multiply
         getlocal 9
         callproperty QName(PackageNamespace(""),"transformPoint"), 3
         coerce QName(PackageNamespace("flash.geom"),"Point")
         dup
         setlocal 11
         getproperty QName(PackageNamespace(""),"x")
         convert_d
         setlocal 5
         getlocal 11
         getproperty QName(PackageNamespace(""),"y")
         convert_d
         setlocal 6
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlocal 5
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 12
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlocal 5
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 13
         getlex QName(PackageNamespace(""),"Math")
         getlocal2
         getlocal 6
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 14
         getlex QName(PackageNamespace(""),"Math")
         getlocal2
         getlocal 6
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 15
         getlocal1
         pushbyte 2
         getlocal3
         multiply
         subtract
         getlocal 5
         add
         convert_d
         dup
         setlocal 16
         pushbyte 0
         ifeq ofs0
         getlocal1
         getlocal3
         subtract
         getlocal 16
         divide
         convert_d
         setlocal 18
         pushbyte 0
         getlocal 18
         lessequals
         dup
         iffalse ofs1
         pop
         getlocal 18
         pushbyte 1
         lessequals
         ofs1:
         iffalse ofs0
         pushbyte 1
         getlocal 18
         subtract
         pushbyte 1
         getlocal 18
         subtract
         multiply
         getlocal1
         multiply
         pushbyte 2
         getlocal 18
         multiply
         pushbyte 1
         getlocal 18
         subtract
         multiply
         getlocal3
         multiply
         add
         getlocal 18
         getlocal 18
         multiply
         getlocal 5
         multiply
         add
         convert_d
         setlocal 19
         getlex QName(PackageNamespace(""),"Math")
         getlocal 19
         getlocal 12
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 12
         getlex QName(PackageNamespace(""),"Math")
         getlocal 19
         getlocal 13
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 13
         ofs0:
         getlocal2
         pushbyte 2
         getlocal 4
         multiply
         subtract
         getlocal 6
         add
         convert_d
         dup
         setlocal 17
         pushbyte 0
         ifeq ofs2
         getlocal2
         getlocal 4
         subtract
         getlocal 17
         divide
         convert_d
         setlocal 20
         pushbyte 0
         getlocal 20
         lessequals
         dup
         iffalse ofs3
         pop
         getlocal 20
         pushbyte 1
         lessequals
         ofs3:
         iffalse ofs2
         pushbyte 1
         getlocal 20
         subtract
         pushbyte 1
         getlocal 20
         subtract
         multiply
         getlocal2
         multiply
         pushbyte 2
         getlocal 20
         multiply
         pushbyte 1
         getlocal 20
         subtract
         multiply
         getlocal 4
         multiply
         add
         getlocal 20
         getlocal 20
         multiply
         getlocal 6
         multiply
         add
         convert_d
         setlocal 21
         getlex QName(PackageNamespace(""),"Math")
         getlocal 21
         getlocal 14
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 14
         getlex QName(PackageNamespace(""),"Math")
         getlocal 21
         getlocal 15
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 15
         ofs2:
         findpropstrict QName(PackageNamespace(""),"rectUnion")
         getlocal 12
         getlocal 14
         getlocal 13
         getlocal 15
         getlocal 10
         callproperty QName(PackageNamespace(""),"rectUnion"), 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function transformSize(param1:Number, param2:Number, param3:Matrix) : Point
      {
         trait method QName(PackageNamespace(""),"transformSize")
         flag FINAL
         dispid 10
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace("flash.geom"),"Matrix")
         returns QName(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 5
         localcount 20
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal3
         getproperty QName(PackageNamespace(""),"a")
         convert_d
         setlocal 4
         getlocal3
         getproperty QName(PackageNamespace(""),"b")
         convert_d
         setlocal 5
         getlocal3
         getproperty QName(PackageNamespace(""),"c")
         convert_d
         setlocal 6
         getlocal3
         getproperty QName(PackageNamespace(""),"d")
         convert_d
         setlocal 7
         pushbyte 0
         convert_d
         setlocal 8
         pushbyte 0
         convert_d
         setlocal 9
         getlocal1
         getlocal 4
         multiply
         convert_d
         setlocal 10
         getlocal1
         getlocal 5
         multiply
         convert_d
         setlocal 11
         getlocal2
         getlocal 6
         multiply
         convert_d
         setlocal 12
         getlocal2
         getlocal 7
         multiply
         convert_d
         setlocal 13
         getlocal 10
         getlocal 12
         add
         convert_d
         setlocal 14
         getlocal 11
         getlocal 13
         add
         convert_d
         setlocal 15
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         getlocal 10
         callproperty QName(PackageNamespace(""),"min"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 12
         getlocal 14
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 16
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         getlocal 10
         callproperty QName(PackageNamespace(""),"max"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 12
         getlocal 14
         callproperty QName(PackageNamespace(""),"max"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 17
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"Math")
         getlocal 9
         getlocal 11
         callproperty QName(PackageNamespace(""),"min"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 13
         getlocal 15
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 18
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"Math")
         getlocal 9
         getlocal 11
         callproperty QName(PackageNamespace(""),"max"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 13
         getlocal 15
         callproperty QName(PackageNamespace(""),"max"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 19
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"staticPoint")
         getlocal 17
         getlocal 16
         subtract
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"staticPoint")
         getlocal 19
         getlocal 18
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"staticPoint")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function transformBounds(param1:Number, param2:Number, param3:Matrix, param4:Point = null) : Point
      {
         trait method QName(PackageNamespace(""),"transformBounds")
         flag FINAL
         dispid 11
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace("flash.geom"),"Matrix")
         param QName(PackageNamespace("flash.geom"),"Point")
         optional Null()
         returns QName(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 5
         localcount 25
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal 21
         pushnan
         setlocal 22
         pushnan
         setlocal 23
         pushnan
         setlocal 24
         getlocal3
         getproperty QName(PackageNamespace(""),"a")
         convert_d
         setlocal 5
         getlocal3
         getproperty QName(PackageNamespace(""),"b")
         convert_d
         setlocal 6
         getlocal3
         getproperty QName(PackageNamespace(""),"c")
         convert_d
         setlocal 7
         getlocal3
         getproperty QName(PackageNamespace(""),"d")
         convert_d
         setlocal 8
         pushbyte 0
         convert_d
         setlocal 9
         pushbyte 0
         convert_d
         setlocal 10
         getlocal1
         getlocal 5
         multiply
         convert_d
         setlocal 11
         getlocal1
         getlocal 6
         multiply
         convert_d
         setlocal 12
         getlocal2
         getlocal 7
         multiply
         convert_d
         setlocal 13
         getlocal2
         getlocal 8
         multiply
         convert_d
         setlocal 14
         getlocal 11
         getlocal 13
         add
         convert_d
         setlocal 15
         getlocal 12
         getlocal 14
         add
         convert_d
         setlocal 16
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"Math")
         getlocal 9
         getlocal 11
         callproperty QName(PackageNamespace(""),"min"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 13
         getlocal 15
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 17
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"Math")
         getlocal 9
         getlocal 11
         callproperty QName(PackageNamespace(""),"max"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 13
         getlocal 15
         callproperty QName(PackageNamespace(""),"max"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 18
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"Math")
         getlocal 10
         getlocal 12
         callproperty QName(PackageNamespace(""),"min"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 14
         getlocal 16
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 19
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"Math")
         getlocal 10
         getlocal 12
         callproperty QName(PackageNamespace(""),"max"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 14
         getlocal 16
         callproperty QName(PackageNamespace(""),"max"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 20
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"staticPoint")
         getlocal 18
         getlocal 17
         subtract
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"staticPoint")
         getlocal 20
         getlocal 19
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal 4
         iffalse ofs0
         getlocal3
         getproperty QName(PackageNamespace(""),"tx")
         convert_d
         setlocal 21
         getlocal3
         getproperty QName(PackageNamespace(""),"ty")
         convert_d
         setlocal 22
         getlocal 4
         getproperty QName(PackageNamespace(""),"x")
         convert_d
         setlocal 23
         getlocal 4
         getproperty QName(PackageNamespace(""),"y")
         convert_d
         setlocal 24
         getlocal 4
         getlocal 17
         getlocal 5
         getlocal 23
         multiply
         add
         getlocal 6
         getlocal 24
         multiply
         add
         getlocal 21
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal 4
         getlocal 19
         getlocal 7
         getlocal 23
         multiply
         add
         getlocal 8
         getlocal 24
         multiply
         add
         getlocal 22
         add
         setproperty QName(PackageNamespace(""),"y")
         ofs0:
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"staticPoint")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function projectBounds(param1:Rectangle, param2:Matrix3D, param3:PerspectiveProjection) : Rectangle
      {
         trait method QName(PackageNamespace(""),"projectBounds")
         flag FINAL
         dispid 12
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Rectangle")
         param QName(PackageNamespace("flash.geom"),"Matrix3D")
         param QName(PackageNamespace("flash.geom"),"PerspectiveProjection")
         returns QName(PackageNamespace("flash.geom"),"Rectangle")
         
         body
         maxstack 5
         localcount 14
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal3
         getproperty QName(PackageNamespace(""),"projectionCenter")
         getproperty QName(PackageNamespace(""),"x")
         convert_d
         setlocal 4
         getlocal3
         getproperty QName(PackageNamespace(""),"projectionCenter")
         getproperty QName(PackageNamespace(""),"y")
         convert_d
         setlocal 5
         getlocal2
         getlocal 4
         negate
         getlocal 5
         negate
         getlocal3
         getproperty QName(PackageNamespace(""),"focalLength")
         callpropvoid QName(PackageNamespace(""),"appendTranslation"), 3
         getlocal2
         getlocal3
         callproperty QName(PackageNamespace(""),"toMatrix3D"), 0
         callpropvoid QName(PackageNamespace(""),"append"), 1
         findpropstrict QName(PackageNamespace("flash.geom"),"Vector3D")
         getlocal1
         getproperty QName(PackageNamespace(""),"left")
         getlocal1
         getproperty QName(PackageNamespace(""),"top")
         pushbyte 0
         constructprop QName(PackageNamespace("flash.geom"),"Vector3D"), 3
         coerce QName(PackageNamespace("flash.geom"),"Vector3D")
         setlocal 6
         findpropstrict QName(PackageNamespace("flash.geom"),"Vector3D")
         getlocal1
         getproperty QName(PackageNamespace(""),"right")
         getlocal1
         getproperty QName(PackageNamespace(""),"top")
         pushbyte 0
         constructprop QName(PackageNamespace("flash.geom"),"Vector3D"), 3
         coerce QName(PackageNamespace("flash.geom"),"Vector3D")
         setlocal 7
         findpropstrict QName(PackageNamespace("flash.geom"),"Vector3D")
         getlocal1
         getproperty QName(PackageNamespace(""),"left")
         getlocal1
         getproperty QName(PackageNamespace(""),"bottom")
         pushbyte 0
         constructprop QName(PackageNamespace("flash.geom"),"Vector3D"), 3
         coerce QName(PackageNamespace("flash.geom"),"Vector3D")
         setlocal 8
         findpropstrict QName(PackageNamespace("flash.geom"),"Vector3D")
         getlocal1
         getproperty QName(PackageNamespace(""),"right")
         getlocal1
         getproperty QName(PackageNamespace(""),"bottom")
         pushbyte 0
         constructprop QName(PackageNamespace("flash.geom"),"Vector3D"), 3
         coerce QName(PackageNamespace("flash.geom"),"Vector3D")
         setlocal 9
         getlex QName(PackageNamespace("flash.geom"),"Utils3D")
         getlocal2
         getlocal 6
         callproperty QName(PackageNamespace(""),"projectVector"), 2
         coerce QName(PackageNamespace("flash.geom"),"Vector3D")
         setlocal 6
         getlex QName(PackageNamespace("flash.geom"),"Utils3D")
         getlocal2
         getlocal 7
         callproperty QName(PackageNamespace(""),"projectVector"), 2
         coerce QName(PackageNamespace("flash.geom"),"Vector3D")
         setlocal 7
         getlex QName(PackageNamespace("flash.geom"),"Utils3D")
         getlocal2
         getlocal 8
         callproperty QName(PackageNamespace(""),"projectVector"), 2
         coerce QName(PackageNamespace("flash.geom"),"Vector3D")
         setlocal 8
         getlex QName(PackageNamespace("flash.geom"),"Utils3D")
         getlocal2
         getlocal 9
         callproperty QName(PackageNamespace(""),"projectVector"), 2
         coerce QName(PackageNamespace("flash.geom"),"Vector3D")
         setlocal 9
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"Math")
         getlocal 6
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         getproperty QName(PackageNamespace(""),"x")
         callproperty QName(PackageNamespace(""),"max"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         getproperty QName(PackageNamespace(""),"x")
         getlocal 9
         getproperty QName(PackageNamespace(""),"x")
         callproperty QName(PackageNamespace(""),"max"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 10
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"Math")
         getlocal 6
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         getproperty QName(PackageNamespace(""),"x")
         callproperty QName(PackageNamespace(""),"min"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         getproperty QName(PackageNamespace(""),"x")
         getlocal 9
         getproperty QName(PackageNamespace(""),"x")
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 11
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"Math")
         getlocal 6
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         getproperty QName(PackageNamespace(""),"y")
         callproperty QName(PackageNamespace(""),"max"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         getproperty QName(PackageNamespace(""),"y")
         getlocal 9
         getproperty QName(PackageNamespace(""),"y")
         callproperty QName(PackageNamespace(""),"max"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 12
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"Math")
         getlocal 6
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         getproperty QName(PackageNamespace(""),"y")
         callproperty QName(PackageNamespace(""),"min"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         getproperty QName(PackageNamespace(""),"y")
         getlocal 9
         getproperty QName(PackageNamespace(""),"y")
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 13
         getlocal1
         getlocal 11
         getlocal 4
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal1
         getlocal 13
         getlocal 5
         add
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         getlocal 10
         getlocal 11
         subtract
         setproperty QName(PackageNamespace(""),"width")
         getlocal1
         getlocal 12
         getlocal 13
         subtract
         setproperty QName(PackageNamespace(""),"height")
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function isDeltaIdentity(param1:Matrix) : Boolean
      {
         trait method QName(PackageNamespace(""),"isDeltaIdentity")
         flag FINAL
         dispid 13
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Matrix")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         getproperty QName(PackageNamespace(""),"a")
         pushbyte 1
         equals
         dup
         iffalse ofs0
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"d")
         pushbyte 1
         equals
         ofs0:
         dup
         iffalse ofs1
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"b")
         pushbyte 0
         equals
         ofs1:
         dup
         iffalse ofs2
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"c")
         pushbyte 0
         equals
         ofs2:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function fitBounds(param1:Number, param2:Number, param3:Matrix, param4:Number, param5:Number, param6:Number, param7:Number, param8:Number, param9:Number) : Point
      {
         trait method QName(PackageNamespace(""),"fitBounds")
         flag FINAL
         dispid 14
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace("flash.geom"),"Matrix")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 9
         localcount 11
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 10
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         convert_b
         dup
         iffalse ofs0
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal2
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         convert_b
         ofs0:
         iffalse ofs1
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal 4
         getlocal 5
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         returnvalue
         ofs1:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs2
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal2
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs2:
         iffalse ofs3
         findpropstrict QName(PackageNamespace(""),"calcUBoundsToFitTBounds")
         getlocal1
         getlocal2
         getlocal3
         getlocal 6
         getlocal 7
         getlocal 8
         getlocal 9
         callproperty QName(PackageNamespace(""),"calcUBoundsToFitTBounds"), 7
         coerce QName(PackageNamespace("flash.geom"),"Point")
         dup
         setlocal 10
         iftrue ofs4
         findpropstrict QName(PackageNamespace(""),"calcUBoundsToFitTBoundsWidth")
         getlocal1
         getlocal3
         getlocal 4
         getlocal 5
         getlocal 6
         getlocal 7
         getlocal 8
         getlocal 9
         callproperty QName(PackageNamespace(""),"calcUBoundsToFitTBoundsWidth"), 8
         coerce QName(PackageNamespace("flash.geom"),"Point")
         dup
         setlocal 10
         convert_b
         dup
         iffalse ofs5
         pop
         findpropstrict QName(PackageNamespace(""),"transformSize")
         getlocal 10
         getproperty QName(PackageNamespace(""),"x")
         getlocal 10
         getproperty QName(PackageNamespace(""),"y")
         getlocal3
         callproperty QName(PackageNamespace(""),"transformSize"), 3
         getproperty QName(PackageNamespace(""),"y")
         getlocal2
         greaterthan
         ofs5:
         iffalse ofs4
         findpropstrict QName(PackageNamespace(""),"calcUBoundsToFitTBoundsHeight")
         getlocal2
         getlocal3
         getlocal 4
         getlocal 5
         getlocal 6
         getlocal 7
         getlocal 8
         getlocal 9
         callproperty QName(PackageNamespace(""),"calcUBoundsToFitTBoundsHeight"), 8
         coerce QName(PackageNamespace("flash.geom"),"Point")
         dup
         setlocal 10
         convert_b
         dup
         iffalse ofs6
         pop
         findpropstrict QName(PackageNamespace(""),"transformSize")
         getlocal 10
         getproperty QName(PackageNamespace(""),"x")
         getlocal 10
         getproperty QName(PackageNamespace(""),"y")
         getlocal3
         callproperty QName(PackageNamespace(""),"transformSize"), 3
         getproperty QName(PackageNamespace(""),"x")
         getlocal1
         greaterthan
         ofs6:
         iffalse ofs4
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 10
         ofs4:
         getlocal 10
         returnvalue
         jump ofs3
         ofs3:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs7
         findpropstrict QName(PackageNamespace(""),"calcUBoundsToFitTBoundsWidth")
         getlocal1
         getlocal3
         getlocal 4
         getlocal 5
         getlocal 6
         getlocal 7
         getlocal 8
         getlocal 9
         callproperty QName(PackageNamespace(""),"calcUBoundsToFitTBoundsWidth"), 8
         returnvalue
         ofs7:
         findpropstrict QName(PackageNamespace(""),"calcUBoundsToFitTBoundsHeight")
         getlocal2
         getlocal3
         getlocal 4
         getlocal 5
         getlocal 6
         getlocal 7
         getlocal 8
         getlocal 9
         callproperty QName(PackageNamespace(""),"calcUBoundsToFitTBoundsHeight"), 8
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function calcUBoundsToFitTBoundsHeight(param1:Number, param2:Matrix, param3:Number, param4:Number, param5:Number, param6:Number, param7:Number, param8:Number) : Point
      {
         trait method QName(PackageNamespace(""),"calcUBoundsToFitTBoundsHeight")
         flag FINAL
         dispid 15
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace("flash.geom"),"Matrix")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 10
         localcount 20
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 12
         pushnan
         setlocal 13
         pushnan
         setlocal 14
         pushnan
         setlocal 15
         pushnan
         setlocal 16
         pushnan
         setlocal 18
         pushnan
         setlocal 19
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         getlex QName(PackageNamespace(""),"Math")
         getlocal 7
         getlocal3
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal3
         getlex QName(PackageNamespace(""),"Math")
         getlocal 6
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         getlocal 4
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 4
         getlocal2
         getproperty QName(PackageNamespace(""),"b")
         convert_d
         setlocal 9
         getlocal2
         getproperty QName(PackageNamespace(""),"d")
         convert_d
         setlocal 10
         pushdouble -1.0E-9
         getlocal 9
         lessthan
         dup
         iffalse ofs0
         pop
         getlocal 9
         pushdouble 1.0E-9
         lessthan
         ofs0:
         iffalse ofs1
         pushbyte 0
         convert_d
         setlocal 9
         ofs1:
         pushdouble -1.0E-9
         getlocal 10
         lessthan
         dup
         iffalse ofs2
         pop
         getlocal 10
         pushdouble 1.0E-9
         lessthan
         ofs2:
         iffalse ofs3
         pushbyte 0
         convert_d
         setlocal 10
         ofs3:
         getlocal 9
         pushbyte 0
         ifne ofs4
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal3
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getlocal 10
         callproperty QName(PackageNamespace(""),"abs"), 1
         divide
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         returnvalue
         ofs4:
         getlocal 10
         pushbyte 0
         ifne ofs5
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getlocal 9
         callproperty QName(PackageNamespace(""),"abs"), 1
         divide
         getlocal 4
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         returnvalue
         ofs5:
         getlocal 9
         getlocal 10
         multiply
         pushbyte 0
         ifnge ofs6
         getlocal 10
         convert_d
         jump ofs7
         ofs6:
         getlocal 10
         negate
         convert_d
         ofs7:
         convert_d
         dup
         setlocal 11
         pushbyte 0
         ifeq ofs8
         pushbyte 1
         getlocal 11
         divide
         convert_d
         setlocal 18
         getlocal3
         convert_d
         setlocal 13
         getlocal1
         getlocal 9
         getlocal 13
         multiply
         subtract
         getlocal 18
         multiply
         convert_d
         setlocal 14
         getlocal 6
         getlocal 14
         lessequals
         dup
         iffalse ofs9
         pop
         getlocal 14
         getlocal 8
         lessequals
         ofs9:
         dup
         iffalse ofs10
         pop
         getlocal 9
         getlocal 13
         multiply
         getlocal 11
         getlocal 14
         multiply
         add
         pushbyte 0
         greaterequals
         ofs10:
         iffalse ofs11
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal 13
         getlocal 14
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 12
         ofs11:
         getlocal1
         negate
         getlocal 9
         getlocal 13
         multiply
         subtract
         getlocal 18
         multiply
         convert_d
         setlocal 14
         getlocal 6
         getlocal 14
         lessequals
         dup
         iffalse ofs12
         pop
         getlocal 14
         getlocal 8
         lessequals
         ofs12:
         dup
         iffalse ofs13
         pop
         getlocal 9
         getlocal 13
         multiply
         getlocal 11
         getlocal 14
         multiply
         add
         pushbyte 0
         lessthan
         ofs13:
         iffalse ofs8
         getlocal 12
         not
         dup
         iftrue ofs14
         pop
         findpropstrict QName(PackageNamespace(""),"transformSize")
         getlocal 12
         getproperty QName(PackageNamespace(""),"x")
         getlocal 12
         getproperty QName(PackageNamespace(""),"y")
         getlocal2
         callproperty QName(PackageNamespace(""),"transformSize"), 3
         getproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"transformSize")
         getlocal 13
         getlocal 14
         getlocal2
         callproperty QName(PackageNamespace(""),"transformSize"), 3
         getproperty QName(PackageNamespace(""),"x")
         greaterthan
         ofs14:
         iffalse ofs8
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal 13
         getlocal 14
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 12
         ofs8:
         getlocal 9
         pushbyte 0
         ifeq ofs15
         pushbyte 1
         getlocal 9
         divide
         convert_d
         setlocal 19
         getlocal 4
         convert_d
         setlocal 14
         getlocal1
         getlocal 11
         getlocal 14
         multiply
         subtract
         getlocal 19
         multiply
         convert_d
         setlocal 13
         getlocal 5
         getlocal 13
         lessequals
         dup
         iffalse ofs16
         pop
         getlocal 13
         getlocal 7
         lessequals
         ofs16:
         dup
         iffalse ofs17
         pop
         getlocal 9
         getlocal 13
         multiply
         getlocal 11
         getlocal 14
         multiply
         add
         pushbyte 0
         greaterequals
         ofs17:
         iffalse ofs18
         getlocal 12
         not
         dup
         iftrue ofs19
         pop
         findpropstrict QName(PackageNamespace(""),"transformSize")
         getlocal 12
         getproperty QName(PackageNamespace(""),"x")
         getlocal 12
         getproperty QName(PackageNamespace(""),"y")
         getlocal2
         callproperty QName(PackageNamespace(""),"transformSize"), 3
         getproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"transformSize")
         getlocal 13
         getlocal 14
         getlocal2
         callproperty QName(PackageNamespace(""),"transformSize"), 3
         getproperty QName(PackageNamespace(""),"x")
         greaterthan
         ofs19:
         iffalse ofs18
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal 13
         getlocal 14
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 12
         ofs18:
         getlocal1
         negate
         getlocal 11
         getlocal 14
         multiply
         subtract
         getlocal 19
         multiply
         convert_d
         setlocal 13
         getlocal 5
         getlocal 13
         lessequals
         dup
         iffalse ofs20
         pop
         getlocal 13
         getlocal 7
         lessequals
         ofs20:
         dup
         iffalse ofs21
         pop
         getlocal 9
         getlocal 13
         multiply
         getlocal 11
         getlocal 14
         multiply
         add
         pushbyte 0
         lessthan
         ofs21:
         iffalse ofs15
         getlocal 12
         not
         dup
         iftrue ofs22
         pop
         findpropstrict QName(PackageNamespace(""),"transformSize")
         getlocal 12
         getproperty QName(PackageNamespace(""),"x")
         getlocal 12
         getproperty QName(PackageNamespace(""),"y")
         getlocal2
         callproperty QName(PackageNamespace(""),"transformSize"), 3
         getproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"transformSize")
         getlocal 13
         getlocal 14
         getlocal2
         callproperty QName(PackageNamespace(""),"transformSize"), 3
         getproperty QName(PackageNamespace(""),"x")
         greaterthan
         ofs22:
         iffalse ofs15
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal 13
         getlocal 14
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 12
         ofs15:
         getlocal 12
         iffalse ofs23
         getlocal 12
         returnvalue
         ofs23:
         getlocal2
         getproperty QName(PackageNamespace(""),"a")
         convert_d
         setlocal 15
         getlocal2
         getproperty QName(PackageNamespace(""),"c")
         convert_d
         setlocal 16
         getlocal 15
         getlocal 16
         multiply
         pushbyte 0
         ifnge ofs24
         getlocal 16
         convert_d
         jump ofs25
         ofs24:
         getlocal 16
         negate
         convert_d
         ofs25:
         convert_d
         setlocal 17
         findpropstrict QName(PrivateNamespace(null,"#MatrixUtil"),"solveEquation")
         getlocal 9
         getlocal 11
         getlocal1
         getlocal 5
         getlocal 6
         getlocal 7
         getlocal 8
         getlocal 15
         getlocal 17
         callproperty QName(PrivateNamespace(null,"#MatrixUtil"),"solveEquation"), 9
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function calcUBoundsToFitTBoundsWidth(param1:Number, param2:Matrix, param3:Number, param4:Number, param5:Number, param6:Number, param7:Number, param8:Number) : Point
      {
         trait method QName(PackageNamespace(""),"calcUBoundsToFitTBoundsWidth")
         flag FINAL
         dispid 16
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace("flash.geom"),"Matrix")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 10
         localcount 20
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 12
         pushnan
         setlocal 13
         pushnan
         setlocal 14
         pushnan
         setlocal 15
         pushnan
         setlocal 16
         pushnan
         setlocal 18
         pushnan
         setlocal 19
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         getlex QName(PackageNamespace(""),"Math")
         getlocal 7
         getlocal3
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal3
         getlex QName(PackageNamespace(""),"Math")
         getlocal 6
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         getlocal 4
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 4
         getlocal2
         getproperty QName(PackageNamespace(""),"a")
         convert_d
         setlocal 9
         getlocal2
         getproperty QName(PackageNamespace(""),"c")
         convert_d
         setlocal 10
         pushdouble -1.0E-9
         getlocal 9
         lessthan
         dup
         iffalse ofs0
         pop
         getlocal 9
         pushdouble 1.0E-9
         lessthan
         ofs0:
         iffalse ofs1
         pushbyte 0
         convert_d
         setlocal 9
         ofs1:
         pushdouble -1.0E-9
         getlocal 10
         lessthan
         dup
         iffalse ofs2
         pop
         getlocal 10
         pushdouble 1.0E-9
         lessthan
         ofs2:
         iffalse ofs3
         pushbyte 0
         convert_d
         setlocal 10
         ofs3:
         getlocal 9
         pushbyte 0
         ifne ofs4
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal3
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getlocal 10
         callproperty QName(PackageNamespace(""),"abs"), 1
         divide
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         returnvalue
         ofs4:
         getlocal 10
         pushbyte 0
         ifne ofs5
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getlocal 9
         callproperty QName(PackageNamespace(""),"abs"), 1
         divide
         getlocal 4
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         returnvalue
         ofs5:
         getlocal 9
         getlocal 10
         multiply
         pushbyte 0
         ifnge ofs6
         getlocal 10
         convert_d
         jump ofs7
         ofs6:
         getlocal 10
         negate
         convert_d
         ofs7:
         convert_d
         dup
         setlocal 11
         pushbyte 0
         ifeq ofs8
         pushbyte 1
         getlocal 11
         divide
         convert_d
         setlocal 18
         getlocal3
         convert_d
         setlocal 13
         getlocal1
         getlocal 9
         getlocal 13
         multiply
         subtract
         getlocal 18
         multiply
         convert_d
         setlocal 14
         getlocal 6
         getlocal 14
         lessequals
         dup
         iffalse ofs9
         pop
         getlocal 14
         getlocal 8
         lessequals
         ofs9:
         dup
         iffalse ofs10
         pop
         getlocal 9
         getlocal 13
         multiply
         getlocal 11
         getlocal 14
         multiply
         add
         pushbyte 0
         greaterequals
         ofs10:
         iffalse ofs11
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal 13
         getlocal 14
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 12
         ofs11:
         getlocal1
         negate
         getlocal 9
         getlocal 13
         multiply
         subtract
         getlocal 18
         multiply
         convert_d
         setlocal 14
         getlocal 6
         getlocal 14
         lessequals
         dup
         iffalse ofs12
         pop
         getlocal 14
         getlocal 8
         lessequals
         ofs12:
         dup
         iffalse ofs13
         pop
         getlocal 9
         getlocal 13
         multiply
         getlocal 11
         getlocal 14
         multiply
         add
         pushbyte 0
         lessthan
         ofs13:
         iffalse ofs8
         getlocal 12
         not
         dup
         iftrue ofs14
         pop
         findpropstrict QName(PackageNamespace(""),"transformSize")
         getlocal 12
         getproperty QName(PackageNamespace(""),"x")
         getlocal 12
         getproperty QName(PackageNamespace(""),"y")
         getlocal2
         callproperty QName(PackageNamespace(""),"transformSize"), 3
         getproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"transformSize")
         getlocal 13
         getlocal 14
         getlocal2
         callproperty QName(PackageNamespace(""),"transformSize"), 3
         getproperty QName(PackageNamespace(""),"y")
         greaterthan
         ofs14:
         iffalse ofs8
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal 13
         getlocal 14
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 12
         ofs8:
         getlocal 9
         pushbyte 0
         ifeq ofs15
         pushbyte 1
         getlocal 9
         divide
         convert_d
         setlocal 19
         getlocal 4
         convert_d
         setlocal 14
         getlocal1
         getlocal 11
         getlocal 14
         multiply
         subtract
         getlocal 19
         multiply
         convert_d
         setlocal 13
         getlocal 5
         getlocal 13
         lessequals
         dup
         iffalse ofs16
         pop
         getlocal 13
         getlocal 7
         lessequals
         ofs16:
         dup
         iffalse ofs17
         pop
         getlocal 9
         getlocal 13
         multiply
         getlocal 11
         getlocal 14
         multiply
         add
         pushbyte 0
         greaterequals
         ofs17:
         iffalse ofs18
         getlocal 12
         not
         dup
         iftrue ofs19
         pop
         findpropstrict QName(PackageNamespace(""),"transformSize")
         getlocal 12
         getproperty QName(PackageNamespace(""),"x")
         getlocal 12
         getproperty QName(PackageNamespace(""),"y")
         getlocal2
         callproperty QName(PackageNamespace(""),"transformSize"), 3
         getproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"transformSize")
         getlocal 13
         getlocal 14
         getlocal2
         callproperty QName(PackageNamespace(""),"transformSize"), 3
         getproperty QName(PackageNamespace(""),"y")
         greaterthan
         ofs19:
         iffalse ofs18
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal 13
         getlocal 14
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 12
         ofs18:
         getlocal1
         negate
         getlocal 11
         getlocal 14
         multiply
         subtract
         getlocal 19
         multiply
         convert_d
         setlocal 13
         getlocal 5
         getlocal 13
         lessequals
         dup
         iffalse ofs20
         pop
         getlocal 13
         getlocal 7
         lessequals
         ofs20:
         dup
         iffalse ofs21
         pop
         getlocal 9
         getlocal 13
         multiply
         getlocal 11
         getlocal 14
         multiply
         add
         pushbyte 0
         lessthan
         ofs21:
         iffalse ofs15
         getlocal 12
         not
         dup
         iftrue ofs22
         pop
         findpropstrict QName(PackageNamespace(""),"transformSize")
         getlocal 12
         getproperty QName(PackageNamespace(""),"x")
         getlocal 12
         getproperty QName(PackageNamespace(""),"y")
         getlocal2
         callproperty QName(PackageNamespace(""),"transformSize"), 3
         getproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"transformSize")
         getlocal 13
         getlocal 14
         getlocal2
         callproperty QName(PackageNamespace(""),"transformSize"), 3
         getproperty QName(PackageNamespace(""),"y")
         greaterthan
         ofs22:
         iffalse ofs15
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal 13
         getlocal 14
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 12
         ofs15:
         getlocal 12
         iffalse ofs23
         getlocal 12
         returnvalue
         ofs23:
         getlocal2
         getproperty QName(PackageNamespace(""),"b")
         convert_d
         setlocal 15
         getlocal2
         getproperty QName(PackageNamespace(""),"d")
         convert_d
         setlocal 16
         getlocal 15
         getlocal 16
         multiply
         pushbyte 0
         ifnge ofs24
         getlocal 16
         convert_d
         jump ofs25
         ofs24:
         getlocal 16
         negate
         convert_d
         ofs25:
         convert_d
         setlocal 17
         findpropstrict QName(PrivateNamespace(null,"#MatrixUtil"),"solveEquation")
         getlocal 9
         getlocal 11
         getlocal1
         getlocal 5
         getlocal 6
         getlocal 7
         getlocal 8
         getlocal 15
         getlocal 17
         callproperty QName(PrivateNamespace(null,"#MatrixUtil"),"solveEquation"), 9
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function solveEquation(param1:Number, param2:Number, param3:Number, param4:Number, param5:Number, param6:Number, param7:Number, param8:Number, param9:Number) : Point
      {
         trait method QName(PrivateNamespace(null,"#MatrixUtil"),"solveEquation")
         flag FINAL
         dispid 17
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 5
         localcount 18
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal 10
         pushnan
         setlocal 11
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 12
         getlocal1
         pushbyte 0
         equals
         dup
         iftrue ofs0
         pop
         getlocal2
         pushbyte 0
         equals
         ofs0:
         iffalse ofs1
         pushnull
         returnvalue
         ofs1:
         getlocal3
         getlocal 4
         getlocal1
         multiply
         subtract
         getlocal2
         divide
         convert_d
         setlocal 13
         getlocal3
         getlocal 6
         getlocal1
         multiply
         subtract
         getlocal2
         divide
         convert_d
         setlocal 14
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         getlex QName(PackageNamespace(""),"Math")
         getlocal 13
         getlocal 14
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 15
         getlex QName(PackageNamespace(""),"Math")
         getlocal 7
         getlex QName(PackageNamespace(""),"Math")
         getlocal 13
         getlocal 14
         callproperty QName(PackageNamespace(""),"max"), 2
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 16
         getlocal 8
         getlocal2
         multiply
         getlocal1
         getlocal 9
         multiply
         subtract
         convert_d
         setlocal 17
         getlocal 15
         getlocal 16
         ifnle ofs2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 17
         callproperty QName(PackageNamespace(""),"abs"), 1
         pushdouble 1.0E-9
         ifnlt ofs3
         getlocal3
         getlocal1
         getlocal2
         add
         divide
         convert_d
         setlocal 11
         jump ofs4
         ofs3:
         getlocal 8
         getlocal3
         multiply
         getlocal 17
         divide
         convert_d
         setlocal 11
         ofs4:
         getlex QName(PackageNamespace(""),"Math")
         getlocal 15
         getlex QName(PackageNamespace(""),"Math")
         getlocal 11
         getlocal 16
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 11
         getlocal3
         getlocal2
         getlocal 11
         multiply
         subtract
         getlocal1
         divide
         convert_d
         setlocal 10
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal 10
         getlocal 11
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         returnvalue
         ofs2:
         getlocal 4
         getlocal1
         multiply
         getlocal3
         add
         negate
         getlocal2
         divide
         convert_d
         setlocal 13
         getlocal 6
         getlocal1
         multiply
         getlocal3
         add
         negate
         getlocal2
         divide
         convert_d
         setlocal 14
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         getlex QName(PackageNamespace(""),"Math")
         getlocal 13
         getlocal 14
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 15
         getlex QName(PackageNamespace(""),"Math")
         getlocal 7
         getlex QName(PackageNamespace(""),"Math")
         getlocal 13
         getlocal 14
         callproperty QName(PackageNamespace(""),"max"), 2
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 16
         getlocal 15
         getlocal 16
         ifnle ofs5
         getlex QName(PackageNamespace(""),"Math")
         getlocal 17
         callproperty QName(PackageNamespace(""),"abs"), 1
         pushdouble 1.0E-9
         ifnlt ofs6
         getlocal3
         negate
         getlocal1
         getlocal2
         add
         divide
         convert_d
         setlocal 11
         jump ofs7
         ofs6:
         getlocal 8
         negate
         getlocal3
         multiply
         getlocal 17
         divide
         convert_d
         setlocal 11
         ofs7:
         getlex QName(PackageNamespace(""),"Math")
         getlocal 15
         getlex QName(PackageNamespace(""),"Math")
         getlocal 11
         getlocal 16
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 11
         getlocal3
         negate
         getlocal2
         getlocal 11
         multiply
         subtract
         getlocal1
         divide
         convert_d
         setlocal 10
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal 10
         getlocal 11
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         returnvalue
         ofs5:
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function calcUBoundsToFitTBounds(param1:Number, param2:Number, param3:Matrix, param4:Number, param5:Number, param6:Number, param7:Number) : Point
      {
         trait method QName(PackageNamespace(""),"calcUBoundsToFitTBounds")
         flag FINAL
         dispid 18
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace("flash.geom"),"Matrix")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 10
         localcount 17
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 16
         getlocal3
         getproperty QName(PackageNamespace(""),"a")
         convert_d
         setlocal 8
         getlocal3
         getproperty QName(PackageNamespace(""),"b")
         convert_d
         setlocal 9
         getlocal3
         getproperty QName(PackageNamespace(""),"c")
         convert_d
         setlocal 10
         getlocal3
         getproperty QName(PackageNamespace(""),"d")
         convert_d
         setlocal 11
         pushdouble -1.0E-9
         getlocal 8
         lessthan
         dup
         iffalse ofs0
         pop
         getlocal 8
         pushdouble 1.0E-9
         lessthan
         ofs0:
         iffalse ofs1
         pushbyte 0
         convert_d
         setlocal 8
         ofs1:
         pushdouble -1.0E-9
         getlocal 9
         lessthan
         dup
         iffalse ofs2
         pop
         getlocal 9
         pushdouble 1.0E-9
         lessthan
         ofs2:
         iffalse ofs3
         pushbyte 0
         convert_d
         setlocal 9
         ofs3:
         pushdouble -1.0E-9
         getlocal 10
         lessthan
         dup
         iffalse ofs4
         pop
         getlocal 10
         pushdouble 1.0E-9
         lessthan
         ofs4:
         iffalse ofs5
         pushbyte 0
         convert_d
         setlocal 10
         ofs5:
         pushdouble -1.0E-9
         getlocal 11
         lessthan
         dup
         iffalse ofs6
         pop
         getlocal 11
         pushdouble 1.0E-9
         lessthan
         ofs6:
         iffalse ofs7
         pushbyte 0
         convert_d
         setlocal 11
         ofs7:
         getlocal 9
         pushbyte 0
         equals
         dup
         iffalse ofs8
         pop
         getlocal 10
         pushbyte 0
         equals
         ofs8:
         iffalse ofs9
         getlocal 8
         pushbyte 0
         equals
         dup
         iftrue ofs10
         pop
         getlocal 11
         pushbyte 0
         equals
         ofs10:
         iffalse ofs11
         pushnull
         returnvalue
         ofs11:
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         callproperty QName(PackageNamespace(""),"abs"), 1
         divide
         getlocal2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 11
         callproperty QName(PackageNamespace(""),"abs"), 1
         divide
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         returnvalue
         ofs9:
         getlocal 8
         pushbyte 0
         equals
         dup
         iffalse ofs12
         pop
         getlocal 11
         pushbyte 0
         equals
         ofs12:
         iffalse ofs13
         getlocal 9
         pushbyte 0
         equals
         dup
         iftrue ofs14
         pop
         getlocal 10
         pushbyte 0
         equals
         ofs14:
         iffalse ofs15
         pushnull
         returnvalue
         ofs15:
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 9
         callproperty QName(PackageNamespace(""),"abs"), 1
         divide
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getlocal 10
         callproperty QName(PackageNamespace(""),"abs"), 1
         divide
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         returnvalue
         ofs13:
         getlocal 8
         getlocal 10
         multiply
         pushbyte 0
         ifnge ofs16
         getlocal 10
         convert_d
         jump ofs17
         ofs16:
         getlocal 10
         negate
         convert_d
         ofs17:
         convert_d
         setlocal 12
         getlocal 9
         getlocal 11
         multiply
         pushbyte 0
         ifnge ofs18
         getlocal 11
         convert_d
         jump ofs19
         ofs18:
         getlocal 11
         negate
         convert_d
         ofs19:
         convert_d
         setlocal 13
         getlocal 8
         getlocal 13
         multiply
         getlocal 9
         getlocal 12
         multiply
         subtract
         convert_d
         setlocal 14
         getlex QName(PackageNamespace(""),"Math")
         getlocal 14
         callproperty QName(PackageNamespace(""),"abs"), 1
         pushdouble 1.0E-9
         ifnlt ofs20
         getlocal 12
         pushbyte 0
         equals
         dup
         iftrue ofs21
         pop
         getlocal 8
         pushbyte 0
         equals
         ofs21:
         dup
         iftrue ofs22
         pop
         getlocal 8
         getlocal 12
         negate
         equals
         ofs22:
         iffalse ofs23
         pushnull
         returnvalue
         ofs23:
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         getlocal2
         multiply
         callproperty QName(PackageNamespace(""),"abs"), 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal 9
         getlocal1
         multiply
         callproperty QName(PackageNamespace(""),"abs"), 1
         subtract
         pushdouble 1.0E-9
         ifngt ofs24
         pushnull
         returnvalue
         ofs24:
         findpropstrict QName(PrivateNamespace(null,"#MatrixUtil"),"solveEquation")
         getlocal 8
         getlocal 12
         getlocal1
         getlocal 4
         getlocal 4
         getlocal 6
         getlocal 7
         getlocal 9
         getlocal 13
         callproperty QName(PrivateNamespace(null,"#MatrixUtil"),"solveEquation"), 9
         returnvalue
         ofs20:
         pushbyte 1
         getlocal 14
         divide
         convert_d
         setlocal 15
         getlocal1
         getlocal 15
         multiply
         convert_d
         setlocal1
         getlocal2
         getlocal 15
         multiply
         convert_d
         setlocal2
         findpropstrict QName(PrivateNamespace(null,"#MatrixUtil"),"solveSystem")
         getlocal 8
         getlocal 12
         getlocal 9
         getlocal 13
         getlocal1
         getlocal2
         callproperty QName(PrivateNamespace(null,"#MatrixUtil"),"solveSystem"), 6
         coerce QName(PackageNamespace("flash.geom"),"Point")
         dup
         setlocal 16
         coerce_a
         dup
         iffalse ofs25
         pop
         getlocal 4
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         lessequals
         coerce_a
         ofs25:
         coerce_a
         dup
         iffalse ofs26
         pop
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         getlocal 6
         lessequals
         coerce_a
         ofs26:
         coerce_a
         dup
         iffalse ofs27
         pop
         getlocal 5
         getlocal 16
         getproperty QName(PackageNamespace(""),"y")
         lessequals
         coerce_a
         ofs27:
         coerce_a
         dup
         iffalse ofs28
         pop
         getlocal 16
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         lessequals
         coerce_a
         ofs28:
         coerce_a
         convert_b
         dup
         iffalse ofs29
         pop
         getlocal 8
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         multiply
         getlocal 12
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         multiply
         add
         pushbyte 0
         greaterequals
         coerce_a
         convert_b
         ofs29:
         dup
         iffalse ofs30
         pop
         getlocal 9
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         multiply
         getlocal 13
         getlocal 16
         getproperty QName(PackageNamespace(""),"y")
         multiply
         add
         pushbyte 0
         greaterequals
         ofs30:
         iffalse ofs31
         getlocal 16
         returnvalue
         ofs31:
         findpropstrict QName(PrivateNamespace(null,"#MatrixUtil"),"solveSystem")
         getlocal 8
         getlocal 12
         getlocal 9
         getlocal 13
         getlocal1
         getlocal2
         negate
         callproperty QName(PrivateNamespace(null,"#MatrixUtil"),"solveSystem"), 6
         coerce QName(PackageNamespace("flash.geom"),"Point")
         dup
         setlocal 16
         coerce_a
         dup
         iffalse ofs32
         pop
         getlocal 4
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         lessequals
         coerce_a
         ofs32:
         coerce_a
         dup
         iffalse ofs33
         pop
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         getlocal 6
         lessequals
         coerce_a
         ofs33:
         coerce_a
         dup
         iffalse ofs34
         pop
         getlocal 5
         getlocal 16
         getproperty QName(PackageNamespace(""),"y")
         lessequals
         coerce_a
         ofs34:
         coerce_a
         dup
         iffalse ofs35
         pop
         getlocal 16
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         lessequals
         coerce_a
         ofs35:
         coerce_a
         convert_b
         dup
         iffalse ofs36
         pop
         getlocal 8
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         multiply
         getlocal 12
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         multiply
         add
         pushbyte 0
         greaterequals
         coerce_a
         convert_b
         ofs36:
         dup
         iffalse ofs37
         pop
         getlocal 9
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         multiply
         getlocal 13
         getlocal 16
         getproperty QName(PackageNamespace(""),"y")
         multiply
         add
         pushbyte 0
         lessthan
         ofs37:
         iffalse ofs38
         getlocal 16
         returnvalue
         ofs38:
         findpropstrict QName(PrivateNamespace(null,"#MatrixUtil"),"solveSystem")
         getlocal 8
         getlocal 12
         getlocal 9
         getlocal 13
         getlocal1
         negate
         getlocal2
         callproperty QName(PrivateNamespace(null,"#MatrixUtil"),"solveSystem"), 6
         coerce QName(PackageNamespace("flash.geom"),"Point")
         dup
         setlocal 16
         coerce_a
         dup
         iffalse ofs39
         pop
         getlocal 4
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         lessequals
         coerce_a
         ofs39:
         coerce_a
         dup
         iffalse ofs40
         pop
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         getlocal 6
         lessequals
         coerce_a
         ofs40:
         coerce_a
         dup
         iffalse ofs41
         pop
         getlocal 5
         getlocal 16
         getproperty QName(PackageNamespace(""),"y")
         lessequals
         coerce_a
         ofs41:
         coerce_a
         dup
         iffalse ofs42
         pop
         getlocal 16
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         lessequals
         coerce_a
         ofs42:
         coerce_a
         convert_b
         dup
         iffalse ofs43
         pop
         getlocal 8
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         multiply
         getlocal 12
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         multiply
         add
         pushbyte 0
         lessthan
         coerce_a
         convert_b
         ofs43:
         dup
         iffalse ofs44
         pop
         getlocal 9
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         multiply
         getlocal 13
         getlocal 16
         getproperty QName(PackageNamespace(""),"y")
         multiply
         add
         pushbyte 0
         greaterequals
         ofs44:
         iffalse ofs45
         getlocal 16
         returnvalue
         ofs45:
         findpropstrict QName(PrivateNamespace(null,"#MatrixUtil"),"solveSystem")
         getlocal 8
         getlocal 12
         getlocal 9
         getlocal 13
         getlocal1
         negate
         getlocal2
         negate
         callproperty QName(PrivateNamespace(null,"#MatrixUtil"),"solveSystem"), 6
         coerce QName(PackageNamespace("flash.geom"),"Point")
         dup
         setlocal 16
         coerce_a
         dup
         iffalse ofs46
         pop
         getlocal 4
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         lessequals
         coerce_a
         ofs46:
         coerce_a
         dup
         iffalse ofs47
         pop
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         getlocal 6
         lessequals
         coerce_a
         ofs47:
         coerce_a
         dup
         iffalse ofs48
         pop
         getlocal 5
         getlocal 16
         getproperty QName(PackageNamespace(""),"y")
         lessequals
         coerce_a
         ofs48:
         coerce_a
         dup
         iffalse ofs49
         pop
         getlocal 16
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         lessequals
         coerce_a
         ofs49:
         coerce_a
         convert_b
         dup
         iffalse ofs50
         pop
         getlocal 8
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         multiply
         getlocal 12
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         multiply
         add
         pushbyte 0
         lessthan
         coerce_a
         convert_b
         ofs50:
         dup
         iffalse ofs51
         pop
         getlocal 9
         getlocal 16
         getproperty QName(PackageNamespace(""),"x")
         multiply
         getlocal 13
         getlocal 16
         getproperty QName(PackageNamespace(""),"y")
         multiply
         add
         pushbyte 0
         lessthan
         ofs51:
         iffalse ofs52
         getlocal 16
         returnvalue
         ofs52:
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function isEqual(param1:Matrix, param2:Matrix) : Boolean
      {
         trait method QName(PackageNamespace(""),"isEqual")
         flag FINAL
         dispid 19
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Matrix")
         param QName(PackageNamespace("flash.geom"),"Matrix")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         dup
         iffalse ofs0
         pop
         getlocal2
         ofs0:
         coerce_a
         dup
         iffalse ofs1
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"a")
         getlocal2
         getproperty QName(PackageNamespace(""),"a")
         equals
         coerce_a
         ofs1:
         coerce_a
         dup
         iffalse ofs2
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"b")
         getlocal2
         getproperty QName(PackageNamespace(""),"b")
         equals
         coerce_a
         ofs2:
         coerce_a
         dup
         iffalse ofs3
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"c")
         getlocal2
         getproperty QName(PackageNamespace(""),"c")
         equals
         coerce_a
         ofs3:
         coerce_a
         dup
         iffalse ofs4
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"d")
         getlocal2
         getproperty QName(PackageNamespace(""),"d")
         equals
         coerce_a
         ofs4:
         coerce_a
         dup
         iffalse ofs5
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"tx")
         getlocal2
         getproperty QName(PackageNamespace(""),"tx")
         equals
         coerce_a
         ofs5:
         convert_b
         dup
         iffalse ofs6
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"ty")
         getlocal2
         getproperty QName(PackageNamespace(""),"ty")
         equals
         ofs6:
         dup
         iftrue ofs7
         pop
         getlocal1
         not
         dup
         iffalse ofs7
         pop
         getlocal2
         not
         ofs7:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function isEqual3D(param1:Matrix3D, param2:Matrix3D) : Boolean
      {
         trait method QName(PackageNamespace(""),"isEqual3D")
         flag FINAL
         dispid 20
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Matrix3D")
         param QName(PackageNamespace("flash.geom"),"Matrix3D")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce TypeName(QName(PackageNamespace("__AS3__.vec"),"Vector")<QName(PackageNamespace(""),"Number")>)
         setlocal3
         pushnull
         coerce TypeName(QName(PackageNamespace("__AS3__.vec"),"Vector")<QName(PackageNamespace(""),"Number")>)
         setlocal 4
         getlocal1
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal2
         convert_b
         ofs0:
         dup
         iffalse ofs1
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"rawData")
         getproperty QName(PackageNamespace(""),"length")
         getlocal2
         getproperty QName(PackageNamespace(""),"rawData")
         getproperty QName(PackageNamespace(""),"length")
         equals
         ofs1:
         iffalse ofs2
         getlocal1
         getproperty QName(PackageNamespace(""),"rawData")
         coerce TypeName(QName(PackageNamespace("__AS3__.vec"),"Vector")<QName(PackageNamespace(""),"Number")>)
         setlocal3
         getlocal2
         getproperty QName(PackageNamespace(""),"rawData")
         coerce TypeName(QName(PackageNamespace("__AS3__.vec"),"Vector")<QName(PackageNamespace(""),"Number")>)
         setlocal 4
         getlocal3
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         dup
         iffalse ofs3
         pop
         getlocal3
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs3:
         dup
         iffalse ofs4
         pop
         getlocal3
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs4:
         dup
         iffalse ofs5
         pop
         getlocal3
         pushbyte 3
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 3
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs5:
         dup
         iffalse ofs6
         pop
         getlocal3
         pushbyte 4
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 4
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs6:
         dup
         iffalse ofs7
         pop
         getlocal3
         pushbyte 5
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 5
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs7:
         dup
         iffalse ofs8
         pop
         getlocal3
         pushbyte 6
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 6
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs8:
         dup
         iffalse ofs9
         pop
         getlocal3
         pushbyte 7
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 7
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs9:
         dup
         iffalse ofs10
         pop
         getlocal3
         pushbyte 8
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 8
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs10:
         dup
         iffalse ofs11
         pop
         getlocal3
         pushbyte 9
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 9
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs11:
         dup
         iffalse ofs12
         pop
         getlocal3
         pushbyte 10
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 10
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs12:
         dup
         iffalse ofs13
         pop
         getlocal3
         pushbyte 11
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 11
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs13:
         dup
         iffalse ofs14
         pop
         getlocal3
         pushbyte 12
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 12
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs14:
         dup
         iffalse ofs15
         pop
         getlocal3
         pushbyte 13
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 13
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs15:
         dup
         iffalse ofs16
         pop
         getlocal3
         pushbyte 14
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 14
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs16:
         dup
         iffalse ofs17
         pop
         getlocal3
         pushbyte 15
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 4
         pushbyte 15
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         equals
         ofs17:
         returnvalue
         ofs2:
         getlocal1
         not
         dup
         iffalse ofs18
         pop
         getlocal2
         not
         ofs18:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function solveSystem(param1:Number, param2:Number, param3:Number, param4:Number, param5:Number, param6:Number) : Point
      {
         trait method QName(PrivateNamespace(null,"#MatrixUtil"),"solveSystem")
         flag FINAL
         dispid 21
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 5
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal 4
         getlocal 5
         multiply
         getlocal2
         getlocal 6
         multiply
         subtract
         getlocal1
         getlocal 6
         multiply
         getlocal3
         getlocal 5
         multiply
         subtract
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getConcatenatedMatrix(param1:DisplayObject) : Matrix
      {
         trait method QName(PackageNamespace(""),"getConcatenatedMatrix")
         flag FINAL
         dispid 22
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         returns QName(PackageNamespace("flash.geom"),"Matrix")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PrivateNamespace(null,"#MatrixUtil"),"getConcatenatedMatrixHelper")
         getlocal1
         pushfalse
         callproperty QName(PrivateNamespace(null,"#MatrixUtil"),"getConcatenatedMatrixHelper"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getConcatenatedComputedMatrix(param1:DisplayObject) : Matrix
      {
         trait method QName(PackageNamespace(""),"getConcatenatedComputedMatrix")
         flag FINAL
         dispid 23
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         returns QName(PackageNamespace("flash.geom"),"Matrix")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PrivateNamespace(null,"#MatrixUtil"),"getConcatenatedMatrixHelper")
         getlocal1
         pushtrue
         callproperty QName(PrivateNamespace(null,"#MatrixUtil"),"getConcatenatedMatrixHelper"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function getConcatenatedMatrixHelper(param1:DisplayObject, param2:Boolean) : Matrix
      {
         trait method QName(PrivateNamespace(null,"#MatrixUtil"),"getConcatenatedMatrixHelper")
         flag FINAL
         dispid 24
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace("flash.geom"),"Matrix")
         
         body
         maxstack 4
         localcount 9
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Rectangle")
         setlocal 4
         pushfalse
         setlocal 5
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal 6
         pushnull
         coerce QName(PackageNamespace("flash.system"),"ApplicationDomain")
         setlocal 7
         findpropstrict QName(PackageNamespace("flash.geom"),"Matrix")
         constructprop QName(PackageNamespace("flash.geom"),"Matrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         setlocal3
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"usesMarshalling")
         pushnull
         ifne ofs0
         findproperty QName(PrivateNamespace(null,"#MatrixUtil"),"usesMarshalling")
         getlex QName(PackageNamespace("flash.system"),"ApplicationDomain")
         getproperty QName(PackageNamespace(""),"currentDomain")
         pushstring "mx.managers.systemClasses.MarshallingSupport"
         callproperty QName(PackageNamespace(""),"hasDefinition"), 1
         setproperty QName(PrivateNamespace(null,"#MatrixUtil"),"usesMarshalling")
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"usesMarshalling")
         not
         dup
         iffalse ofs1
         pop
         getlex QName(PackageNamespace("flash.system"),"ApplicationDomain")
         getproperty QName(PackageNamespace(""),"currentDomain")
         pushstring "mx.core.UIComponent"
         callproperty QName(PackageNamespace(""),"hasDefinition"), 1
         convert_b
         ofs1:
         iffalse ofs0
         findproperty QName(PrivateNamespace(null,"#MatrixUtil"),"uiComponentClass")
         findpropstrict QName(PackageNamespace(""),"Class")
         getlex QName(PackageNamespace("flash.system"),"ApplicationDomain")
         getproperty QName(PackageNamespace(""),"currentDomain")
         pushstring "mx.core.UIComponent"
         callproperty QName(PackageNamespace(""),"getDefinition"), 1
         callproperty QName(PackageNamespace(""),"Class"), 1
         setproperty QName(PrivateNamespace(null,"#MatrixUtil"),"uiComponentClass")
         ofs0:
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"fakeDollarParent")
         pushnull
         ifne ofs2
         findproperty QName(PrivateNamespace(null,"#MatrixUtil"),"fakeDollarParent")
         findpropstrict QName(PackageNamespace(""),"QName")
         getlex QName(PackageNamespace("mx.core"),"mx_internal")
         pushstring "$parent"
         constructprop QName(PackageNamespace(""),"QName"), 2
         setproperty QName(PrivateNamespace(null,"#MatrixUtil"),"fakeDollarParent")
         ofs2:
         getlocal2
         convert_b
         dup
         iffalse ofs3
         pop
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"computedMatrixProperty")
         pushnull
         equals
         ofs3:
         iffalse ofs4
         findproperty QName(PrivateNamespace(null,"#MatrixUtil"),"computedMatrixProperty")
         findpropstrict QName(PackageNamespace(""),"QName")
         getlex QName(PackageNamespace("mx.core"),"mx_internal")
         pushstring "computedMatrix"
         constructprop QName(PackageNamespace(""),"QName"), 2
         setproperty QName(PrivateNamespace(null,"#MatrixUtil"),"computedMatrixProperty")
         ofs4:
         jump ofs5
         ofs6:
         label
         getlocal1
         getproperty QName(PackageNamespace(""),"scrollRect")
         coerce QName(PackageNamespace("flash.geom"),"Rectangle")
         dup
         setlocal 4
         pushnull
         ifeq ofs7
         getlocal3
         getlocal 4
         getproperty QName(PackageNamespace(""),"x")
         negate
         getlocal 4
         getproperty QName(PackageNamespace(""),"y")
         negate
         callpropvoid QName(PackageNamespace(""),"translate"), 2
         ofs7:
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"usesMarshalling")
         convert_b
         dup
         iffalse ofs8
         pop
         pushstring "moduleFactory"
         getlocal1
         in
         ofs8:
         iffalse ofs9
         getlocal1
         pushstring "moduleFactory"
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         dup
         setlocal 6
         coerce_a
         convert_b
         dup
         iffalse ofs10
         pop
         getlocal 6
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"lastModuleFactory")
         strictequals
         not
         coerce_a
         convert_b
         ofs10:
         dup
         iffalse ofs11
         pop
         pushstring "info"
         getlocal 6
         in
         ofs11:
         iffalse ofs9
         getlocal 6
         dup
         setlocal 8
         pushstring "info"
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlocal 8
         call 0
         kill 8
         pushstring "currentDomain"
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace("flash.system"),"ApplicationDomain")
         dup
         setlocal 7
         convert_b
         dup
         iffalse ofs12
         pop
         getlocal 7
         pushstring "mx.core.UIComponent"
         callproperty QName(PackageNamespace(""),"hasDefinition"), 1
         convert_b
         ofs12:
         iffalse ofs13
         findproperty QName(PrivateNamespace(null,"#MatrixUtil"),"uiComponentClass")
         findpropstrict QName(PackageNamespace(""),"Class")
         getlocal 7
         pushstring "mx.core.UIComponent"
         callproperty QName(PackageNamespace(""),"getDefinition"), 1
         callproperty QName(PackageNamespace(""),"Class"), 1
         setproperty QName(PrivateNamespace(null,"#MatrixUtil"),"uiComponentClass")
         ofs13:
         findproperty QName(PrivateNamespace(null,"#MatrixUtil"),"lastModuleFactory")
         getlocal 6
         setproperty QName(PrivateNamespace(null,"#MatrixUtil"),"lastModuleFactory")
         ofs9:
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"uiComponentClass")
         convert_b
         dup
         iffalse ofs14
         pop
         getlocal1
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"uiComponentClass")
         istypelate
         ofs14:
         convert_b
         setlocal 5
         getlocal2
         convert_b
         dup
         iffalse ofs15
         pop
         getlocal 5
         convert_b
         ofs15:
         iffalse ofs16
         getlocal3
         getlocal1
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"computedMatrixProperty")
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         callpropvoid QName(PackageNamespace(""),"concat"), 1
         jump ofs17
         ofs16:
         getlocal3
         getlocal1
         getproperty QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"matrix")
         callpropvoid QName(PackageNamespace(""),"concat"), 1
         ofs17:
         getlocal 5
         iffalse ofs18
         getlocal1
         getlex QName(PrivateNamespace(null,"#MatrixUtil"),"fakeDollarParent")
         getproperty MultinameL([PrivateNamespace(null,"#MatrixUtil"),PackageNamespace(""),PrivateNamespace(null,"#MatrixUtil/1"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:MatrixUtil"),StaticProtectedNs("mx.utils:MatrixUtil"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("flash.display"),"DisplayObject")
         astypelate
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal1
         jump ofs5
         ofs18:
         getlocal1
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("flash.display"),"DisplayObject")
         astypelate
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal1
         ofs5:
         getlocal1
         convert_b
         dup
         iffalse ofs19
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"matrix")
         convert_b
         ofs19:
         iftrue ofs6
         getlocal3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
