
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("StringUtil",[PackageNamespace("mx.utils")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #StringUtil
   popscope
   initproperty QName(PackageNamespace("mx.utils"),"StringUtil")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.utils
{
   import mx.core.mx_internal;
   
   use namespace mx_internal;
   
   public class StringUtil
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function StringUtil()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function trim(param1:String) : String
      {
         trait method QName(PackageNamespace(""),"trim")
         flag FINAL
         dispid 3
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         pushnull
         ifne ofs0
         pushstring ""
         returnvalue
         ofs0:
         pushbyte 0
         setlocal2
         jump ofs1
         ofs2:
         label
         inclocal_i 2
         ofs1:
         findpropstrict QName(PackageNamespace(""),"isWhitespace")
         getlocal1
         getlocal2
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"charAt"), 1
         callproperty QName(PackageNamespace(""),"isWhitespace"), 1
         iftrue ofs2
         getlocal1
         getproperty QName(PackageNamespace(""),"length")
         decrement
         convert_i
         setlocal3
         jump ofs3
         ofs4:
         label
         getlocal3
         decrement_i
         setlocal3
         ofs3:
         findpropstrict QName(PackageNamespace(""),"isWhitespace")
         getlocal1
         getlocal3
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"charAt"), 1
         callproperty QName(PackageNamespace(""),"isWhitespace"), 1
         iftrue ofs4
         getlocal3
         getlocal2
         ifnge ofs5
         getlocal1
         getlocal2
         getlocal3
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"slice"), 2
         returnvalue
         ofs5:
         pushstring ""
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function trimArrayElements(param1:String, param2:String) : String
      {
         trait method QName(PackageNamespace(""),"trimArrayElements")
         flag FINAL
         dispid 4
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 5
         localcount 6
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         pushbyte 0
         setlocal 4
         pushbyte 0
         setlocal 5
         getlocal1
         pushstring ""
         equals
         not
         dup
         iffalse ofs0
         pop
         getlocal1
         pushnull
         equals
         not
         ofs0:
         iffalse ofs1
         getlocal1
         getlocal2
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"split"), 1
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         getlocal3
         getproperty QName(PackageNamespace(""),"length")
         convert_i
         setlocal 4
         pushbyte 0
         setlocal 5
         jump ofs2
         ofs3:
         label
         getlocal3
         getlocal 5
         getlex QName(PackageNamespace("mx.utils"),"StringUtil")
         getlocal3
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"#StringUtil"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),PrivateNamespace(null,"#StringUtil/1"),PackageInternalNs("mx.utils"),ProtectedNamespace("mx.utils:StringUtil"),StaticProtectedNs("mx.utils:StringUtil"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"trim"), 1
         setproperty MultinameL([PrivateNamespace(null,"#StringUtil"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),PrivateNamespace(null,"#StringUtil/1"),PackageInternalNs("mx.utils"),ProtectedNamespace("mx.utils:StringUtil"),StaticProtectedNs("mx.utils:StringUtil"),StaticProtectedNs("Object")])
         inclocal_i 5
         ofs2:
         getlocal 5
         getlocal 4
         iflt ofs3
         getlocal 4
         pushbyte 0
         ifngt ofs1
         getlocal3
         getlocal2
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"join"), 1
         coerce_s
         setlocal1
         ofs1:
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function isWhitespace(param1:String) : Boolean
      {
         trait method QName(PackageNamespace(""),"isWhitespace")
         flag FINAL
         dispid 5
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         jump ofs0
         ofs1:
         label
         pushtrue
         returnvalue
         ofs2:
         label
         pushfalse
         returnvalue
         jump ofs0
         ofs0:
         getlocal1
         setlocal2
         pushstring " "
         getlocal2
         ifstrictne ofs3
         pushbyte 0
         jump ofs4
         ofs3:
         pushstring "\t"
         getlocal2
         ifstrictne ofs5
         pushbyte 1
         jump ofs4
         ofs5:
         pushstring "\r"
         getlocal2
         ifstrictne ofs6
         pushbyte 2
         jump ofs4
         ofs6:
         pushstring "\n"
         getlocal2
         ifstrictne ofs7
         pushbyte 3
         jump ofs4
         ofs7:
         pushstring "\f"
         getlocal2
         ifstrictne ofs8
         pushbyte 4
         jump ofs4
         ofs8:
         jump ofs9
         pushbyte 5
         jump ofs9
         ofs9:
         pushbyte 5
         ofs4:
         kill 2
         lookupswitch ofs2, [ofs1, ofs1, ofs1, ofs1, ofs1, ofs2]
         end ; code
         end ; body
         end ; method
      }
      
      public static function substitute(param1:String, ... rest) : String
      {
         trait method QName(PackageNamespace(""),"substitute")
         flag FINAL
         dispid 6
         method
         name null
         flag NEED_REST
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 4
         localcount 6
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal 4
         getlocal1
         pushnull
         ifne ofs0
         pushstring ""
         returnvalue
         ofs0:
         getlocal2
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal3
         getlocal3
         pushbyte 1
         equals
         dup
         iffalse ofs1
         pop
         getlocal2
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"#StringUtil"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),PrivateNamespace(null,"#StringUtil/1"),PackageInternalNs("mx.utils"),ProtectedNamespace("mx.utils:StringUtil"),StaticProtectedNs("mx.utils:StringUtil"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"Array")
         istypelate
         ofs1:
         iffalse ofs2
         getlocal2
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"#StringUtil"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),PrivateNamespace(null,"#StringUtil/1"),PackageInternalNs("mx.utils"),ProtectedNamespace("mx.utils:StringUtil"),StaticProtectedNs("mx.utils:StringUtil"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"Array")
         astypelate
         coerce QName(PackageNamespace(""),"Array")
         dup
         setlocal 4
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal3
         jump ofs3
         ofs2:
         getlocal2
         coerce QName(PackageNamespace(""),"Array")
         setlocal 4
         ofs3:
         pushbyte 0
         setlocal 5
         jump ofs4
         ofs5:
         label
         getlocal1
         findpropstrict QName(PackageNamespace(""),"RegExp")
         pushstring "\\{"
         getlocal 5
         add
         pushstring "\\}"
         add
         pushstring "g"
         constructprop QName(PackageNamespace(""),"RegExp"), 2
         getlocal 4
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"#StringUtil"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),PrivateNamespace(null,"#StringUtil/1"),PackageInternalNs("mx.utils"),ProtectedNamespace("mx.utils:StringUtil"),StaticProtectedNs("mx.utils:StringUtil"),StaticProtectedNs("Object")])
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"replace"), 2
         coerce_s
         setlocal1
         inclocal_i 5
         ofs4:
         getlocal 5
         getlocal3
         iflt ofs5
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function repeat(param1:String, param2:int) : String
      {
         trait method QName(PackageNamespace(""),"repeat")
         flag FINAL
         dispid 7
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal2
         pushbyte 0
         ifne ofs0
         pushstring ""
         returnvalue
         ofs0:
         getlocal1
         coerce_s
         setlocal3
         pushbyte 1
         setlocal 4
         jump ofs1
         ofs2:
         label
         getlocal3
         getlocal1
         add
         coerce_s
         setlocal3
         inclocal_i 4
         ofs1:
         getlocal 4
         getlocal2
         iflt ofs2
         getlocal3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function restrict(param1:String, param2:String) : String
      {
         trait method QName(PackageNamespace(""),"restrict")
         flag FINAL
         dispid 8
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 3
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_u
         setlocal 6
         getlocal2
         pushnull
         ifne ofs0
         getlocal1
         returnvalue
         ofs0:
         getlocal2
         pushstring ""
         ifne ofs1
         pushstring ""
         returnvalue
         ofs1:
         newarray 0
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         getlocal1
         getproperty QName(PackageNamespace(""),"length")
         convert_i
         setlocal 4
         pushbyte 0
         setlocal 5
         jump ofs2
         ofs3:
         label
         getlocal1
         getlocal 5
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"charCodeAt"), 1
         convert_u
         setlocal 6
         findpropstrict QName(PrivateNamespace(null,"#StringUtil"),"testCharacter")
         getlocal 6
         getlocal2
         callproperty QName(PrivateNamespace(null,"#StringUtil"),"testCharacter"), 2
         iffalse ofs4
         getlocal3
         getlocal 6
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         ofs4:
         inclocal_i 5
         ofs2:
         getlocal 5
         getlocal 4
         iflt ofs3
         getlex QName(PackageNamespace(""),"String")
         getproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"fromCharCode")
         pushnull
         getlocal3
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"apply"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function testCharacter(param1:uint, param2:String) : Boolean
      {
         trait method QName(PrivateNamespace(null,"#StringUtil"),"testCharacter")
         flag FINAL
         dispid 9
         method
         name null
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 12
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_u
         setlocal 9
         pushfalse
         setlocal 11
         pushfalse
         setlocal3
         pushfalse
         setlocal 4
         pushfalse
         setlocal 5
         pushtrue
         setlocal 6
         pushbyte 0
         convert_u
         setlocal 7
         getlocal2
         getproperty QName(PackageNamespace(""),"length")
         convert_i
         dup
         setlocal 8
         pushbyte 0
         ifngt ofs0
         getlocal2
         pushbyte 0
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"charCodeAt"), 1
         convert_u
         dup
         setlocal 9
         pushbyte 94
         ifne ofs0
         pushtrue
         setlocal3
         ofs0:
         pushbyte 0
         setlocal 10
         jump ofs1
         ofs2:
         label
         getlocal2
         getlocal 10
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"charCodeAt"), 1
         convert_u
         setlocal 9
         pushfalse
         setlocal 11
         getlocal 4
         iftrue ofs3
         getlocal 9
         pushbyte 45
         ifne ofs4
         pushtrue
         setlocal 5
         jump ofs5
         ofs4:
         getlocal 9
         pushbyte 94
         ifne ofs6
         getlocal 6
         not
         setlocal 6
         jump ofs5
         ofs6:
         getlocal 9
         pushbyte 92
         ifne ofs7
         pushtrue
         setlocal 4
         jump ofs5
         ofs7:
         pushtrue
         setlocal 11
         ofs5:
         jump ofs8
         ofs3:
         pushtrue
         setlocal 11
         pushfalse
         setlocal 4
         ofs8:
         getlocal 11
         iffalse ofs9
         getlocal 5
         iffalse ofs10
         getlocal 7
         getlocal1
         lessequals
         dup
         iffalse ofs11
         pop
         getlocal1
         getlocal 9
         lessequals
         ofs11:
         iffalse ofs12
         getlocal 6
         convert_b
         setlocal3
         ofs12:
         pushfalse
         setlocal 5
         pushbyte 0
         convert_u
         setlocal 7
         jump ofs9
         ofs10:
         getlocal1
         getlocal 9
         ifne ofs13
         getlocal 6
         convert_b
         setlocal3
         ofs13:
         getlocal 9
         convert_u
         setlocal 7
         ofs9:
         inclocal_i 10
         ofs1:
         getlocal 10
         getlocal 8
         iflt ofs2
         getlocal3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
