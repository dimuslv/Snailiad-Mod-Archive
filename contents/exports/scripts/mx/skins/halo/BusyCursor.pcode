
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 9
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("BusyCursor",[PackageNamespace("mx.skins.halo")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"EventDispatcher")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"DisplayObject")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"InteractiveObject")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"Sprite")
   pushscope
   getlex QName(PackageNamespace("mx.core"),"FlexSprite")
   pushscope
   getlex QName(PackageNamespace("mx.core"),"FlexSprite")
   newclass #BusyCursor
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace("mx.skins.halo"),"BusyCursor")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.skins.halo
{
   import flash.display.DisplayObject;
   import flash.display.Graphics;
   import flash.display.InteractiveObject;
   import flash.display.Shape;
   import flash.events.Event;
   import mx.core.FlexShape;
   import mx.core.FlexSprite;
   import mx.core.mx_internal;
   import mx.styles.CSSStyleDeclaration;
   import mx.styles.IStyleManager2;
   import mx.styles.StyleManager;
   
   use namespace mx_internal;
   
   public class BusyCursor extends FlexSprite
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var minuteHand:Shape;
      
      private var hourHand:Shape;
      
      public function BusyCursor(param1:IStyleManager2 = null)
      {
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace("mx.styles"),"IStyleManager2")
         optional Null()
         returns null
         
         body
         maxstack 4
         localcount 8
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("flash.display"),"Graphics")
         setlocal 7
         getlocal0
         constructsuper 0
         getlocal1
         iftrue ofs0
         getlex QName(PackageNamespace("mx.styles"),"StyleManager")
         pushnull
         callproperty QName(PackageNamespace(""),"getStyleManager"), 1
         coerce QName(PackageNamespace("mx.styles"),"IStyleManager2")
         setlocal1
         ofs0:
         getlocal1
         pushstring "mx.managers.CursorManager"
         callproperty QName(Namespace("mx.styles:IStyleManager2"),"getMergedStyleDeclaration"), 1
         coerce QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration")
         setlocal2
         getlocal2
         pushstring "busyCursorBackground"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         coerce QName(PackageNamespace(""),"Class")
         setlocal3
         getlocal3
         construct 0
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         dup
         setlocal 4
         getlex QName(PackageNamespace("flash.display"),"InteractiveObject")
         istypelate
         iffalse ofs1
         findpropstrict QName(PackageNamespace("flash.display"),"InteractiveObject")
         getlocal 4
         callproperty QName(PackageNamespace("flash.display"),"InteractiveObject"), 1
         pushfalse
         setproperty QName(PackageNamespace(""),"mouseEnabled")
         ofs1:
         findpropstrict QName(PackageNamespace(""),"addChild")
         getlocal 4
         callpropvoid QName(PackageNamespace(""),"addChild"), 1
         pushdouble -0.5
         convert_d
         setlocal 5
         pushdouble -0.5
         convert_d
         setlocal 6
         getlocal0
         findpropstrict QName(PackageNamespace("mx.core"),"FlexShape")
         constructprop QName(PackageNamespace("mx.core"),"FlexShape"), 0
         initproperty QName(PrivateNamespace(null,"#BusyCursor"),"minuteHand")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BusyCursor"),"minuteHand")
         pushstring "minuteHand"
         setproperty QName(PackageNamespace(""),"name")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BusyCursor"),"minuteHand")
         getproperty QName(PackageNamespace(""),"graphics")
         coerce QName(PackageNamespace("flash.display"),"Graphics")
         dup
         setlocal 7
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"beginFill"), 1
         getlocal 7
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"moveTo"), 2
         getlocal 7
         pushbyte 1
         getlocal 5
         add
         pushbyte 0
         getlocal 6
         add
         callpropvoid QName(PackageNamespace(""),"lineTo"), 2
         getlocal 7
         pushbyte 1
         getlocal 5
         add
         pushbyte 5
         getlocal 6
         add
         callpropvoid QName(PackageNamespace(""),"lineTo"), 2
         getlocal 7
         pushbyte 0
         getlocal 5
         add
         pushbyte 5
         getlocal 6
         add
         callpropvoid QName(PackageNamespace(""),"lineTo"), 2
         getlocal 7
         pushbyte 0
         getlocal 5
         add
         pushbyte 0
         getlocal 6
         add
         callpropvoid QName(PackageNamespace(""),"lineTo"), 2
         getlocal 7
         callpropvoid QName(PackageNamespace(""),"endFill"), 0
         findpropstrict QName(PackageNamespace(""),"addChild")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BusyCursor"),"minuteHand")
         callpropvoid QName(PackageNamespace(""),"addChild"), 1
         getlocal0
         findpropstrict QName(PackageNamespace("mx.core"),"FlexShape")
         constructprop QName(PackageNamespace("mx.core"),"FlexShape"), 0
         initproperty QName(PrivateNamespace(null,"#BusyCursor"),"hourHand")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BusyCursor"),"hourHand")
         pushstring "hourHand"
         setproperty QName(PackageNamespace(""),"name")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BusyCursor"),"hourHand")
         getproperty QName(PackageNamespace(""),"graphics")
         coerce QName(PackageNamespace("flash.display"),"Graphics")
         dup
         setlocal 7
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"beginFill"), 1
         getlocal 7
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"moveTo"), 2
         getlocal 7
         pushbyte 4
         getlocal 5
         add
         pushbyte 0
         getlocal 6
         add
         callpropvoid QName(PackageNamespace(""),"lineTo"), 2
         getlocal 7
         pushbyte 4
         getlocal 5
         add
         pushbyte 1
         getlocal 6
         add
         callpropvoid QName(PackageNamespace(""),"lineTo"), 2
         getlocal 7
         pushbyte 0
         getlocal 5
         add
         pushbyte 1
         getlocal 6
         add
         callpropvoid QName(PackageNamespace(""),"lineTo"), 2
         getlocal 7
         pushbyte 0
         getlocal 5
         add
         pushbyte 0
         getlocal 6
         add
         callpropvoid QName(PackageNamespace(""),"lineTo"), 2
         getlocal 7
         callpropvoid QName(PackageNamespace(""),"endFill"), 0
         findpropstrict QName(PackageNamespace(""),"addChild")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BusyCursor"),"hourHand")
         callpropvoid QName(PackageNamespace(""),"addChild"), 1
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("flash.events"),"Event")
         getproperty QName(PackageNamespace(""),"ADDED")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BusyCursor"),"handleAdded")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 2
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("flash.events"),"Event")
         getproperty QName(PackageNamespace(""),"REMOVED")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BusyCursor"),"handleRemoved")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function handleAdded(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#BusyCursor"),"handleAdded")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("flash.events"),"Event")
         getproperty QName(PackageNamespace(""),"ENTER_FRAME")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BusyCursor"),"enterFrameHandler")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function handleRemoved(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#BusyCursor"),"handleRemoved")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"removeEventListener")
         getlex QName(PackageNamespace("flash.events"),"Event")
         getproperty QName(PackageNamespace(""),"ENTER_FRAME")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BusyCursor"),"enterFrameHandler")
         callpropvoid QName(PackageNamespace(""),"removeEventListener"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function enterFrameHandler(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#BusyCursor"),"enterFrameHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BusyCursor"),"minuteHand")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BusyCursor"),"minuteHand")
         getproperty QName(PackageNamespace(""),"rotation")
         pushbyte 12
         add
         setproperty QName(PackageNamespace(""),"rotation")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BusyCursor"),"hourHand")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BusyCursor"),"hourHand")
         getproperty QName(PackageNamespace(""),"rotation")
         pushbyte 1
         add
         setproperty QName(PackageNamespace(""),"rotation")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
