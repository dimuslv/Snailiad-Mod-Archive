
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("HaloFocusRect",[PackageNamespace("mx.skins.halo")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"EventDispatcher")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"DisplayObject")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"Shape")
   pushscope
   getlex QName(PackageNamespace("mx.core"),"FlexShape")
   pushscope
   getlex QName(PackageNamespace("mx.skins"),"ProgrammaticSkin")
   pushscope
   getlex QName(PackageNamespace("mx.skins"),"ProgrammaticSkin")
   newclass #HaloFocusRect
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace("mx.skins.halo"),"HaloFocusRect")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.skins.halo
{
   import flash.display.Graphics;
   import mx.core.mx_internal;
   import mx.skins.ProgrammaticSkin;
   import mx.styles.CSSStyleDeclaration;
   import mx.styles.IStyleClient;
   import mx.utils.GraphicsUtil;
   
   use namespace mx_internal;
   
   public class HaloFocusRect extends ProgrammaticSkin implements IStyleClient
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _focusColor:Number;
      
      public function HaloFocusRect()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get className() : String
      {
         trait getter QName(PackageNamespace(""),"className")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushstring "HaloFocusRect"
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get inheritingStyles() : Object
      {
         trait getter QName(PackageNamespace(""),"inheritingStyles")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"styleName")
         getproperty Multiname("inheritingStyles",[PrivateNamespace(null,"#HaloFocusRect"),PackageNamespace(""),PrivateNamespace(null,"#HaloFocusRect/1"),PackageNamespace("mx.skins.halo"),PackageInternalNs("mx.skins.halo"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.skins.halo:HaloFocusRect"),StaticProtectedNs("mx.skins.halo:HaloFocusRect"),StaticProtectedNs("mx.skins:ProgrammaticSkin"),StaticProtectedNs("mx.core:FlexShape"),StaticProtectedNs("flash.display:Shape"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set inheritingStyles(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"inheritingStyles")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get nonInheritingStyles() : Object
      {
         trait getter QName(PackageNamespace(""),"nonInheritingStyles")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"styleName")
         getproperty Multiname("nonInheritingStyles",[PrivateNamespace(null,"#HaloFocusRect"),PackageNamespace(""),PrivateNamespace(null,"#HaloFocusRect/1"),PackageNamespace("mx.skins.halo"),PackageInternalNs("mx.skins.halo"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.skins.halo:HaloFocusRect"),StaticProtectedNs("mx.skins.halo:HaloFocusRect"),StaticProtectedNs("mx.skins:ProgrammaticSkin"),StaticProtectedNs("mx.core:FlexShape"),StaticProtectedNs("flash.display:Shape"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set nonInheritingStyles(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"nonInheritingStyles")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get styleDeclaration() : CSSStyleDeclaration
      {
         trait getter QName(PackageNamespace(""),"styleDeclaration")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration")
         getlex QName(PackageNamespace(""),"styleName")
         callproperty QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set styleDeclaration(param1:CSSStyleDeclaration) : void
      {
         trait setter QName(PackageNamespace(""),"styleDeclaration")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override protected function updateDisplayList(param1:Number, param2:Number) : void
      {
         trait method QName(ProtectedNamespace("mx.skins.halo:HaloFocusRect"),"updateDisplayList")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 16
         localcount 18
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal 12
         pushnan
         setlocal 13
         pushnan
         setlocal 14
         pushnan
         setlocal 15
         pushnan
         setlocal 16
         pushnan
         setlocal 17
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(ProtectedNamespace("mx.skins:ProgrammaticSkin"),"updateDisplayList"), 2
         getlocal0
         pushstring "focusBlendMode"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         coerce_s
         setlocal3
         getlocal0
         pushstring "focusAlpha"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal 4
         getlocal0
         pushstring "focusColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal 5
         getlocal0
         pushstring "cornerRadius"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal 6
         getlocal0
         pushstring "focusThickness"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal 7
         getlocal0
         pushstring "focusRoundedCorners"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         coerce_s
         setlocal 8
         getlocal0
         pushstring "themeColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal 9
         getlocal 5
         convert_d
         setlocal 10
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 10
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iffalse ofs0
         getlocal 9
         convert_d
         setlocal 10
         ofs0:
         getlex QName(PackageNamespace(""),"graphics")
         coerce QName(PackageNamespace("flash.display"),"Graphics")
         dup
         setlocal 11
         callpropvoid QName(PackageNamespace(""),"clear"), 0
         getlocal3
         iffalse ofs1
         findproperty QName(PackageNamespace(""),"blendMode")
         getlocal3
         initproperty QName(PackageNamespace(""),"blendMode")
         ofs1:
         getlocal 8
         pushstring "tl tr bl br"
         equals
         not
         dup
         iffalse ofs2
         pop
         getlocal 6
         pushbyte 0
         greaterthan
         ofs2:
         iffalse ofs3
         pushbyte 0
         convert_d
         setlocal 12
         pushbyte 0
         convert_d
         setlocal 13
         pushbyte 0
         convert_d
         setlocal 14
         pushbyte 0
         convert_d
         setlocal 15
         getlocal 6
         getlocal 7
         add
         convert_d
         setlocal 16
         getlocal 8
         pushstring "tl"
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf"), 1
         pushbyte 0
         ifnge ofs4
         getlocal 16
         convert_d
         setlocal 12
         ofs4:
         getlocal 8
         pushstring "tr"
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf"), 1
         pushbyte 0
         ifnge ofs5
         getlocal 16
         convert_d
         setlocal 14
         ofs5:
         getlocal 8
         pushstring "bl"
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf"), 1
         pushbyte 0
         ifnge ofs6
         getlocal 16
         convert_d
         setlocal 13
         ofs6:
         getlocal 8
         pushstring "br"
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf"), 1
         pushbyte 0
         ifnge ofs7
         getlocal 16
         convert_d
         setlocal 15
         ofs7:
         getlocal 11
         getlocal 10
         getlocal 4
         callpropvoid QName(PackageNamespace(""),"beginFill"), 2
         getlex QName(PackageNamespace("mx.utils"),"GraphicsUtil")
         getlocal 11
         pushbyte 0
         dup
         getlocal1
         getlocal2
         getlex QName(PackageNamespace(""),"NaN")
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 12
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 14
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 13
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 15
         getlex QName(PackageNamespace(""),"NaN")
         callpropvoid QName(PackageNamespace(""),"drawRoundRectComplex2"), 15
         getlocal 12
         iffalse ofs8
         getlocal 6
         convert_d
         jump ofs9
         ofs8:
         pushbyte 0
         convert_d
         ofs9:
         convert_d
         setlocal 12
         getlocal 14
         iffalse ofs10
         getlocal 6
         convert_d
         jump ofs11
         ofs10:
         pushbyte 0
         convert_d
         ofs11:
         convert_d
         setlocal 14
         getlocal 13
         iffalse ofs12
         getlocal 6
         convert_d
         jump ofs13
         ofs12:
         pushbyte 0
         convert_d
         ofs13:
         convert_d
         setlocal 13
         getlocal 15
         iffalse ofs14
         getlocal 6
         convert_d
         jump ofs15
         ofs14:
         pushbyte 0
         convert_d
         ofs15:
         convert_d
         setlocal 15
         getlex QName(PackageNamespace("mx.utils"),"GraphicsUtil")
         getlocal 11
         getlocal 7
         getlocal 7
         getlocal1
         pushbyte 2
         getlocal 7
         multiply
         subtract
         getlocal2
         pushbyte 2
         getlocal 7
         multiply
         subtract
         getlex QName(PackageNamespace(""),"NaN")
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 12
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 14
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 13
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 15
         getlex QName(PackageNamespace(""),"NaN")
         callpropvoid QName(PackageNamespace(""),"drawRoundRectComplex2"), 15
         getlocal 11
         callpropvoid QName(PackageNamespace(""),"endFill"), 0
         getlocal 6
         getlocal 7
         pushbyte 2
         divide
         add
         convert_d
         setlocal 16
         getlocal 12
         iffalse ofs16
         getlocal 16
         convert_d
         jump ofs17
         ofs16:
         pushbyte 0
         convert_d
         ofs17:
         convert_d
         setlocal 12
         getlocal 14
         iffalse ofs18
         getlocal 16
         convert_d
         jump ofs19
         ofs18:
         pushbyte 0
         convert_d
         ofs19:
         convert_d
         setlocal 14
         getlocal 13
         iffalse ofs20
         getlocal 16
         convert_d
         jump ofs21
         ofs20:
         pushbyte 0
         convert_d
         ofs21:
         convert_d
         setlocal 13
         getlocal 15
         iffalse ofs22
         getlocal 16
         convert_d
         jump ofs23
         ofs22:
         pushbyte 0
         convert_d
         ofs23:
         convert_d
         setlocal 15
         getlocal 11
         getlocal 10
         getlocal 4
         callpropvoid QName(PackageNamespace(""),"beginFill"), 2
         getlex QName(PackageNamespace("mx.utils"),"GraphicsUtil")
         getlocal 11
         getlocal 7
         pushbyte 2
         divide
         getlocal 7
         pushbyte 2
         divide
         getlocal1
         getlocal 7
         subtract
         getlocal2
         getlocal 7
         subtract
         getlex QName(PackageNamespace(""),"NaN")
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 12
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 14
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 13
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 15
         getlex QName(PackageNamespace(""),"NaN")
         callpropvoid QName(PackageNamespace(""),"drawRoundRectComplex2"), 15
         getlocal 12
         iffalse ofs24
         getlocal 6
         convert_d
         jump ofs25
         ofs24:
         pushbyte 0
         convert_d
         ofs25:
         convert_d
         setlocal 12
         getlocal 14
         iffalse ofs26
         getlocal 6
         convert_d
         jump ofs27
         ofs26:
         pushbyte 0
         convert_d
         ofs27:
         convert_d
         setlocal 14
         getlocal 13
         iffalse ofs28
         getlocal 6
         convert_d
         jump ofs29
         ofs28:
         pushbyte 0
         convert_d
         ofs29:
         convert_d
         setlocal 13
         getlocal 15
         iffalse ofs30
         getlocal 6
         convert_d
         jump ofs31
         ofs30:
         pushbyte 0
         convert_d
         ofs31:
         convert_d
         setlocal 15
         getlex QName(PackageNamespace("mx.utils"),"GraphicsUtil")
         getlocal 11
         getlocal 7
         getlocal 7
         getlocal1
         pushbyte 2
         getlocal 7
         multiply
         subtract
         getlocal2
         pushbyte 2
         getlocal 7
         multiply
         subtract
         getlex QName(PackageNamespace(""),"NaN")
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 12
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 14
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 13
         getlex QName(PackageNamespace(""),"NaN")
         getlocal 15
         getlex QName(PackageNamespace(""),"NaN")
         callpropvoid QName(PackageNamespace(""),"drawRoundRectComplex2"), 15
         getlocal 11
         callpropvoid QName(PackageNamespace(""),"endFill"), 0
         jump ofs32
         ofs3:
         getlocal 11
         getlocal 10
         getlocal 4
         callpropvoid QName(PackageNamespace(""),"beginFill"), 2
         getlocal 6
         pushbyte 0
         greaterthan
         iffalse ofs33
         getlocal 6
         getlocal 7
         add
         coerce_a
         jump ofs34
         ofs33:
         pushbyte 0
         coerce_a
         ofs34:
         pushbyte 2
         multiply
         convert_d
         setlocal 17
         getlocal 11
         pushbyte 0
         dup
         getlocal1
         getlocal2
         getlocal 17
         getlocal 17
         callpropvoid QName(PackageNamespace(""),"drawRoundRect"), 6
         getlocal 6
         pushbyte 2
         multiply
         convert_d
         setlocal 17
         getlocal 11
         getlocal 7
         getlocal 7
         getlocal1
         pushbyte 2
         getlocal 7
         multiply
         subtract
         getlocal2
         pushbyte 2
         getlocal 7
         multiply
         subtract
         getlocal 17
         getlocal 17
         callpropvoid QName(PackageNamespace(""),"drawRoundRect"), 6
         getlocal 11
         callpropvoid QName(PackageNamespace(""),"endFill"), 0
         getlocal 11
         getlocal 10
         getlocal 4
         callpropvoid QName(PackageNamespace(""),"beginFill"), 2
         getlocal 6
         pushbyte 0
         greaterthan
         iffalse ofs35
         getlocal 6
         getlocal 7
         pushbyte 2
         divide
         add
         coerce_a
         jump ofs36
         ofs35:
         pushbyte 0
         coerce_a
         ofs36:
         pushbyte 2
         multiply
         convert_d
         setlocal 17
         getlocal 11
         getlocal 7
         pushbyte 2
         divide
         getlocal 7
         pushbyte 2
         divide
         getlocal1
         getlocal 7
         subtract
         getlocal2
         getlocal 7
         subtract
         getlocal 17
         getlocal 17
         callpropvoid QName(PackageNamespace(""),"drawRoundRect"), 6
         getlocal 6
         pushbyte 2
         multiply
         convert_d
         setlocal 17
         getlocal 11
         getlocal 7
         getlocal 7
         getlocal1
         pushbyte 2
         getlocal 7
         multiply
         subtract
         getlocal2
         pushbyte 2
         getlocal 7
         multiply
         subtract
         getlocal 17
         getlocal 17
         callpropvoid QName(PackageNamespace(""),"drawRoundRect"), 6
         getlocal 11
         callpropvoid QName(PackageNamespace(""),"endFill"), 0
         ofs32:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function getStyle(param1:String) : *
      {
         trait method QName(PackageNamespace(""),"getStyle")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns null
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal1
         pushstring "focusColor"
         equals
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#HaloFocusRect"),"_focusColor")
         coerce_a
         jump ofs1
         ofs0:
         getlocal0
         getlocal1
         callsuper QName(PackageNamespace(""),"getStyle"), 1
         coerce_a
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setStyle(param1:String, param2:*) : void
      {
         trait method QName(PackageNamespace(""),"setStyle")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal1
         pushstring "focusColor"
         ifne ofs0
         getlocal0
         getlocal2
         initproperty QName(PrivateNamespace(null,"#HaloFocusRect"),"_focusColor")
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function clearStyle(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"clearStyle")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal1
         pushstring "focusColor"
         ifne ofs0
         getlocal0
         getlex QName(PackageNamespace(""),"NaN")
         initproperty QName(PrivateNamespace(null,"#HaloFocusRect"),"_focusColor")
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getClassStyleDeclarations() : Array
      {
         trait method QName(PackageNamespace(""),"getClassStyleDeclarations")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         newarray 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function notifyStyleChangeInChildren(param1:String, param2:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"notifyStyleChangeInChildren")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function regenerateStyleCache(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"regenerateStyleCache")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function registerEffects(param1:Array) : void
      {
         trait method QName(PackageNamespace(""),"registerEffects")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Array")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
