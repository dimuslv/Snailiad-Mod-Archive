
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 15
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("BorderSkin",[PackageNamespace("mx.skins.spark")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"EventDispatcher")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"DisplayObject")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"InteractiveObject")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"Sprite")
   pushscope
   getlex QName(PackageNamespace("mx.core"),"FlexSprite")
   pushscope
   getlex QName(PackageNamespace("mx.core"),"UIComponent")
   pushscope
   getlex QName(PackageNamespace("spark.components.supportClasses"),"GroupBase")
   pushscope
   getlex QName(PackageNamespace("spark.components"),"Group")
   pushscope
   getlex QName(PackageNamespace("spark.components.supportClasses"),"Skin")
   pushscope
   getlex QName(PackageNamespace("spark.skins"),"SparkSkin")
   pushscope
   getlex QName(PackageNamespace("mx.skins.spark"),"SparkSkinForHalo")
   pushscope
   getlex QName(PackageNamespace("mx.skins.spark"),"SparkSkinForHalo")
   newclass #BorderSkin
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace("mx.skins.spark"),"BorderSkin")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.skins.spark
{
   import flash.geom.Rectangle;
   import mx.binding.BindingManager;
   import mx.core.EdgeMetrics;
   import mx.core.IFlexModuleFactory;
   import mx.core.IRectangularBorder;
   import mx.core.IUIComponent;
   import mx.events.PropertyChangeEvent;
   import mx.graphics.RectangularDropShadow;
   import mx.graphics.SolidColor;
   import mx.graphics.SolidColorStroke;
   import spark.primitives.Rect;
   
   public class BorderSkin extends SparkSkinForHalo implements IRectangularBorder
   {
      
      private static const exclusions:Array;
      
      private static const contentFill:Array;
      
      private static const borderItem:Array;
      
      private static const metrics:EdgeMetrics;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 6
         localcount 1
         initscopedepth 15
         maxscopedepth 16
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#BorderSkin"),"exclusions")
         pushstring "background"
         newarray 1
         initproperty QName(PrivateNamespace(null,"#BorderSkin"),"exclusions")
         findproperty QName(PrivateNamespace(null,"#BorderSkin"),"contentFill")
         pushstring "bgFill"
         newarray 1
         initproperty QName(PrivateNamespace(null,"#BorderSkin"),"contentFill")
         findproperty QName(PrivateNamespace(null,"#BorderSkin"),"borderItem")
         pushstring "borderStroke"
         newarray 1
         initproperty QName(PrivateNamespace(null,"#BorderSkin"),"borderItem")
         findproperty QName(PrivateNamespace(null,"#BorderSkin"),"metrics")
         findpropstrict QName(PackageNamespace("mx.core"),"EdgeMetrics")
         pushbyte 1
         dup
         dup
         pushbyte 1
         constructprop QName(PackageNamespace("mx.core"),"EdgeMetrics"), 4
         initproperty QName(PrivateNamespace(null,"#BorderSkin"),"metrics")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _1332194002background:Rect;
      
      private var _1391998104bgFill:SolidColor;
      
      private var _1383304148border:Rect;
      
      private var _1395787140borderStroke:SolidColorStroke;
      
      private var __moduleFactoryInitialized:Boolean = false;
      
      private var _583595847cornerRadius:Number = 0;
      
      private var dropShadow:RectangularDropShadow;
      
      public function BorderSkin()
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         getlocal0
         pushfalse
         initproperty QName(PackageNamespace(""),"mouseEnabled")
         getlocal0
         pushfalse
         initproperty QName(PackageNamespace(""),"mouseChildren")
         getlocal0
         getlocal0
         callproperty QName(PrivateNamespace(null,"#BorderSkin"),"_BorderSkin_Rect1_i"), 0
         getlocal0
         callproperty QName(PrivateNamespace(null,"#BorderSkin"),"_BorderSkin_Rect2_i"), 0
         newarray 2
         initproperty QName(PackageNamespace(""),"mxmlContent")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function set moduleFactory(param1:IFlexModuleFactory) : void
      {
         trait setter QName(PackageNamespace(""),"moduleFactory")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"moduleFactory")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"__moduleFactoryInitialized")
         iffalse ofs0
         returnvoid
         ofs0:
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#BorderSkin"),"__moduleFactoryInitialized")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function initialize() : void
      {
         trait method QName(PackageNamespace(""),"initialize")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlocal0
         callsupervoid QName(PackageNamespace(""),"initialize"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get colorizeExclusions() : Array
      {
         trait getter QName(PackageNamespace(""),"colorizeExclusions")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#BorderSkin"),"exclusions")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function get contentItems() : Array
      {
         trait getter QName(PackageNamespace(""),"contentItems")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#BorderSkin"),"contentFill")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override protected function get borderItems() : Array
      {
         trait getter QName(ProtectedNamespace("mx.skins.spark:BorderSkin"),"borderItems")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#BorderSkin"),"borderItem")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override protected function get defaultBorderItemColor() : uint
      {
         trait getter QName(ProtectedNamespace("mx.skins.spark:BorderSkin"),"defaultBorderItemColor")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"getStyle")
         pushstring "borderColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override protected function get defaultBorderAlpha() : Number
      {
         trait getter QName(ProtectedNamespace("mx.skins.spark:BorderSkin"),"defaultBorderAlpha")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"getStyle")
         pushstring "borderAlpha"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get borderMetrics() : EdgeMetrics
      {
         trait getter QName(PackageNamespace(""),"borderMetrics")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.core"),"EdgeMetrics")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"getStyle")
         pushstring "borderVisible"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         pushfalse
         equals
         dup
         iftrue ofs0
         pop
         findpropstrict QName(PackageNamespace(""),"getStyle")
         pushstring "borderStyle"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         pushstring "none"
         equals
         ofs0:
         iffalse ofs1
         getlex QName(PackageNamespace("mx.core"),"EdgeMetrics")
         getproperty QName(PackageNamespace(""),"EMPTY")
         returnvalue
         ofs1:
         getlex QName(PrivateNamespace(null,"#BorderSkin"),"metrics")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get backgroundImageBounds() : Rectangle
      {
         trait getter QName(PackageNamespace(""),"backgroundImageBounds")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.geom"),"Rectangle")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set backgroundImageBounds(param1:Rectangle) : void
      {
         trait setter QName(PackageNamespace(""),"backgroundImageBounds")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Rectangle")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get hasBackgroundImage() : Boolean
      {
         trait getter QName(PackageNamespace(""),"hasBackgroundImage")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function layoutBackgroundImage() : void
      {
         trait method QName(PackageNamespace(""),"layoutBackgroundImage")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override protected function initializationComplete() : void
      {
         trait method QName(ProtectedNamespace("mx.skins.spark:BorderSkin"),"initializationComplete")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         findproperty QName(ProtectedNamespace("spark.skins:SparkSkin"),"useChromeColor")
         pushtrue
         initproperty QName(ProtectedNamespace("spark.skins:SparkSkin"),"useChromeColor")
         getlocal0
         callsupervoid QName(ProtectedNamespace("mx.core:UIComponent"),"initializationComplete"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override protected function updateDisplayList(param1:Number, param2:Number) : void
      {
         trait method QName(ProtectedNamespace("mx.skins.spark:BorderSkin"),"updateDisplayList")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 4
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         findproperty QName(PackageNamespace(""),"redrawRequested")
         pushtrue
         initproperty QName(PackageNamespace(""),"redrawRequested")
         findpropstrict QName(PackageNamespace(""),"getStyle")
         pushstring "borderVisible"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         pushfalse
         equals
         dup
         iftrue ofs0
         pop
         findpropstrict QName(PackageNamespace(""),"getStyle")
         pushstring "borderStyle"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         pushstring "none"
         equals
         ofs0:
         iffalse ofs1
         getlocal0
         getproperty QName(PackageNamespace(""),"border")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         getlocal0
         getproperty QName(PackageNamespace(""),"background")
         getlocal0
         getproperty QName(PackageNamespace(""),"background")
         getlocal0
         getproperty QName(PackageNamespace(""),"background")
         getlocal0
         getproperty QName(PackageNamespace(""),"background")
         pushbyte 0
         dup
         setlocal3
         setproperty QName(PackageNamespace(""),"bottom")
         getlocal3
         kill 3
         dup
         setlocal3
         setproperty QName(PackageNamespace(""),"right")
         getlocal3
         kill 3
         dup
         setlocal3
         setproperty QName(PackageNamespace(""),"top")
         getlocal3
         kill 3
         setproperty QName(PackageNamespace(""),"left")
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(PackageNamespace(""),"border")
         pushtrue
         setproperty QName(PackageNamespace(""),"visible")
         getlocal0
         getproperty QName(PackageNamespace(""),"background")
         getlocal0
         getproperty QName(PackageNamespace(""),"background")
         getlocal0
         getproperty QName(PackageNamespace(""),"background")
         getlocal0
         getproperty QName(PackageNamespace(""),"background")
         pushbyte 1
         dup
         setlocal3
         setproperty QName(PackageNamespace(""),"bottom")
         getlocal3
         kill 3
         dup
         setlocal3
         setproperty QName(PackageNamespace(""),"right")
         getlocal3
         kill 3
         dup
         setlocal3
         setproperty QName(PackageNamespace(""),"top")
         getlocal3
         kill 3
         setproperty QName(PackageNamespace(""),"left")
         ofs2:
         getlocal0
         getproperty QName(PackageNamespace(""),"border")
         getlocal0
         getproperty QName(PackageNamespace(""),"cornerRadius")
         setproperty QName(PackageNamespace(""),"radiusX")
         getlocal0
         getproperty QName(PackageNamespace(""),"background")
         getlocal0
         getproperty QName(PackageNamespace(""),"cornerRadius")
         setproperty QName(PackageNamespace(""),"radiusX")
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(ProtectedNamespace("mx.skins.spark:SparkSkinForHalo"),"updateDisplayList"), 2
         getlex QName(PackageNamespace(""),"parent")
         coerce_a
         convert_b
         dup
         iffalse ofs3
         pop
         getlex QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.core"),"IUIComponent")
         istypelate
         coerce_a
         convert_b
         ofs3:
         dup
         iffalse ofs4
         pop
         findpropstrict QName(PackageNamespace("mx.core"),"IUIComponent")
         getlex QName(PackageNamespace(""),"parent")
         callproperty QName(PackageNamespace("mx.core"),"IUIComponent"), 1
         getproperty QName(Namespace("mx.core:IUIComponent"),"enabled")
         not
         ofs4:
         iffalse ofs5
         findproperty QName(PackageNamespace(""),"alpha")
         pushdouble 0.5
         initproperty QName(PackageNamespace(""),"alpha")
         jump ofs6
         ofs5:
         findproperty QName(PackageNamespace(""),"alpha")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"alpha")
         ofs6:
         findpropstrict QName(PackageNamespace(""),"getStyle")
         pushstring "dropShadowVisible"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         pushfalse
         equals
         dup
         iftrue ofs7
         pop
         getlex QName(PackageNamespace(""),"width")
         pushbyte 0
         equals
         ofs7:
         dup
         iftrue ofs8
         pop
         getlex QName(PackageNamespace(""),"height")
         pushbyte 0
         equals
         ofs8:
         iffalse ofs9
         returnvoid
         ofs9:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"dropShadow")
         iftrue ofs10
         getlocal0
         findpropstrict QName(PackageNamespace("mx.graphics"),"RectangularDropShadow")
         constructprop QName(PackageNamespace("mx.graphics"),"RectangularDropShadow"), 0
         initproperty QName(PrivateNamespace(null,"#BorderSkin"),"dropShadow")
         ofs10:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"dropShadow")
         pushbyte 5
         setproperty QName(PackageNamespace(""),"distance")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"dropShadow")
         pushbyte 90
         setproperty QName(PackageNamespace(""),"angle")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"dropShadow")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"color")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"dropShadow")
         pushdouble 0.8
         setproperty QName(PackageNamespace(""),"alpha")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"dropShadow")
         pushbyte 20
         setproperty QName(PackageNamespace(""),"blurX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"dropShadow")
         pushbyte 20
         setproperty QName(PackageNamespace(""),"blurY")
         getlex QName(PackageNamespace(""),"graphics")
         callpropvoid QName(PackageNamespace(""),"lineStyle"), 0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"dropShadow")
         getlex QName(PackageNamespace(""),"graphics")
         pushbyte 0
         dup
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         callpropvoid QName(PackageNamespace(""),"drawShadow"), 5
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function getDropShadowAngle(param1:Number, param2:String) : Number
      {
         trait method QName(PrivateNamespace(null,"#BorderSkin"),"getDropShadowAngle")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlocal2
         pushstring "left"
         ifne ofs0
         getlocal1
         pushbyte 0
         greaterequals
         iffalse ofs1
         pushshort 135
         convert_d
         jump ofs2
         ofs1:
         pushshort 225
         convert_d
         ofs2:
         returnvalue
         jump ofs0
         ofs0:
         getlocal2
         pushstring "right"
         ifne ofs3
         getlocal1
         pushbyte 0
         greaterequals
         iffalse ofs4
         pushbyte 45
         convert_d
         jump ofs5
         ofs4:
         pushshort 315
         convert_d
         ofs5:
         returnvalue
         jump ofs3
         ofs3:
         getlocal1
         pushbyte 0
         greaterequals
         iffalse ofs6
         pushbyte 90
         convert_d
         jump ofs7
         ofs6:
         pushshort 270
         convert_d
         ofs7:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function _BorderSkin_Rect1_i() : Rect
      {
         trait method QName(PrivateNamespace(null,"#BorderSkin"),"_BorderSkin_Rect1_i")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("spark.primitives"),"Rect")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("spark.primitives"),"Rect")
         constructprop QName(PackageNamespace("spark.primitives"),"Rect"), 0
         coerce QName(PackageNamespace("spark.primitives"),"Rect")
         setlocal1
         getlocal1
         pushbyte 0
         setproperty QName(PackageNamespace(""),"left")
         getlocal1
         pushbyte 0
         setproperty QName(PackageNamespace(""),"right")
         getlocal1
         pushbyte 0
         setproperty QName(PackageNamespace(""),"top")
         getlocal1
         pushbyte 0
         setproperty QName(PackageNamespace(""),"bottom")
         getlocal1
         pushbyte 0
         setproperty QName(PackageNamespace(""),"radiusX")
         getlocal1
         getlocal0
         callproperty QName(PrivateNamespace(null,"#BorderSkin"),"_BorderSkin_SolidColorStroke1_i"), 0
         setproperty QName(PackageNamespace(""),"stroke")
         getlocal1
         getlocal0
         pushstring "border"
         callpropvoid QName(PackageNamespace(""),"initialized"), 2
         getlocal0
         getlocal1
         initproperty QName(PackageNamespace(""),"border")
         getlex QName(PackageNamespace("mx.binding"),"BindingManager")
         getlocal0
         pushstring "border"
         getlocal0
         getproperty QName(PackageNamespace(""),"border")
         callpropvoid QName(PackageNamespace(""),"executeBindings"), 3
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function _BorderSkin_SolidColorStroke1_i() : SolidColorStroke
      {
         trait method QName(PrivateNamespace(null,"#BorderSkin"),"_BorderSkin_SolidColorStroke1_i")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.graphics"),"SolidColorStroke")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("mx.graphics"),"SolidColorStroke")
         constructprop QName(PackageNamespace("mx.graphics"),"SolidColorStroke"), 0
         coerce QName(PackageNamespace("mx.graphics"),"SolidColorStroke")
         setlocal1
         getlocal0
         getlocal1
         initproperty QName(PackageNamespace(""),"borderStroke")
         getlex QName(PackageNamespace("mx.binding"),"BindingManager")
         getlocal0
         pushstring "borderStroke"
         getlocal0
         getproperty QName(PackageNamespace(""),"borderStroke")
         callpropvoid QName(PackageNamespace(""),"executeBindings"), 3
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function _BorderSkin_Rect2_i() : Rect
      {
         trait method QName(PrivateNamespace(null,"#BorderSkin"),"_BorderSkin_Rect2_i")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("spark.primitives"),"Rect")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("spark.primitives"),"Rect")
         constructprop QName(PackageNamespace("spark.primitives"),"Rect"), 0
         coerce QName(PackageNamespace("spark.primitives"),"Rect")
         setlocal1
         getlocal1
         pushbyte 1
         setproperty QName(PackageNamespace(""),"left")
         getlocal1
         pushbyte 1
         setproperty QName(PackageNamespace(""),"right")
         getlocal1
         pushbyte 1
         setproperty QName(PackageNamespace(""),"top")
         getlocal1
         pushbyte 1
         setproperty QName(PackageNamespace(""),"bottom")
         getlocal1
         pushbyte 0
         setproperty QName(PackageNamespace(""),"radiusX")
         getlocal1
         getlocal0
         callproperty QName(PrivateNamespace(null,"#BorderSkin"),"_BorderSkin_SolidColor1_i"), 0
         setproperty QName(PackageNamespace(""),"fill")
         getlocal1
         getlocal0
         pushstring "background"
         callpropvoid QName(PackageNamespace(""),"initialized"), 2
         getlocal0
         getlocal1
         initproperty QName(PackageNamespace(""),"background")
         getlex QName(PackageNamespace("mx.binding"),"BindingManager")
         getlocal0
         pushstring "background"
         getlocal0
         getproperty QName(PackageNamespace(""),"background")
         callpropvoid QName(PackageNamespace(""),"executeBindings"), 3
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function _BorderSkin_SolidColor1_i() : SolidColor
      {
         trait method QName(PrivateNamespace(null,"#BorderSkin"),"_BorderSkin_SolidColor1_i")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.graphics"),"SolidColor")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("mx.graphics"),"SolidColor")
         constructprop QName(PackageNamespace("mx.graphics"),"SolidColor"), 0
         coerce QName(PackageNamespace("mx.graphics"),"SolidColor")
         setlocal1
         getlocal1
         pushint 16777215
         setproperty QName(PackageNamespace(""),"color")
         getlocal0
         getlocal1
         initproperty QName(PackageNamespace(""),"bgFill")
         getlex QName(PackageNamespace("mx.binding"),"BindingManager")
         getlocal0
         pushstring "bgFill"
         getlocal0
         getproperty QName(PackageNamespace(""),"bgFill")
         callpropvoid QName(PackageNamespace(""),"executeBindings"), 3
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable(event="propertyChange")]
      public function get background() : Rect
      {
         trait getter QName(PackageNamespace(""),"background")
         flag METADATA
         metadata"Bindable"
         item "event" "propertyChange"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace("spark.primitives"),"Rect")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"_1332194002background")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set background(param1:Rect) : void
      {
         trait setter QName(PackageNamespace(""),"background")
         dispid 0
         method
         name null
         param QName(PackageNamespace("spark.primitives"),"Rect")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 3
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"_1332194002background")
         coerce QName(PackageNamespace(""),"Object")
         setlocal2
         getlocal2
         getlocal1
         ifstricteq ofs0
         getlocal0
         getlocal1
         setproperty QName(PrivateNamespace(null,"#BorderSkin"),"_1332194002background")
         getlocal0
         pushstring "propertyChange"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs0
         getlocal0
         getlex QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         getlocal0
         pushstring "background"
         getlocal2
         getlocal1
         callproperty QName(PackageNamespace(""),"createUpdateEvent"), 4
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable(event="propertyChange")]
      public function get bgFill() : SolidColor
      {
         trait getter QName(PackageNamespace(""),"bgFill")
         flag METADATA
         metadata"Bindable"
         item "event" "propertyChange"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.graphics"),"SolidColor")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"_1391998104bgFill")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set bgFill(param1:SolidColor) : void
      {
         trait setter QName(PackageNamespace(""),"bgFill")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.graphics"),"SolidColor")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 3
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"_1391998104bgFill")
         coerce QName(PackageNamespace(""),"Object")
         setlocal2
         getlocal2
         getlocal1
         ifstricteq ofs0
         getlocal0
         getlocal1
         setproperty QName(PrivateNamespace(null,"#BorderSkin"),"_1391998104bgFill")
         getlocal0
         pushstring "propertyChange"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs0
         getlocal0
         getlex QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         getlocal0
         pushstring "bgFill"
         getlocal2
         getlocal1
         callproperty QName(PackageNamespace(""),"createUpdateEvent"), 4
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable(event="propertyChange")]
      public function get border() : Rect
      {
         trait getter QName(PackageNamespace(""),"border")
         flag METADATA
         metadata"Bindable"
         item "event" "propertyChange"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace("spark.primitives"),"Rect")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"_1383304148border")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set border(param1:Rect) : void
      {
         trait setter QName(PackageNamespace(""),"border")
         dispid 0
         method
         name null
         param QName(PackageNamespace("spark.primitives"),"Rect")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 3
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"_1383304148border")
         coerce QName(PackageNamespace(""),"Object")
         setlocal2
         getlocal2
         getlocal1
         ifstricteq ofs0
         getlocal0
         getlocal1
         setproperty QName(PrivateNamespace(null,"#BorderSkin"),"_1383304148border")
         getlocal0
         pushstring "propertyChange"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs0
         getlocal0
         getlex QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         getlocal0
         pushstring "border"
         getlocal2
         getlocal1
         callproperty QName(PackageNamespace(""),"createUpdateEvent"), 4
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable(event="propertyChange")]
      public function get borderStroke() : SolidColorStroke
      {
         trait getter QName(PackageNamespace(""),"borderStroke")
         flag METADATA
         metadata"Bindable"
         item "event" "propertyChange"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.graphics"),"SolidColorStroke")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"_1395787140borderStroke")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set borderStroke(param1:SolidColorStroke) : void
      {
         trait setter QName(PackageNamespace(""),"borderStroke")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.graphics"),"SolidColorStroke")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 3
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"_1395787140borderStroke")
         coerce QName(PackageNamespace(""),"Object")
         setlocal2
         getlocal2
         getlocal1
         ifstricteq ofs0
         getlocal0
         getlocal1
         setproperty QName(PrivateNamespace(null,"#BorderSkin"),"_1395787140borderStroke")
         getlocal0
         pushstring "propertyChange"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs0
         getlocal0
         getlex QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         getlocal0
         pushstring "borderStroke"
         getlocal2
         getlocal1
         callproperty QName(PackageNamespace(""),"createUpdateEvent"), 4
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable(event="propertyChange")]
      public function get cornerRadius() : Number
      {
         trait getter QName(PackageNamespace(""),"cornerRadius")
         flag METADATA
         metadata"Bindable"
         item "event" "propertyChange"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"_583595847cornerRadius")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set cornerRadius(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"cornerRadius")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 3
         initscopedepth 16
         maxscopedepth 17
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#BorderSkin"),"_583595847cornerRadius")
         coerce QName(PackageNamespace(""),"Object")
         setlocal2
         getlocal2
         getlocal1
         ifstricteq ofs0
         getlocal0
         getlocal1
         setproperty QName(PrivateNamespace(null,"#BorderSkin"),"_583595847cornerRadius")
         getlocal0
         pushstring "propertyChange"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs0
         getlocal0
         getlex QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         getlocal0
         pushstring "cornerRadius"
         getlocal2
         getlocal1
         callproperty QName(PackageNamespace(""),"createUpdateEvent"), 4
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
