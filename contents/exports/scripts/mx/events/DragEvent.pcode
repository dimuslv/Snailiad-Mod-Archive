
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 5
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("DragEvent",[PackageNamespace("mx.events")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"Event")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"MouseEvent")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"MouseEvent")
   newclass #DragEvent
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace("mx.events"),"DragEvent")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.events
{
   import flash.events.Event;
   import flash.events.MouseEvent;
   import mx.core.DragSource;
   import mx.core.IUIComponent;
   import mx.core.mx_internal;
   
   use namespace mx_internal;
   
   public class DragEvent extends MouseEvent
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      public static const DRAG_COMPLETE:String = "dragComplete";
      
      public static const DRAG_DROP:String = "dragDrop";
      
      public static const DRAG_ENTER:String = "dragEnter";
      
      public static const DRAG_EXIT:String = "dragExit";
      
      public static const DRAG_OVER:String = "dragOver";
      
      public static const DRAG_START:String = "dragStart";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         findproperty QName(PackageNamespace(""),"DRAG_COMPLETE")
         pushstring "dragComplete"
         initproperty QName(PackageNamespace(""),"DRAG_COMPLETE")
         findproperty QName(PackageNamespace(""),"DRAG_DROP")
         pushstring "dragDrop"
         initproperty QName(PackageNamespace(""),"DRAG_DROP")
         findproperty QName(PackageNamespace(""),"DRAG_ENTER")
         pushstring "dragEnter"
         initproperty QName(PackageNamespace(""),"DRAG_ENTER")
         findproperty QName(PackageNamespace(""),"DRAG_EXIT")
         pushstring "dragExit"
         initproperty QName(PackageNamespace(""),"DRAG_EXIT")
         findproperty QName(PackageNamespace(""),"DRAG_OVER")
         pushstring "dragOver"
         initproperty QName(PackageNamespace(""),"DRAG_OVER")
         findproperty QName(PackageNamespace(""),"DRAG_START")
         pushstring "dragStart"
         initproperty QName(PackageNamespace(""),"DRAG_START")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var action:String;
      
      public var draggedItem:Object;
      
      public var dragInitiator:IUIComponent;
      
      public var dragSource:DragSource;
      
      public function DragEvent(param1:String, param2:Boolean = false, param3:Boolean = true, param4:IUIComponent = null, param5:DragSource = null, param6:String = null, param7:Boolean = false, param8:Boolean = false, param9:Boolean = false)
      {
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace("mx.core"),"IUIComponent")
         param QName(PackageNamespace("mx.core"),"DragSource")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         optional True()
         optional Null()
         optional Null()
         optional Null()
         optional False()
         optional False()
         optional False()
         returns null
         
         body
         maxstack 4
         localcount 10
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         getlocal3
         constructsuper 3
         getlocal0
         getlocal 4
         initproperty QName(PackageNamespace(""),"dragInitiator")
         getlocal0
         getlocal 5
         initproperty QName(PackageNamespace(""),"dragSource")
         getlocal0
         getlocal 6
         initproperty QName(PackageNamespace(""),"action")
         getlocal0
         getlocal 7
         initproperty QName(PackageNamespace(""),"ctrlKey")
         getlocal0
         getlocal 8
         initproperty QName(PackageNamespace(""),"altKey")
         getlocal0
         getlocal 9
         initproperty QName(PackageNamespace(""),"shiftKey")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function clone() : Event
      {
         trait method QName(PackageNamespace(""),"clone")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.events"),"Event")
         
         body
         maxstack 10
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("mx.events"),"DragEvent")
         getlex QName(PackageNamespace(""),"type")
         getlex QName(PackageNamespace(""),"bubbles")
         getlex QName(PackageNamespace(""),"cancelable")
         getlocal0
         getproperty QName(PackageNamespace(""),"dragInitiator")
         getlocal0
         getproperty QName(PackageNamespace(""),"dragSource")
         getlocal0
         getproperty QName(PackageNamespace(""),"action")
         getlex QName(PackageNamespace(""),"ctrlKey")
         getlex QName(PackageNamespace(""),"altKey")
         getlex QName(PackageNamespace(""),"shiftKey")
         constructprop QName(PackageNamespace("mx.events"),"DragEvent"), 9
         coerce QName(PackageNamespace("mx.events"),"DragEvent")
         setlocal1
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"relatedObject")
         setproperty QName(PackageNamespace(""),"relatedObject")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"localX")
         setproperty QName(PackageNamespace(""),"localX")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"localY")
         setproperty QName(PackageNamespace(""),"localY")
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
