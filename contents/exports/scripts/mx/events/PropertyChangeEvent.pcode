
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 4
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("PropertyChangeEvent",[PackageNamespace("mx.events")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"Event")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"Event")
   newclass #PropertyChangeEvent
   popscope
   popscope
   initproperty QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.events
{
   import flash.events.Event;
   import mx.core.mx_internal;
   
   use namespace mx_internal;
   
   public class PropertyChangeEvent extends Event
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      public static const PROPERTY_CHANGE:String = "propertyChange";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         findproperty QName(PackageNamespace(""),"PROPERTY_CHANGE")
         pushstring "propertyChange"
         initproperty QName(PackageNamespace(""),"PROPERTY_CHANGE")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var kind:String;
      
      public var newValue:Object;
      
      public var oldValue:Object;
      
      public var property:Object;
      
      public var source:Object;
      
      public function PropertyChangeEvent(param1:String, param2:Boolean = false, param3:Boolean = false, param4:String = null, param5:Object = null, param6:Object = null, param7:Object = null, param8:Object = null)
      {
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Object")
         optional False()
         optional False()
         optional Null()
         optional Null()
         optional Null()
         optional Null()
         optional Null()
         returns null
         
         body
         maxstack 4
         localcount 9
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         getlocal3
         constructsuper 3
         getlocal0
         getlocal 4
         initproperty QName(PackageNamespace(""),"kind")
         getlocal0
         getlocal 5
         initproperty QName(PackageNamespace(""),"property")
         getlocal0
         getlocal 6
         initproperty QName(PackageNamespace(""),"oldValue")
         getlocal0
         getlocal 7
         initproperty QName(PackageNamespace(""),"newValue")
         getlocal0
         getlocal 8
         initproperty QName(PackageNamespace(""),"source")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function createUpdateEvent(param1:Object, param2:Object, param3:Object, param4:Object) : PropertyChangeEvent
      {
         trait method QName(PackageNamespace(""),"createUpdateEvent")
         flag FINAL
         dispid 3
         method
         name null
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         
         body
         maxstack 2
         localcount 6
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getlex QName(PackageNamespace(""),"PROPERTY_CHANGE")
         construct 1
         coerce QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         dup
         setlocal 5
         getlex QName(PackageNamespace("mx.events"),"PropertyChangeEventKind")
         getproperty QName(PackageNamespace(""),"UPDATE")
         setproperty QName(PackageNamespace(""),"kind")
         getlocal 5
         getlocal3
         setproperty QName(PackageNamespace(""),"oldValue")
         getlocal 5
         getlocal 4
         setproperty QName(PackageNamespace(""),"newValue")
         getlocal 5
         getlocal1
         setproperty QName(PackageNamespace(""),"source")
         getlocal 5
         getlocal2
         setproperty QName(PackageNamespace(""),"property")
         getlocal 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function clone() : Event
      {
         trait method QName(PackageNamespace(""),"clone")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.events"),"Event")
         
         body
         maxstack 9
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         getlex QName(PackageNamespace(""),"type")
         getlex QName(PackageNamespace(""),"bubbles")
         getlex QName(PackageNamespace(""),"cancelable")
         getlocal0
         getproperty QName(PackageNamespace(""),"kind")
         getlocal0
         getproperty QName(PackageNamespace(""),"property")
         getlocal0
         getproperty QName(PackageNamespace(""),"oldValue")
         getlocal0
         getproperty QName(PackageNamespace(""),"newValue")
         getlocal0
         getproperty QName(PackageNamespace(""),"source")
         constructprop QName(PackageNamespace("mx.events"),"PropertyChangeEvent"), 8
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
