
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 4
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("ValidationResultEvent",[PackageNamespace("mx.events")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"Event")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"Event")
   newclass #ValidationResultEvent
   popscope
   popscope
   initproperty QName(PackageNamespace("mx.events"),"ValidationResultEvent")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.events
{
   import flash.events.Event;
   import mx.core.mx_internal;
   
   use namespace mx_internal;
   
   public class ValidationResultEvent extends Event
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      public static const INVALID:String = "invalid";
      
      public static const VALID:String = "valid";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         findproperty QName(PackageNamespace(""),"INVALID")
         pushstring "invalid"
         initproperty QName(PackageNamespace(""),"INVALID")
         findproperty QName(PackageNamespace(""),"VALID")
         pushstring "valid"
         initproperty QName(PackageNamespace(""),"VALID")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var field:String;
      
      public var results:Array;
      
      public function ValidationResultEvent(param1:String, param2:Boolean = false, param3:Boolean = false, param4:String = null, param5:Array = null)
      {
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Array")
         optional False()
         optional False()
         optional Null()
         optional Null()
         returns null
         
         body
         maxstack 4
         localcount 6
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         getlocal3
         constructsuper 3
         getlocal0
         getlocal 4
         initproperty QName(PackageNamespace(""),"field")
         getlocal0
         getlocal 5
         initproperty QName(PackageNamespace(""),"results")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get message() : String
      {
         trait getter QName(PackageNamespace(""),"message")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         pushstring ""
         setlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"results")
         getproperty QName(PackageNamespace(""),"length")
         convert_i
         setlocal2
         pushbyte 0
         setlocal3
         jump ofs0
         ofs1:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"results")
         getlocal3
         getproperty MultinameL([PrivateNamespace(null,"#ValidationResultEvent/1"),PackageNamespace(""),PrivateNamespace(null,"#ValidationResultEvent/2"),PackageNamespace("mx.events"),PackageInternalNs("mx.events"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.events:ValidationResultEvent"),StaticProtectedNs("mx.events:ValidationResultEvent"),StaticProtectedNs("flash.events:Event"),StaticProtectedNs("Object")])
         getproperty Multiname("isError",[PrivateNamespace(null,"#ValidationResultEvent/1"),PackageNamespace(""),PrivateNamespace(null,"#ValidationResultEvent/2"),PackageNamespace("mx.events"),PackageInternalNs("mx.events"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.events:ValidationResultEvent"),StaticProtectedNs("mx.events:ValidationResultEvent"),StaticProtectedNs("flash.events:Event"),StaticProtectedNs("Object")])
         iffalse ofs2
         getlocal1
         getlocal1
         pushstring ""
         equals
         iffalse ofs3
         pushstring ""
         coerce_a
         jump ofs4
         ofs3:
         pushstring "\n"
         coerce_a
         ofs4:
         add
         coerce_s
         setlocal1
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"results")
         getlocal3
         getproperty MultinameL([PrivateNamespace(null,"#ValidationResultEvent/1"),PackageNamespace(""),PrivateNamespace(null,"#ValidationResultEvent/2"),PackageNamespace("mx.events"),PackageInternalNs("mx.events"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.events:ValidationResultEvent"),StaticProtectedNs("mx.events:ValidationResultEvent"),StaticProtectedNs("flash.events:Event"),StaticProtectedNs("Object")])
         getproperty Multiname("errorMessage",[PrivateNamespace(null,"#ValidationResultEvent/1"),PackageNamespace(""),PrivateNamespace(null,"#ValidationResultEvent/2"),PackageNamespace("mx.events"),PackageInternalNs("mx.events"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.events:ValidationResultEvent"),StaticProtectedNs("mx.events:ValidationResultEvent"),StaticProtectedNs("flash.events:Event"),StaticProtectedNs("Object")])
         add
         coerce_s
         setlocal1
         ofs2:
         inclocal_i 3
         ofs0:
         getlocal3
         getlocal2
         iflt ofs1
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function clone() : Event
      {
         trait method QName(PackageNamespace(""),"clone")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.events"),"Event")
         
         body
         maxstack 6
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("mx.events"),"ValidationResultEvent")
         getlex QName(PackageNamespace(""),"type")
         getlex QName(PackageNamespace(""),"bubbles")
         getlex QName(PackageNamespace(""),"cancelable")
         getlocal0
         getproperty QName(PackageNamespace(""),"field")
         getlocal0
         getproperty QName(PackageNamespace(""),"results")
         constructprop QName(PackageNamespace("mx.events"),"ValidationResultEvent"), 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
