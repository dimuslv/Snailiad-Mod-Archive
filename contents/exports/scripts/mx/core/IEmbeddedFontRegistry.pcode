
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 2
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("IEmbeddedFontRegistry",[PackageNamespace("mx.core")])
   pushnull
   newclass #IEmbeddedFontRegistry
   initproperty QName(PackageNamespace("mx.core"),"IEmbeddedFontRegistry")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.core
{
   import mx.managers.ISystemManager;
   
   public interface IEmbeddedFontRegistry
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 0
         localcount 1
         initscopedepth 3
         maxscopedepth 3
         
         code
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      function registerFont(param1:EmbeddedFont, param2:IFlexModuleFactory) : void;
      
      function deregisterFont(param1:EmbeddedFont, param2:IFlexModuleFactory) : void;
      
      function isFontRegistered(param1:EmbeddedFont, param2:IFlexModuleFactory) : Boolean;
      
      function getAssociatedModuleFactory(param1:String, param2:Boolean, param3:Boolean, param4:Object, param5:IFlexModuleFactory, param6:ISystemManager, param7:* = undefined) : IFlexModuleFactory;
      
      function getFonts() : Array;
      
      function getFontStyle(param1:Boolean, param2:Boolean) : String;
   }
}
