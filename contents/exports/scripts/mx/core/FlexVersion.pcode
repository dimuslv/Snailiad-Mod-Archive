
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("FlexVersion",[PackageNamespace("mx.core")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #FlexVersion
   popscope
   initproperty QName(PackageNamespace("mx.core"),"FlexVersion")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.core
{
   import mx.resources.ResourceManager;
   
   use namespace mx_internal;
   
   public class FlexVersion
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      public static const CURRENT_VERSION:uint = 67108864;
      
      public static const VERSION_4_0:uint = 67108864;
      
      public static const VERSION_3_0:uint = 50331648;
      
      public static const VERSION_2_0_1:uint = 33554433;
      
      public static const VERSION_2_0:uint = 33554432;
      
      public static const VERSION_ALREADY_SET:String = "versionAlreadySet";
      
      public static const VERSION_ALREADY_READ:String = "versionAlreadyRead";
      
      private static var _compatibilityErrorFunction:Function;
      
      private static var _compatibilityVersion:uint = 67108864;
      
      private static var compatibilityVersionChanged:Boolean = false;
      
      private static var compatibilityVersionRead:Boolean = false;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         findproperty QName(PackageNamespace(""),"CURRENT_VERSION")
         pushint 67108864
         initproperty QName(PackageNamespace(""),"CURRENT_VERSION")
         findproperty QName(PackageNamespace(""),"VERSION_4_0")
         pushint 67108864
         initproperty QName(PackageNamespace(""),"VERSION_4_0")
         findproperty QName(PackageNamespace(""),"VERSION_3_0")
         pushint 50331648
         initproperty QName(PackageNamespace(""),"VERSION_3_0")
         findproperty QName(PackageNamespace(""),"VERSION_2_0_1")
         pushint 33554433
         initproperty QName(PackageNamespace(""),"VERSION_2_0_1")
         findproperty QName(PackageNamespace(""),"VERSION_2_0")
         pushint 33554432
         initproperty QName(PackageNamespace(""),"VERSION_2_0")
         findproperty QName(PackageNamespace(""),"VERSION_ALREADY_SET")
         pushstring "versionAlreadySet"
         initproperty QName(PackageNamespace(""),"VERSION_ALREADY_SET")
         findproperty QName(PackageNamespace(""),"VERSION_ALREADY_READ")
         pushstring "versionAlreadyRead"
         initproperty QName(PackageNamespace(""),"VERSION_ALREADY_READ")
         findproperty QName(PrivateNamespace(null,"#FlexVersion"),"_compatibilityVersion")
         getlex QName(PackageNamespace(""),"CURRENT_VERSION")
         setproperty QName(PrivateNamespace(null,"#FlexVersion"),"_compatibilityVersion")
         findproperty QName(PrivateNamespace(null,"#FlexVersion"),"compatibilityVersionChanged")
         pushfalse
         setproperty QName(PrivateNamespace(null,"#FlexVersion"),"compatibilityVersionChanged")
         findproperty QName(PrivateNamespace(null,"#FlexVersion"),"compatibilityVersionRead")
         pushfalse
         setproperty QName(PrivateNamespace(null,"#FlexVersion"),"compatibilityVersionRead")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function FlexVersion()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get compatibilityErrorFunction() : Function
      {
         trait getter QName(PackageNamespace(""),"compatibilityErrorFunction")
         flag FINAL
         dispid 3
         method
         name null
         returns QName(PackageNamespace(""),"Function")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#FlexVersion"),"_compatibilityErrorFunction")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function set compatibilityErrorFunction(param1:Function) : void
      {
         trait setter QName(PackageNamespace(""),"compatibilityErrorFunction")
         flag FINAL
         dispid 4
         method
         name null
         param QName(PackageNamespace(""),"Function")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#FlexVersion"),"_compatibilityErrorFunction")
         getlocal1
         setproperty QName(PrivateNamespace(null,"#FlexVersion"),"_compatibilityErrorFunction")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get compatibilityVersion() : uint
      {
         trait getter QName(PackageNamespace(""),"compatibilityVersion")
         flag FINAL
         dispid 5
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#FlexVersion"),"compatibilityVersionRead")
         pushtrue
         setproperty QName(PrivateNamespace(null,"#FlexVersion"),"compatibilityVersionRead")
         getlex QName(PrivateNamespace(null,"#FlexVersion"),"_compatibilityVersion")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function set compatibilityVersion(param1:uint) : void
      {
         trait setter QName(PackageNamespace(""),"compatibilityVersion")
         flag FINAL
         dispid 6
         method
         name null
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce_s
         setlocal2
         getlocal1
         getlex QName(PrivateNamespace(null,"#FlexVersion"),"_compatibilityVersion")
         ifne ofs0
         returnvoid
         ofs0:
         getlex QName(PrivateNamespace(null,"#FlexVersion"),"compatibilityVersionChanged")
         iffalse ofs1
         getlex QName(PackageNamespace(""),"compatibilityErrorFunction")
         pushnull
         ifne ofs2
         getlex QName(PackageNamespace("mx.resources"),"ResourceManager")
         callproperty QName(PackageNamespace(""),"getInstance"), 0
         pushstring "core"
         getlex QName(PackageNamespace(""),"VERSION_ALREADY_SET")
         callproperty QName(Namespace("mx.resources:IResourceManager"),"getString"), 2
         coerce_s
         setlocal2
         findpropstrict QName(PackageNamespace(""),"Error")
         getlocal2
         constructprop QName(PackageNamespace(""),"Error"), 1
         throw
         ofs2:
         findpropstrict QName(PackageNamespace(""),"compatibilityErrorFunction")
         getlocal1
         getlex QName(PackageNamespace(""),"VERSION_ALREADY_SET")
         callpropvoid QName(PackageNamespace(""),"compatibilityErrorFunction"), 2
         ofs1:
         getlex QName(PrivateNamespace(null,"#FlexVersion"),"compatibilityVersionRead")
         iffalse ofs3
         getlex QName(PackageNamespace(""),"compatibilityErrorFunction")
         pushnull
         ifne ofs4
         getlex QName(PackageNamespace("mx.resources"),"ResourceManager")
         callproperty QName(PackageNamespace(""),"getInstance"), 0
         pushstring "core"
         getlex QName(PackageNamespace(""),"VERSION_ALREADY_READ")
         callproperty QName(Namespace("mx.resources:IResourceManager"),"getString"), 2
         coerce_s
         setlocal2
         findpropstrict QName(PackageNamespace(""),"Error")
         getlocal2
         constructprop QName(PackageNamespace(""),"Error"), 1
         throw
         ofs4:
         findpropstrict QName(PackageNamespace(""),"compatibilityErrorFunction")
         getlocal1
         getlex QName(PackageNamespace(""),"VERSION_ALREADY_READ")
         callpropvoid QName(PackageNamespace(""),"compatibilityErrorFunction"), 2
         ofs3:
         findproperty QName(PrivateNamespace(null,"#FlexVersion"),"_compatibilityVersion")
         getlocal1
         setproperty QName(PrivateNamespace(null,"#FlexVersion"),"_compatibilityVersion")
         findproperty QName(PrivateNamespace(null,"#FlexVersion"),"compatibilityVersionChanged")
         pushtrue
         setproperty QName(PrivateNamespace(null,"#FlexVersion"),"compatibilityVersionChanged")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get compatibilityVersionString() : String
      {
         trait getter QName(PackageNamespace(""),"compatibilityVersionString")
         flag FINAL
         dispid 7
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"compatibilityVersion")
         pushbyte 24
         rshift
         pushshort 255
         bitand
         convert_u
         setlocal1
         getlex QName(PackageNamespace(""),"compatibilityVersion")
         pushbyte 16
         rshift
         pushshort 255
         bitand
         convert_u
         setlocal2
         getlex QName(PackageNamespace(""),"compatibilityVersion")
         pushint 65535
         bitand
         convert_u
         setlocal3
         getlocal1
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         pushstring "."
         add
         getlocal2
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "."
         add
         getlocal3
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function set compatibilityVersionString(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"compatibilityVersionString")
         flag FINAL
         dispid 8
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 6
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         pushstring "."
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"split"), 1
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         findpropstrict QName(PackageNamespace(""),"parseInt")
         getlocal2
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"#FlexVersion"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#FlexVersion/1"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),ProtectedNamespace("mx.core:FlexVersion"),StaticProtectedNs("mx.core:FlexVersion"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"parseInt"), 1
         convert_u
         setlocal3
         findpropstrict QName(PackageNamespace(""),"parseInt")
         getlocal2
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"#FlexVersion"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#FlexVersion/1"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),ProtectedNamespace("mx.core:FlexVersion"),StaticProtectedNs("mx.core:FlexVersion"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"parseInt"), 1
         convert_u
         setlocal 4
         findpropstrict QName(PackageNamespace(""),"parseInt")
         getlocal2
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"#FlexVersion"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#FlexVersion/1"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),ProtectedNamespace("mx.core:FlexVersion"),StaticProtectedNs("mx.core:FlexVersion"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"parseInt"), 1
         convert_u
         setlocal 5
         findproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlocal3
         pushbyte 24
         lshift
         getlocal 4
         pushbyte 16
         lshift
         add
         getlocal 5
         add
         setproperty QName(PackageNamespace(""),"compatibilityVersion")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal static function changeCompatibilityVersionString(param1:String) : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"changeCompatibilityVersionString")
         flag FINAL
         dispid 9
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 6
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         pushstring "."
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"split"), 1
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         findpropstrict QName(PackageNamespace(""),"parseInt")
         getlocal2
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"#FlexVersion"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#FlexVersion/1"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),ProtectedNamespace("mx.core:FlexVersion"),StaticProtectedNs("mx.core:FlexVersion"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"parseInt"), 1
         convert_u
         setlocal3
         findpropstrict QName(PackageNamespace(""),"parseInt")
         getlocal2
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"#FlexVersion"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#FlexVersion/1"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),ProtectedNamespace("mx.core:FlexVersion"),StaticProtectedNs("mx.core:FlexVersion"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"parseInt"), 1
         convert_u
         setlocal 4
         findpropstrict QName(PackageNamespace(""),"parseInt")
         getlocal2
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"#FlexVersion"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"#FlexVersion/1"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),ProtectedNamespace("mx.core:FlexVersion"),StaticProtectedNs("mx.core:FlexVersion"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"parseInt"), 1
         convert_u
         setlocal 5
         findproperty QName(PrivateNamespace(null,"#FlexVersion"),"_compatibilityVersion")
         getlocal3
         pushbyte 24
         lshift
         getlocal 4
         pushbyte 16
         lshift
         add
         getlocal 5
         add
         setproperty QName(PrivateNamespace(null,"#FlexVersion"),"_compatibilityVersion")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
