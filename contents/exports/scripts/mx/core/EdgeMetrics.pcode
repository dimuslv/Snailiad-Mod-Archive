
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("EdgeMetrics",[PackageNamespace("mx.core")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #EdgeMetrics
   popscope
   initproperty QName(PackageNamespace("mx.core"),"EdgeMetrics")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.core
{
   use namespace mx_internal;
   
   public class EdgeMetrics
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      public static const EMPTY:EdgeMetrics;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 6
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         findproperty QName(PackageNamespace(""),"EMPTY")
         getlocal0
         pushbyte 0
         dup
         dup
         pushbyte 0
         construct 4
         initproperty QName(PackageNamespace(""),"EMPTY")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var bottom:Number;
      
      public var left:Number;
      
      public var right:Number;
      
      public var top:Number;
      
      public function EdgeMetrics(param1:Number = 0, param2:Number = 0, param3:Number = 0, param4:Number = 0)
      {
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         optional Integer(0)
         optional Integer(0)
         optional Integer(0)
         optional Integer(0)
         returns null
         
         body
         maxstack 2
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         getlocal0
         getlocal1
         initproperty QName(PackageNamespace(""),"left")
         getlocal0
         getlocal2
         initproperty QName(PackageNamespace(""),"top")
         getlocal0
         getlocal3
         initproperty QName(PackageNamespace(""),"right")
         getlocal0
         getlocal 4
         initproperty QName(PackageNamespace(""),"bottom")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function clone() : EdgeMetrics
      {
         trait method QName(PackageNamespace(""),"clone")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.core"),"EdgeMetrics")
         
         body
         maxstack 5
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("mx.core"),"EdgeMetrics")
         getlocal0
         getproperty QName(PackageNamespace(""),"left")
         getlocal0
         getproperty QName(PackageNamespace(""),"top")
         getlocal0
         getproperty QName(PackageNamespace(""),"right")
         getlocal0
         getproperty QName(PackageNamespace(""),"bottom")
         constructprop QName(PackageNamespace("mx.core"),"EdgeMetrics"), 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
