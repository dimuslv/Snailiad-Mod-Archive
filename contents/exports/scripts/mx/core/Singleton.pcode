
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("Singleton",[PackageNamespace("mx.core")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #Singleton
   popscope
   initproperty QName(PackageNamespace("mx.core"),"Singleton")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.core
{
   use namespace mx_internal;
   
   public class Singleton
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      private static var classMap:Object;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         findproperty QName(PrivateNamespace(null,"#Singleton"),"classMap")
         newobject 0
         setproperty QName(PrivateNamespace(null,"#Singleton"),"classMap")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function Singleton()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function registerClass(param1:String, param2:Class) : void
      {
         trait method QName(PackageNamespace(""),"registerClass")
         flag FINAL
         dispid 3
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Class")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#Singleton"),"classMap")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"#Singleton"),PrivateNamespace(null,"#Singleton/1"),PackageNamespace(""),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:Singleton"),StaticProtectedNs("mx.core:Singleton"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Class")
         setlocal3
         getlocal3
         iftrue ofs0
         getlex QName(PrivateNamespace(null,"#Singleton"),"classMap")
         getlocal1
         getlocal2
         setproperty MultinameL([PrivateNamespace(null,"#Singleton"),PrivateNamespace(null,"#Singleton/1"),PackageNamespace(""),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:Singleton"),StaticProtectedNs("mx.core:Singleton"),StaticProtectedNs("Object")])
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function getClass(param1:String) : Class
      {
         trait method QName(PackageNamespace(""),"getClass")
         flag FINAL
         dispid 4
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Class")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#Singleton"),"classMap")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"#Singleton"),PrivateNamespace(null,"#Singleton/1"),PackageNamespace(""),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:Singleton"),StaticProtectedNs("mx.core:Singleton"),StaticProtectedNs("Object")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getInstance(param1:String) : Object
      {
         trait method QName(PackageNamespace(""),"getInstance")
         flag FINAL
         dispid 5
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#Singleton"),"classMap")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"#Singleton"),PrivateNamespace(null,"#Singleton/1"),PackageNamespace(""),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:Singleton"),StaticProtectedNs("mx.core:Singleton"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Class")
         setlocal2
         getlocal2
         iftrue ofs0
         findpropstrict QName(PackageNamespace(""),"Error")
         pushstring "No class registered for interface \'"
         getlocal1
         add
         pushstring "\'."
         add
         constructprop QName(PackageNamespace(""),"Error"), 1
         throw
         ofs0:
         getlocal2
         dup
         setlocal3
         pushstring "getInstance"
         getproperty MultinameL([PrivateNamespace(null,"#Singleton"),PrivateNamespace(null,"#Singleton/1"),PackageNamespace(""),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:Singleton"),StaticProtectedNs("mx.core:Singleton"),StaticProtectedNs("Object")])
         getlocal3
         call 0
         kill 3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
