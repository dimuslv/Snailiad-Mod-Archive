
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("LayoutDirection",[PackageNamespace("mx.core")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #LayoutDirection
   popscope
   initproperty QName(PackageNamespace("mx.core"),"LayoutDirection")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.core
{
   use namespace mx_internal;
   
   public final class LayoutDirection
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      public static const LTR:String = "ltr";
      
      public static const RTL:String = "rtl";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         findproperty QName(PackageNamespace(""),"LTR")
         pushstring "ltr"
         initproperty QName(PackageNamespace(""),"LTR")
         findproperty QName(PackageNamespace(""),"RTL")
         pushstring "rtl"
         initproperty QName(PackageNamespace(""),"RTL")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function LayoutDirection()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
