
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("ResourceBundle",[PackageNamespace("mx.resources")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #ResourceBundle
   popscope
   initproperty QName(PackageNamespace("mx.resources"),"ResourceBundle")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.resources
{
   import flash.system.ApplicationDomain;
   import mx.core.mx_internal;
   
   use namespace mx_internal;
   
   public class ResourceBundle implements IResourceBundle
   {
      
      mx_internal static const VERSION:String = "4.1.0.0";
      
      mx_internal static var locale:String;
      
      mx_internal static var backupApplicationDomain:ApplicationDomain;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.0"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal var _bundleName:String;
      
      private var _content:Object;
      
      mx_internal var _locale:String;
      
      public function ResourceBundle(param1:String = null, param2:String = null)
      {
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"String")
         optional Null()
         optional Null()
         returns null
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         newobject 0
         initproperty QName(PrivateNamespace(null,"#ResourceBundle"),"_content")
         getlocal0
         constructsuper 0
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_locale")
         getlocal0
         getlocal2
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_bundleName")
         getlocal0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.resources:ResourceBundle"),"getContent"), 0
         initproperty QName(PrivateNamespace(null,"#ResourceBundle"),"_content")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private static function getClassByName(param1:String, param2:ApplicationDomain) : Class
      {
         trait method QName(PrivateNamespace(null,"#ResourceBundle"),"getClassByName")
         flag FINAL
         dispid 3
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace("flash.system"),"ApplicationDomain")
         returns QName(PackageNamespace(""),"Class")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"Class")
         setlocal3
         getlocal2
         getlocal1
         callproperty QName(PackageNamespace(""),"hasDefinition"), 1
         iffalse ofs0
         getlocal2
         getlocal1
         callproperty QName(PackageNamespace(""),"getDefinition"), 1
         getlex QName(PackageNamespace(""),"Class")
         astypelate
         coerce QName(PackageNamespace(""),"Class")
         setlocal3
         ofs0:
         getlocal3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get bundleName() : String
      {
         trait getter QName(PackageNamespace(""),"bundleName")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_bundleName")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get content() : Object
      {
         trait getter QName(PackageNamespace(""),"content")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#ResourceBundle"),"_content")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get locale() : String
      {
         trait getter QName(PackageNamespace(""),"locale")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_locale")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function getContent() : Object
      {
         trait method QName(ProtectedNamespace("mx.resources:ResourceBundle"),"getContent")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         newobject 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function _getObject(param1:String) : Object
      {
         trait method QName(PrivateNamespace(null,"#ResourceBundle"),"_getObject")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"content")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"#ResourceBundle"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace(""),ProtectedNamespace("mx.resources:ResourceBundle"),PrivateNamespace(null,"#ResourceBundle/1"),PackageNamespace("mx.resources"),PackageInternalNs("mx.resources"),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("mx.resources:ResourceBundle"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         setlocal2
         getlocal2
         iftrue ofs0
         findpropstrict QName(PackageNamespace(""),"Error")
         pushstring "Key "
         getlocal1
         add
         pushstring " was not found in resource bundle "
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"bundleName")
         add
         constructprop QName(PackageNamespace(""),"Error"), 1
         throw
         ofs0:
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
