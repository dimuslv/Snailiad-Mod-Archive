
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 4
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("SaturationShader",[PackageNamespace("mx.graphics.shaderClasses")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"Shader")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"Shader")
   newclass #SaturationShader
   popscope
   popscope
   initproperty QName(PackageNamespace("mx.graphics.shaderClasses"),"SaturationShader")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package mx.graphics.shaderClasses
{
   import flash.display.Shader;
   
   public class SaturationShader extends Shader
   {
      
      private static var ShaderClass:Class;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#SaturationShader"),"ShaderClass")
         getlex QName(PackageNamespace("mx.graphics.shaderClasses"),"SaturationShader_ShaderClass")
         setproperty QName(PrivateNamespace(null,"#SaturationShader"),"ShaderClass")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function SaturationShader()
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         findpropstrict QName(PrivateNamespace(null,"#SaturationShader"),"ShaderClass")
         constructprop QName(PrivateNamespace(null,"#SaturationShader"),"ShaderClass"), 0
         constructsuper 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
