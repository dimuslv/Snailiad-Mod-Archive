
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("EnemyBlob4",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   newclass #EnemyBlob4
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"EnemyBlob4")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   import org.flixel.FlxObject;
   
   public class EnemyBlob4 extends Enemy
   {
      
      private static const IMG_WIDTH:int = 16;
      
      private static const IMG_HEIGHT:int = 16;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 0;
      
      private static const MAX_HP:int = 1800;
      
      private static const DEFENSE:int = 30;
      
      private static const OFFENSE:int = 8;
      
      private static const HOP_TIMEOUTS:Array;
      
      private static const HOP_HEIGHT:Array;
      
      private static const SHOT_TIMEOUT:Number = 4.0;
      
      private static const SHOT_NUM:int = 4;
      
      private static const CLUSTER_NUM:int = 1;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 10
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"IMG_WIDTH")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"IMG_WIDTH")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"IMG_HEIGHT")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"IMG_HEIGHT")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"IMG_OFS_X")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"IMG_OFS_X")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"IMG_OFS_Y")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"IMG_OFS_Y")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"MAX_HP")
         pushshort 1800
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"MAX_HP")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"DEFENSE")
         pushbyte 30
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"DEFENSE")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"OFFENSE")
         pushbyte 8
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"OFFENSE")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"HOP_TIMEOUTS")
         pushdouble 0.4
         pushdouble 0.5
         pushdouble 1.6
         pushdouble 0.4
         pushdouble 0.9
         pushdouble 1.1
         pushdouble 0.9
         pushdouble 0.5
         pushdouble 0.9
         newarray 9
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"HOP_TIMEOUTS")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"HOP_HEIGHT")
         pushdouble 0.2
         pushdouble 0.3
         pushbyte 3
         pushdouble 0.2
         pushdouble 1.6
         pushdouble 0.4
         pushdouble 2.5
         pushdouble 2.7
         pushdouble 0.5
         newarray 9
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"HOP_HEIGHT")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"SHOT_TIMEOUT")
         pushbyte 4
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"SHOT_TIMEOUT")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"SHOT_NUM")
         pushbyte 4
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"SHOT_NUM")
         findproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"CLUSTER_NUM")
         pushbyte 1
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"CLUSTER_NUM")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var hopNum:int = 0;
      
      private var hopTimeout:Number = 0;
      
      private var shotTimeout:Number = 0;
      
      public function EnemyBlob4(param1:int, param2:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 28
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"MAX_HP")
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"DEFENSE")
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"OFFENSE")
         constructsuper 5
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"EnemyBlob")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         getlocal1
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"IMG_OFS_X")
         subtract
         convert_i
         setlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"IMG_OFS_Y")
         subtract
         convert_i
         setlocal2
         getlocal0
         getlocal1
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"HOP_TIMEOUTS")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"hopNum")
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"HOP_TIMEOUTS")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"hopNum")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBlob4"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBlob4/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBlob4"),StaticProtectedNs("EnemyBlob4"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"hopTimeout")
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         pushbyte 12
         newarray 1
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 2
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "quiver"
         pushbyte 12
         pushbyte 13
         pushbyte 14
         pushbyte 15
         pushbyte 12
         pushbyte 13
         pushbyte 14
         pushbyte 15
         pushbyte 12
         dup
         pushbyte 13
         dup
         pushbyte 14
         dup
         pushbyte 15
         dup
         pushbyte 12
         dup
         dup
         pushbyte 13
         dup
         dup
         pushbyte 14
         dup
         dup
         pushbyte 15
         newarray 26
         pushbyte 12
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"SHOT_TIMEOUT")
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"shotTimeout")
         getlex QName(PackageNamespace(""),"acceleration")
         pushshort 1200
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"touch"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 5
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushbyte 0
         setlocal1
         pushnull
         coerce QName(PackageNamespace(""),"EnemyBulletRotaryPea")
         setlocal2
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         findpropstrict QName(PackageNamespace(""),"onScreen")
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         iffalse ofs1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"hopTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"hopTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"hopTimeout")
         pushbyte 0
         ifnlt ofs2
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         ifngt ofs3
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte -100
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         pushshort -200
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"HOP_HEIGHT")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"hopNum")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBlob4"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBlob4/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBlob4"),StaticProtectedNs("EnemyBlob4"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         multiply
         setproperty QName(PackageNamespace(""),"y")
         jump ofs4
         ofs3:
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 100
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         pushshort -200
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"HOP_HEIGHT")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"hopNum")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBlob4"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBlob4/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBlob4"),StaticProtectedNs("EnemyBlob4"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         multiply
         setproperty QName(PackageNamespace(""),"y")
         ofs4:
         getlocal0
         dup
         setlocal3
         getproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"hopNum")
         increment_i
         setlocal 4
         getlocal3
         getlocal 4
         setproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"hopNum")
         kill 4
         kill 3
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"hopNum")
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"HOP_TIMEOUTS")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"hopNum")
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"HOP_TIMEOUTS")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"hopNum")
         getproperty MultinameL([PrivateNamespace(null,"#EnemyBlob4"),PackageNamespace(""),PrivateNamespace(null,"#EnemyBlob4/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemyBlob4"),StaticProtectedNs("EnemyBlob4"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"hopTimeout")
         ofs2:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"shotTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"shotTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"shotTimeout")
         pushbyte 0
         ifnle ofs1
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"SHOT_TIMEOUT")
         initproperty QName(PrivateNamespace(null,"#EnemyBlob4"),"shotTimeout")
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playShot7"), 0
         pushbyte 0
         setlocal1
         jump ofs5
         ofs6:
         label
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"enemyBulletPool")
         pushbyte 7
         callproperty QName(PackageNamespace(""),"getBullet"), 1
         getlex QName(PackageNamespace(""),"EnemyBulletRotaryPea")
         astypelate
         coerce QName(PackageNamespace(""),"EnemyBulletRotaryPea")
         setlocal2
         getlocal2
         iffalse ofs7
         getlocal2
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         pushbyte 2
         divide
         add
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         pushbyte 2
         divide
         add
         pushbyte 60
         pushbyte 4
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         pushbyte 2
         multiply
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"SHOT_NUM")
         divide
         getlocal1
         multiply
         callpropvoid QName(PackageNamespace(""),"shootRotary"), 5
         ofs7:
         inclocal_i 1
         ofs5:
         getlocal1
         getlex QName(PrivateNamespace(null,"#EnemyBlob4"),"SHOT_NUM")
         iflt ofs6
         ofs1:
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifnlt ofs8
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs8:
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifngt ofs9
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs9:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitBottom(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitBottom")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushdouble -0.1
         multiply
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte -5
         ifnle ofs0
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "quiver"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitSide(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitSide")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte -1
         multiply
         setproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "quiver"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hurt(param1:Number) : void
      {
         trait method QName(PackageNamespace(""),"hurt")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"hurt"), 1
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "quiver"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
