
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("Muck",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace(""),"Item")
   pushscope
   getlex QName(PackageNamespace(""),"Item")
   newclass #Muck
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"Muck")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   public class Muck extends Item
   {
      
      private static const IMG_WIDTH:int = 16;
      
      private static const IMG_HEIGHT:int = 16;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 0;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#Muck"),"IMG_WIDTH")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#Muck"),"IMG_WIDTH")
         findproperty QName(PrivateNamespace(null,"#Muck"),"IMG_HEIGHT")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#Muck"),"IMG_HEIGHT")
         findproperty QName(PrivateNamespace(null,"#Muck"),"IMG_OFS_X")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#Muck"),"IMG_OFS_X")
         findproperty QName(PrivateNamespace(null,"#Muck"),"IMG_OFS_Y")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#Muck"),"IMG_OFS_Y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _collidedThisFrame:Boolean;
      
      public function Muck(param1:int, param2:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 12
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal1
         getlex QName(PrivateNamespace(null,"#Muck"),"IMG_OFS_X")
         subtract
         convert_i
         setlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#Muck"),"IMG_OFS_Y")
         subtract
         convert_i
         setlocal2
         getlocal0
         getlocal1
         getlocal2
         pushfalse
         constructsuper 3
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"Muck")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"#Muck"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"#Muck"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"#Muck"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"#Muck"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "anim"
         pushbyte 0
         getlocal1
         pushbyte 16
         divide
         add
         pushbyte 16
         modulo
         pushbyte 2
         getlocal1
         pushbyte 16
         divide
         add
         pushbyte 16
         modulo
         pushbyte 4
         getlocal1
         pushbyte 16
         divide
         add
         pushbyte 16
         modulo
         pushbyte 6
         getlocal1
         pushbyte 16
         divide
         add
         pushbyte 16
         modulo
         pushbyte 8
         getlocal1
         pushbyte 16
         divide
         add
         pushbyte 16
         modulo
         pushbyte 10
         getlocal1
         pushbyte 16
         divide
         add
         pushbyte 16
         modulo
         pushbyte 12
         getlocal1
         pushbyte 16
         divide
         add
         pushbyte 16
         modulo
         pushbyte 14
         getlocal1
         pushbyte 16
         divide
         add
         pushbyte 16
         modulo
         newarray 8
         pushbyte 4
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 3
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "anim"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#Muck"),"_collidedThisFrame")
         findproperty QName(PackageNamespace(""),"active")
         pushtrue
         initproperty QName(PackageNamespace(""),"active")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#Muck"),"_collidedThisFrame")
         iffalse ofs0
         returnvoid
         ofs0:
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#Muck"),"_collidedThisFrame")
         getlocal1
         callproperty QName(PackageNamespace(""),"hasArmor"), 0
         iffalse ofs1
         jump ofs2
         ofs1:
         getlocal1
         pushbyte 3
         callpropvoid QName(PackageNamespace(""),"hurt"), 1
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#Muck"),"_collidedThisFrame")
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
