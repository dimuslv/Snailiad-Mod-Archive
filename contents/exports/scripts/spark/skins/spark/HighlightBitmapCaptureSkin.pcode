
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 10
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("HighlightBitmapCaptureSkin",[PackageNamespace("spark.skins.spark")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"EventDispatcher")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"DisplayObject")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"InteractiveObject")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"Sprite")
   pushscope
   getlex QName(PackageNamespace("mx.core"),"FlexSprite")
   pushscope
   getlex QName(PackageNamespace("mx.core"),"UIComponent")
   pushscope
   getlex QName(PackageNamespace("mx.core"),"UIComponent")
   newclass #HighlightBitmapCaptureSkin
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace("spark.skins.spark"),"HighlightBitmapCaptureSkin")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package spark.skins.spark
{
   import flash.display.Bitmap;
   import flash.display.BitmapData;
   import flash.display.IBitmapDrawable;
   import flash.events.Event;
   import flash.geom.ColorTransform;
   import flash.geom.Matrix;
   import flash.geom.Matrix3D;
   import flash.geom.Rectangle;
   import mx.core.UIComponent;
   import mx.core.mx_internal;
   import mx.events.FlexEvent;
   import spark.components.supportClasses.Skin;
   import spark.components.supportClasses.SkinnableComponent;
   
   use namespace mx_internal;
   
   public class HighlightBitmapCaptureSkin extends UIComponent
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      private static var capturingBitmap:Boolean = false;
      
      private static var colorTransform:ColorTransform;
      
      private static var rect:Rectangle;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 6
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         findproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"capturingBitmap")
         pushfalse
         setproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"capturingBitmap")
         findproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"colorTransform")
         findpropstrict QName(PackageNamespace("flash.geom"),"ColorTransform")
         pushdouble 1.01
         pushdouble 1.01
         pushdouble 1.01
         pushbyte 2
         constructprop QName(PackageNamespace("flash.geom"),"ColorTransform"), 4
         setproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"colorTransform")
         findproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"rect")
         findpropstrict QName(PackageNamespace("flash.geom"),"Rectangle")
         constructprop QName(PackageNamespace("flash.geom"),"Rectangle"), 0
         setproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"rect")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected var bitmap:Bitmap;
      
      private var _target:SkinnableComponent;
      
      public function HighlightBitmapCaptureSkin()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get target() : SkinnableComponent
      {
         trait getter QName(PackageNamespace(""),"target")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("spark.components.supportClasses"),"SkinnableComponent")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"_target")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set target(param1:SkinnableComponent) : void
      {
         trait setter QName(PackageNamespace(""),"target")
         dispid 0
         method
         name null
         param QName(PackageNamespace("spark.components.supportClasses"),"SkinnableComponent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 2
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"_target")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"_target")
         getproperty QName(PackageNamespace(""),"skin")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"_target")
         getproperty QName(PackageNamespace(""),"skin")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"UPDATE_COMPLETE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"skin_updateCompleteHandler")
         pushfalse
         pushbyte 0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 5
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function get borderWeight() : Number
      {
         trait getter QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"borderWeight")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         pushbyte 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override protected function updateDisplayList(param1:Number, param2:Number) : void
      {
         trait method QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"updateDisplayList")
         flag OVERRIDE
         dispid 0
         method
         name null
         flag NEED_ACTIVATION
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 5
         initscopedepth 12
         maxscopedepth 17
         trait slot QName(PackageInternalNs("spark.skins.spark"),"unscaledWidth")
         slotid 1
         type QName(PackageNamespace(""),"Number")
         end ; trait
         trait slot QName(PackageInternalNs("spark.skins.spark"),"unscaledHeight")
         slotid 2
         type QName(PackageNamespace(""),"Number")
         end ; trait
         trait slot QName(PackageInternalNs("spark.skins.spark"),"bitmapData")
         slotid 3
         type QName(PackageNamespace("flash.display"),"BitmapData")
         end ; trait
         trait slot QName(PackageInternalNs("spark.skins.spark"),"m")
         slotid 4
         type QName(PackageNamespace("flash.geom"),"Matrix")
         end ; trait
         trait slot QName(PackageInternalNs("spark.skins.spark"),"transform3D")
         slotid 5
         type QName(PackageNamespace("flash.geom"),"Matrix3D")
         end ; trait
         trait slot QName(PackageInternalNs("spark.skins.spark"),"needUpdate")
         slotid 6
         type QName(PackageNamespace(""),"Boolean")
         end ; trait
         trait slot QName(PackageInternalNs("spark.skins.spark"),"skin")
         slotid 7
         type QName(PackageNamespace("spark.components.supportClasses"),"Skin")
         end ; trait
         trait slot QName(PackageInternalNs("spark.skins.spark"),"fillRect")
         slotid 8
         type QName(PackageNamespace("flash.geom"),"Rectangle")
         end ; trait
         
         code
         getlocal0
         pushscope
         newactivation
         dup
         setlocal3
         pushscope
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace("flash.display"),"BitmapData")
         setslot 3
         getscopeobject 1
         pushfalse
         setslot 6
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace("spark.components.supportClasses"),"Skin")
         setslot 7
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Rectangle")
         setslot 8
         getscopeobject 1
         getlocal1
         setslot 1
         getscopeobject 1
         getlocal2
         setslot 2
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         iftrue ofs0
         returnvoid
         ofs0:
         getscopeobject 1
         findpropstrict QName(PackageNamespace("flash.display"),"BitmapData")
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         getproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"borderWeight")
         pushbyte 2
         multiply
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         getproperty QName(PackageNamespace(""),"height")
         getlocal0
         getproperty QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"borderWeight")
         pushbyte 2
         multiply
         add
         pushtrue
         pushbyte 0
         constructprop QName(PackageNamespace("flash.display"),"BitmapData"), 4
         coerce QName(PackageNamespace("flash.display"),"BitmapData")
         setslot 3
         getscopeobject 1
         findpropstrict QName(PackageNamespace("flash.geom"),"Matrix")
         constructprop QName(PackageNamespace("flash.geom"),"Matrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         setslot 4
         findproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"capturingBitmap")
         pushtrue
         setproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"capturingBitmap")
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix3D")
         setslot 5
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$transform")
         getproperty QName(PackageNamespace(""),"matrix3D")
         iffalse ofs1
         getscopeobject 1
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$transform")
         getproperty QName(PackageNamespace(""),"matrix3D")
         coerce QName(PackageNamespace("flash.geom"),"Matrix3D")
         setslot 5
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$transform")
         pushnull
         setproperty QName(PackageNamespace(""),"matrix3D")
         ofs1:
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"focusObj")
         iffalse ofs2
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"focusObj")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         ofs2:
         getscopeobject 1
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         getproperty QName(PackageNamespace(""),"skin")
         getlex QName(PackageNamespace("spark.components.supportClasses"),"Skin")
         astypelate
         coerce QName(PackageNamespace("spark.components.supportClasses"),"Skin")
         setslot 7
         getscopeobject 1
         getslot 7
         iffalse ofs3
         getscopeobject 1
         getscopeobject 1
         getslot 7
         callproperty QName(PackageNamespace(""),"beginHighlightBitmapCapture"), 0
         convert_b
         setslot 6
         getscopeobject 1
         getslot 6
         iffalse ofs3
         getscopeobject 1
         getslot 7
         callpropvoid QName(PackageNamespace(""),"validateNow"), 0
         ofs3:
         getscopeobject 1
         getslot 4
         getlocal0
         getproperty QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"borderWeight")
         setproperty QName(PackageNamespace(""),"tx")
         getscopeobject 1
         getslot 4
         getlocal0
         getproperty QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"borderWeight")
         setproperty QName(PackageNamespace(""),"ty")
         ofs4:
         getscopeobject 1
         getslot 3
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         getlex QName(PackageNamespace("flash.display"),"IBitmapDrawable")
         astypelate
         getscopeobject 1
         getslot 4
         callpropvoid QName(PackageNamespace(""),"draw"), 2
         ofs5:
         jump ofs6
         ofs7:
         getlocal0
         pushscope
         getlocal3
         pushscope
         newcatch 0
         dup
         setlocal 4
         dup
         pushscope
         swap
         setslot 1
         getscopeobject 1
         getslot 7
         iffalse ofs8
         getscopeobject 1
         findpropstrict QName(PackageNamespace("flash.geom"),"Rectangle")
         getscopeobject 1
         getslot 7
         getproperty QName(PackageNamespace(""),"x")
         getscopeobject 1
         getslot 7
         getproperty QName(PackageNamespace(""),"y")
         getscopeobject 1
         getslot 7
         getproperty QName(PackageNamespace(""),"width")
         getscopeobject 1
         getslot 7
         getproperty QName(PackageNamespace(""),"height")
         constructprop QName(PackageNamespace("flash.geom"),"Rectangle"), 4
         coerce QName(PackageNamespace("flash.geom"),"Rectangle")
         setslot 8
         jump ofs9
         ofs8:
         getscopeobject 1
         findpropstrict QName(PackageNamespace("flash.geom"),"Rectangle")
         getlex QName(PackageNamespace(""),"target")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"target")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"target")
         getproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"target")
         getproperty QName(PackageNamespace(""),"height")
         constructprop QName(PackageNamespace("flash.geom"),"Rectangle"), 4
         coerce QName(PackageNamespace("flash.geom"),"Rectangle")
         setslot 8
         ofs9:
         getscopeobject 1
         getslot 3
         getscopeobject 1
         getslot 8
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"fillRect"), 2
         popscope
         kill 4
         ofs6:
         getscopeobject 1
         getslot 7
         iffalse ofs10
         getscopeobject 1
         getscopeobject 1
         getslot 7
         callproperty QName(PackageNamespace(""),"endHighlightBitmapCapture"), 0
         convert_b
         setslot 6
         getscopeobject 1
         getslot 6
         iffalse ofs10
         getscopeobject 1
         getslot 7
         callpropvoid QName(PackageNamespace(""),"validateNow"), 0
         ofs10:
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"focusObj")
         iffalse ofs11
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"focusObj")
         pushtrue
         setproperty QName(PackageNamespace(""),"visible")
         ofs11:
         getlex QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"rect")
         getlex QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"rect")
         getlocal0
         getproperty QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"borderWeight")
         dup
         setlocal 4
         setproperty QName(PackageNamespace(""),"y")
         getlocal 4
         kill 4
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"rect")
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         getproperty QName(PackageNamespace(""),"width")
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"rect")
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         getproperty QName(PackageNamespace(""),"height")
         setproperty QName(PackageNamespace(""),"height")
         getscopeobject 1
         getslot 3
         getlex QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"rect")
         getlex QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"colorTransform")
         callpropvoid QName(PackageNamespace(""),"colorTransform"), 2
         getlocal0
         getproperty QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"bitmap")
         iftrue ofs12
         getlocal0
         findpropstrict QName(PackageNamespace("flash.display"),"Bitmap")
         constructprop QName(PackageNamespace("flash.display"),"Bitmap"), 0
         initproperty QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"bitmap")
         findpropstrict QName(PackageNamespace(""),"addChild")
         getlocal0
         getproperty QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"bitmap")
         callpropvoid QName(PackageNamespace(""),"addChild"), 1
         ofs12:
         getlocal0
         getproperty QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"bitmap")
         getlocal0
         getproperty QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"bitmap")
         getlocal0
         getproperty QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"borderWeight")
         negate
         dup
         setlocal 4
         setproperty QName(PackageNamespace(""),"y")
         getlocal 4
         kill 4
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"bitmap")
         getscopeobject 1
         getslot 3
         setproperty QName(PackageNamespace(""),"bitmapData")
         getlocal0
         callpropvoid QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"processBitmap"), 0
         getscopeobject 1
         getslot 5
         iffalse ofs13
         getlocal0
         getproperty QName(PackageNamespace(""),"target")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$transform")
         getscopeobject 1
         getslot 5
         setproperty QName(PackageNamespace(""),"matrix3D")
         ofs13:
         findproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"capturingBitmap")
         pushfalse
         setproperty QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"capturingBitmap")
         returnvoid
         end ; code
         try from ofs4 to ofs5 target ofs7 type QName(PackageNamespace(""),"SecurityError") name QName(PackageNamespace(""),"e") end
         end ; body
         end ; method
      }
      
      protected function processBitmap() : void
      {
         trait method QName(ProtectedNamespace("spark.skins.spark:HighlightBitmapCaptureSkin"),"processBitmap")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function skin_updateCompleteHandler(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"skin_updateCompleteHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#HighlightBitmapCaptureSkin"),"capturingBitmap")
         iftrue ofs0
         findpropstrict QName(PackageNamespace(""),"invalidateDisplayList")
         callpropvoid QName(PackageNamespace(""),"invalidateDisplayList"), 0
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
