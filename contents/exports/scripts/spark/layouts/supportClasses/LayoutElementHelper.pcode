
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 3
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("LayoutElementHelper",[PackageNamespace("spark.layouts.supportClasses")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace(""),"Object")
   newclass #LayoutElementHelper
   popscope
   initproperty QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package spark.layouts.supportClasses
{
   import mx.core.mx_internal;
   
   use namespace mx_internal;
   
   public class LayoutElementHelper
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function LayoutElementHelper()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function pinBetween(param1:Number, param2:Number, param3:Number) : Number
      {
         trait method QName(PackageNamespace(""),"pinBetween")
         flag FINAL
         dispid 3
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"Math")
         getlocal3
         getlex QName(PackageNamespace(""),"Math")
         getlocal2
         getlocal1
         callproperty QName(PackageNamespace(""),"max"), 2
         callproperty QName(PackageNamespace(""),"min"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function parseConstraintValue(param1:Object) : Number
      {
         trait method QName(PackageNamespace(""),"parseConstraintValue")
         flag FINAL
         dispid 4
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         getlex QName(PackageNamespace(""),"Number")
         istypelate
         iffalse ofs0
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal1
         callproperty QName(PackageNamespace(""),"Number"), 1
         returnvalue
         ofs0:
         getlocal1
         getlex QName(PackageNamespace(""),"String")
         astypelate
         coerce_s
         setlocal2
         getlocal2
         iftrue ofs1
         getlex QName(PackageNamespace(""),"NaN")
         returnvalue
         ofs1:
         findpropstrict QName(PrivateNamespace(null,"#LayoutElementHelper"),"parseConstraintExp")
         getlocal2
         callproperty QName(PrivateNamespace(null,"#LayoutElementHelper"),"parseConstraintExp"), 1
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         getlocal3
         not
         dup
         iftrue ofs2
         pop
         getlocal3
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 1
         lessthan
         ofs2:
         iffalse ofs3
         getlex QName(PackageNamespace(""),"NaN")
         returnvalue
         ofs3:
         getlocal3
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"#LayoutElementHelper"),PackageNamespace(""),PrivateNamespace(null,"#LayoutElementHelper/1"),PackageNamespace("spark.layouts.supportClasses"),PackageInternalNs("spark.layouts.supportClasses"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("spark.layouts.supportClasses:LayoutElementHelper"),StaticProtectedNs("spark.layouts.supportClasses:LayoutElementHelper"),StaticProtectedNs("Object")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function parseConstraintExp(param1:String) : Array
      {
         trait method QName(PrivateNamespace(null,"#LayoutElementHelper"),"parseConstraintExp")
         flag FINAL
         dispid 5
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         iftrue ofs0
         pushnull
         returnvalue
         ofs0:
         getlocal1
         getlex QName(PackageNamespace(""),"RegExp")
         pushstring ":"
         pushstring "g"
         construct 2
         pushstring " "
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"replace"), 2
         coerce_s
         setlocal2
         getlocal2
         getlex QName(PackageNamespace(""),"RegExp")
         pushstring "\\s+"
         construct 1
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"split"), 1
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         getlocal3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
