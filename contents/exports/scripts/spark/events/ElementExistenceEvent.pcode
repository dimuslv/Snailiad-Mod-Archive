
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 4
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("ElementExistenceEvent",[PackageNamespace("spark.events")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"Event")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"Event")
   newclass #ElementExistenceEvent
   popscope
   popscope
   initproperty QName(PackageNamespace("spark.events"),"ElementExistenceEvent")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package spark.events
{
   import flash.events.Event;
   import mx.core.IVisualElement;
   import mx.core.mx_internal;
   
   use namespace mx_internal;
   
   public class ElementExistenceEvent extends Event
   {
      
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      public static const ELEMENT_ADD:String = "elementAdd";
      
      public static const ELEMENT_REMOVE:String = "elementRemove";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.1.0.16076"
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         findproperty QName(PackageNamespace(""),"ELEMENT_ADD")
         pushstring "elementAdd"
         initproperty QName(PackageNamespace(""),"ELEMENT_ADD")
         findproperty QName(PackageNamespace(""),"ELEMENT_REMOVE")
         pushstring "elementRemove"
         initproperty QName(PackageNamespace(""),"ELEMENT_REMOVE")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var index:int;
      
      public var element:IVisualElement;
      
      public function ElementExistenceEvent(param1:String, param2:Boolean = false, param3:Boolean = false, param4:IVisualElement = null, param5:int = -1)
      {
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace("mx.core"),"IVisualElement")
         param QName(PackageNamespace(""),"int")
         optional False()
         optional False()
         optional Null()
         optional Integer(-1)
         returns null
         
         body
         maxstack 4
         localcount 6
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         getlocal3
         constructsuper 3
         getlocal0
         getlocal 4
         initproperty QName(PackageNamespace(""),"element")
         getlocal0
         getlocal 5
         initproperty QName(PackageNamespace(""),"index")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function clone() : Event
      {
         trait method QName(PackageNamespace(""),"clone")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.events"),"Event")
         
         body
         maxstack 6
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("spark.events"),"ElementExistenceEvent")
         getlex QName(PackageNamespace(""),"type")
         getlex QName(PackageNamespace(""),"bubbles")
         getlex QName(PackageNamespace(""),"cancelable")
         getlocal0
         getproperty QName(PackageNamespace(""),"element")
         getlocal0
         getproperty QName(PackageNamespace(""),"index")
         constructprop QName(PackageNamespace("spark.events"),"ElementExistenceEvent"), 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
