
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("InvalidatingSprite",[PackageNamespace("spark.components.supportClasses")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("flash.events"),"EventDispatcher")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"DisplayObject")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"InteractiveObject")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"Sprite")
   pushscope
   getlex QName(PackageNamespace("flash.display"),"Sprite")
   newclass #InvalidatingSprite
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace("spark.components.supportClasses"),"InvalidatingSprite")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package spark.components.supportClasses
{
   import flash.display.Sprite;
   import spark.core.ISharedDisplayObject;
   
   public class InvalidatingSprite extends Sprite implements ISharedDisplayObject
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _redrawRequested:Boolean = false;
      
      public function InvalidatingSprite()
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         findproperty QName(PackageNamespace(""),"mouseChildren")
         pushfalse
         initproperty QName(PackageNamespace(""),"mouseChildren")
         findproperty QName(PackageNamespace(""),"mouseEnabled")
         pushfalse
         initproperty QName(PackageNamespace(""),"mouseEnabled")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get redrawRequested() : Boolean
      {
         trait getter QName(PackageNamespace(""),"redrawRequested")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#InvalidatingSprite"),"_redrawRequested")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set redrawRequested(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"redrawRequested")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#InvalidatingSprite"),"_redrawRequested")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
