
{
   method
   name null
   returns null
   
   body
   maxstack 2
   localcount 1
   initscopedepth 1
   maxscopedepth 8
   
   code
   getlocal0
   pushscope
   findpropstrict Multiname("EnemySpider2",[PackageNamespace("")])
   getlex QName(PackageNamespace(""),"Object")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxRect")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxObject")
   pushscope
   getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   pushscope
   getlex QName(PackageNamespace(""),"Enemy")
   newclass #EnemySpider2
   popscope
   popscope
   popscope
   popscope
   popscope
   popscope
   initproperty QName(PackageNamespace(""),"EnemySpider2")
   returnvoid
   end ; code
   end ; body
   end ; method
}

package
{
   import org.flixel.FlxG;
   
   public class EnemySpider2 extends Enemy
   {
      
      private static const IMG_WIDTH:int = 16;
      
      private static const IMG_HEIGHT:int = 16;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 0;
      
      private static const MAX_HP:int = 2100;
      
      private static const DEFENSE:int = 10;
      
      private static const OFFENSE:int = 4;
      
      private static const MOVE_TIMEOUT:Number = 0.3;
      
      private static const SPEED:Number = 85;
      
      private static var globalMoveIndex:Number = 0;
      
      private static const WAIT_TABLE:Array;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 101
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findproperty QName(PrivateNamespace(null,"#EnemySpider2"),"IMG_WIDTH")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"IMG_WIDTH")
         findproperty QName(PrivateNamespace(null,"#EnemySpider2"),"IMG_HEIGHT")
         pushbyte 16
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"IMG_HEIGHT")
         findproperty QName(PrivateNamespace(null,"#EnemySpider2"),"IMG_OFS_X")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"IMG_OFS_X")
         findproperty QName(PrivateNamespace(null,"#EnemySpider2"),"IMG_OFS_Y")
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"IMG_OFS_Y")
         findproperty QName(PrivateNamespace(null,"#EnemySpider2"),"MAX_HP")
         pushshort 2100
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"MAX_HP")
         findproperty QName(PrivateNamespace(null,"#EnemySpider2"),"DEFENSE")
         pushbyte 10
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"DEFENSE")
         findproperty QName(PrivateNamespace(null,"#EnemySpider2"),"OFFENSE")
         pushbyte 4
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"OFFENSE")
         findproperty QName(PrivateNamespace(null,"#EnemySpider2"),"MOVE_TIMEOUT")
         pushdouble 0.3
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"MOVE_TIMEOUT")
         findproperty QName(PrivateNamespace(null,"#EnemySpider2"),"SPEED")
         pushbyte 85
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"SPEED")
         findproperty QName(PrivateNamespace(null,"#EnemySpider2"),"globalMoveIndex")
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"#EnemySpider2"),"globalMoveIndex")
         findproperty QName(PrivateNamespace(null,"#EnemySpider2"),"WAIT_TABLE")
         pushdouble 0.0031435364
         pushdouble 0.5049282581
         pushdouble 0.4116654365
         pushdouble 0.5281877909
         pushdouble 0.5897768281
         pushdouble 0.1593536691
         pushdouble 0.4039032663
         pushdouble 0.4059745561
         pushdouble 0.0582864048
         pushdouble 0.7516076167
         pushdouble 0.5521423097
         pushdouble 0.5566189571
         pushdouble 0.179637362
         pushdouble 0.3594656996
         pushdouble 0.4505799066
         pushdouble 0.3204984303
         pushdouble 0.6052265986
         pushdouble 0.6324895486
         pushdouble 0.4429925385
         pushdouble 0.8837227036
         pushdouble 0.9752844916
         pushdouble 0.6930966018
         pushdouble 0.1752373743
         pushdouble 0.3443669975
         pushdouble 0.4504892571
         pushdouble 0.5988067483
         pushdouble 0.4101707911
         pushdouble 0.2408469776
         pushdouble 0.5234045926
         pushdouble 0.0236403878
         pushdouble 0.6238985334
         pushdouble 0.6958397015
         pushdouble 0.270161708
         pushdouble 0.621824504
         pushdouble 0.9523979626
         pushdouble 0.234787262
         pushdouble 0.3882103268
         pushdouble 0.2584722478
         pushdouble 0.8966220748
         pushdouble 0.6939320403
         pushdouble 0.2789706634
         pushdouble 0.0615652706
         pushdouble 0.9490876411
         pushdouble 0.3085988573
         pushdouble 0.4638467981
         pushdouble 0.6217814413
         pushdouble 0.7608899529
         pushdouble 0.4005289448
         pushdouble 0.1308170265
         pushdouble 0.4694031184
         pushdouble 0.893697234
         pushdouble 0.0653774173
         pushdouble 0.7188370915
         pushdouble 0.6329837926
         pushdouble 0.1353358423
         pushdouble 0.2568268114
         pushdouble 0.8794799448
         pushdouble 0.0097632309
         pushdouble 0.6912924617
         pushdouble 0.7049703039
         pushdouble 0.9255215652
         pushdouble 0.9475764837
         pushdouble 0.8637740622
         pushdouble 0.1508763211
         pushdouble 0.3508634319
         pushdouble 0.5790814897
         pushdouble 0.7811909111
         pushdouble 0.7848816088
         pushdouble 0.5664273614
         pushdouble 0.0356774301
         pushdouble 0.3960516107
         pushdouble 0.6490766209
         pushdouble 0.947092078
         pushdouble 0.5093130463
         pushdouble 0.1259762285
         pushdouble 0.6807200132
         pushdouble 0.5178459596
         pushdouble 0.6560252702
         pushdouble 0.5672414089
         pushdouble 0.890198107
         pushdouble 0.230094122
         pushdouble 0.642458186
         pushdouble 0.3116517752
         pushdouble 0.7473356059
         pushdouble 0.4938040994
         pushdouble 0.0920139665
         pushdouble 0.4272894969
         pushdouble 0.3406688463
         pushdouble 0.8804234661
         pushdouble 0.1334528937
         pushdouble 0.9890385972
         pushdouble 0.9199415992
         pushdouble 0.0593612118
         pushdouble 0.5765849264
         pushdouble 0.7873382929
         pushdouble 0.827340683
         pushdouble 0.1771514581
         pushdouble 0.7038809678
         pushdouble 0.5615721056
         pushdouble 0.6086805593
         newarray 100
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"WAIT_TABLE")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var moveTimeout:Number = 0;
      
      private var moveIndex:int = 0;
      
      public function EnemySpider2(param1:int, param2:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 5
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"MAX_HP")
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"DEFENSE")
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"OFFENSE")
         pushtrue
         constructsuper 6
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"EnemySpider2")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         getlocal1
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"IMG_OFS_X")
         subtract
         convert_i
         setlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"IMG_OFS_Y")
         subtract
         convert_i
         setlocal2
         findpropstrict QName(PrivateNamespace(null,"#EnemySpider2"),"globalMoveIndex")
         dup
         setlocal3
         getproperty QName(PrivateNamespace(null,"#EnemySpider2"),"globalMoveIndex")
         increment
         setlocal 4
         getlocal3
         getlocal 4
         setproperty QName(PrivateNamespace(null,"#EnemySpider2"),"globalMoveIndex")
         kill 4
         kill 3
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"globalMoveIndex")
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"WAIT_TABLE")
         getproperty QName(PackageNamespace(""),"length")
         ifnge ofs0
         findproperty QName(PrivateNamespace(null,"#EnemySpider2"),"globalMoveIndex")
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"#EnemySpider2"),"globalMoveIndex")
         ofs0:
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"globalMoveIndex")
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"moveIndex")
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"WAIT_TABLE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySpider2"),"moveIndex")
         getproperty MultinameL([PrivateNamespace(null,"#EnemySpider2"),PackageNamespace(""),PrivateNamespace(null,"#EnemySpider2/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemySpider2"),StaticProtectedNs("EnemySpider2"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"MOVE_TIMEOUT")
         multiply
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"moveTimeout")
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         pushbyte 0
         pushbyte 1
         newarray 2
         pushbyte 8
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"touch"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0
         returnvoid
         ofs0:
         findpropstrict QName(PackageNamespace(""),"onScreen")
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         iffalse ofs1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySpider2"),"moveTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"moveTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySpider2"),"moveTimeout")
         pushbyte 0
         ifnlt ofs1
         getlocal0
         dup
         setlocal2
         getproperty QName(PrivateNamespace(null,"#EnemySpider2"),"moveIndex")
         increment_i
         setlocal3
         getlocal2
         getlocal3
         setproperty QName(PrivateNamespace(null,"#EnemySpider2"),"moveIndex")
         kill 3
         kill 2
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySpider2"),"moveIndex")
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"WAIT_TABLE")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"moveIndex")
         getlocal0
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"WAIT_TABLE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#EnemySpider2"),"moveIndex")
         getproperty MultinameL([PrivateNamespace(null,"#EnemySpider2"),PackageNamespace(""),PrivateNamespace(null,"#EnemySpider2/1"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("EnemySpider2"),StaticProtectedNs("EnemySpider2"),StaticProtectedNs("Enemy"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"MOVE_TIMEOUT")
         multiply
         initproperty QName(PrivateNamespace(null,"#EnemySpider2"),"moveTimeout")
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         subtract
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         subtract
         callproperty QName(PackageNamespace(""),"atan2"), 2
         convert_d
         setlocal1
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         callproperty QName(PackageNamespace(""),"cos"), 1
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"SPEED")
         multiply
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         callproperty QName(PackageNamespace(""),"sin"), 1
         getlex QName(PrivateNamespace(null,"#EnemySpider2"),"SPEED")
         multiply
         setproperty QName(PackageNamespace(""),"y")
         ofs1:
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifnlt ofs2
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs2:
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifngt ofs3
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs3:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}
